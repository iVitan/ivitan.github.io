<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Vitan&#39;s Blog</title>
  
  <subtitle>⁣⁣⁣Stay Hungry, Stay Foolish.</subtitle>
  <link href="//xml/atom.xml" rel="self"/>
  
  <link href="https://vitan.me/"/>
  <updated>2019-12-10T01:38:54.157Z</updated>
  <id>https://vitan.me/</id>
  
  <author>
    <name>Vitan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何高效寻找开源项目</title>
    <link href="https://vitan.me/posts/OpenSourceSearch.html"/>
    <id>https://vitan.me/posts/OpenSourceSearch.html</id>
    <published>2019-11-14T10:23:35.000Z</published>
    <updated>2019-12-10T01:38:54.157Z</updated>
    
    <content type="html"><![CDATA[<p>Github 中高效寻找搜索开源项目</p><a id="more"></a><h1 id="in-name"><a href="#in-name" class="headerlink" title="in:name"></a>in:name</h1><p>搜索时使用 <code>in:name</code> 可以搜索名字包含的内容</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">in:name vue</span><br></pre></td></tr></table></figure><h2 id="搜索过滤"><a href="#搜索过滤" class="headerlink" title="搜索过滤"></a>搜索过滤</h2><ul><li>Stars 数</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">#匹配start书大于1000</span></span><br><span class="line"><span class="hljs-keyword">in</span>:name vue stasr&gt;1000</span><br></pre></td></tr></table></figure><ul><li>Forks 数</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">#匹配Forkt书大于1000</span></span><br><span class="line"><span class="hljs-keyword">in</span>:name vue forks&gt;1000</span><br></pre></td></tr></table></figure><h2 id="条件并行使用"><a href="#条件并行使用" class="headerlink" title="条件并行使用"></a>条件并行使用</h2><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">#匹配Forkt书大于1000</span></span><br><span class="line"><span class="hljs-keyword">in</span>:name vue stars&gt;1000 forks&gt;1000</span><br></pre></td></tr></table></figure><h1 id="in-description"><a href="#in-description" class="headerlink" title="in:description"></a>in:description</h1><p>在描述中搜索</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">in:description 前端</span><br></pre></td></tr></table></figure><h2 id="language"><a href="#language" class="headerlink" title="language"></a>language</h2><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">in</span>:description 前端 language:vue</span><br></pre></td></tr></table></figure><h2 id="pushed"><a href="#pushed" class="headerlink" title="pushed"></a>pushed</h2><p>更新时间</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">in</span>:description 前端 language:vue pushed &gt;2019-10-01</span><br></pre></td></tr></table></figure><h2 id="条件并行使用-1"><a href="#条件并行使用-1" class="headerlink" title="条件并行使用"></a>条件并行使用</h2><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">in</span>:description 爬虫  language:python star&gt;1000  pushed &gt;2019-10-01</span><br></pre></td></tr></table></figure><h1 id="in-readme"><a href="#in-readme" class="headerlink" title="in:readme"></a>in:readme</h1><p>在 READMME 中搜索</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">in</span>:readme security stars&gt;1000</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Github 中高效寻找搜索开源项目&lt;/p&gt;
    
    </summary>
    
      <category term="Coding" scheme="https://vitan.me/categories/Coding/"/>
    
    
      <category term="Github" scheme="https://vitan.me/tags/Github/"/>
    
      <category term="Git" scheme="https://vitan.me/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>CMD</title>
    <link href="https://vitan.me/posts/CMD.html"/>
    <id>https://vitan.me/posts/CMD.html</id>
    <published>2019-11-03T01:53:23.000Z</published>
    <updated>2019-12-10T01:38:54.141Z</updated>
    
    <content type="html"><![CDATA[<p>CMD 基础<br>转载自:<a href="https://www.cnblogs.com/kekec/p/3662125.html" target="_blank" rel="noopener">可可西</a></p><a id="more"></a><h1 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h1><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 中断命令</span><br><span class="line">Crtl + z</span><br></pre></td></tr></table></figure><h1 id="文件-目录"><a href="#文件-目录" class="headerlink" title="文件/目录"></a>文件/目录</h1><h2 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h2><table><thead><tr><th align="left">命令</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">cd</td><td align="left">显示当前目录</td></tr><tr><td align="left">cd ..</td><td align="left">上一级目录</td></tr><tr><td align="left">cd /d d:</td><td align="left">进入上次D盘所在的目录</td></tr><tr><td align="left">cd /d d:\</td><td align="left">进入d盘根目录</td></tr><tr><td align="left">cd d:</td><td align="left">显示上次d盘所在的目录</td></tr><tr><td align="left">cd /d d:\data</td><td align="left">进入d:\data目录</td></tr></tbody></table><h2 id="md"><a href="#md" class="headerlink" title="md"></a>md</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># e盘新建file目录</span><br><span class="line"><span class="hljs-built_in">md</span> e:\file </span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">md</span> movie film</span><br><span class="line"><span class="hljs-built_in">md</span> d:\test\movie</span><br></pre></td></tr></table></figure><h2 id="pushd-popd"><a href="#pushd-popd" class="headerlink" title="pushd/popd"></a>pushd/popd</h2><p>使用栈来维护当前目录</p><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">pushd</span> e:\file # 当前目录切换到e:\file</span><br><span class="line"><span class="hljs-built_in">popd</span> # 将刚才保存的e:\file弹栈，并设置为当前目录</span><br></pre></td></tr></table></figure><h2 id="dir"><a href="#dir" class="headerlink" title="dir"></a>dir</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"> # 显示当前目录中的子文件夹与文件</span><br><span class="line"> <span class="hljs-built_in">dir</span> </span><br><span class="line"></span><br><span class="line"># 只显示当前目录中的子文件夹与文件的文件名</span><br><span class="line"><span class="hljs-built_in">dir</span> /b </span><br><span class="line"></span><br><span class="line"># 分页显示当前目录中的子文件夹与文件</span><br><span class="line"><span class="hljs-built_in">dir</span> /p  </span><br><span class="line"></span><br><span class="line"># 显示当前目录中的子文件夹</span><br><span class="line"><span class="hljs-built_in">dir</span> /ad</span><br><span class="line"></span><br><span class="line"># 显示当前目录中的文件</span><br><span class="line"><span class="hljs-built_in">dir</span> /a-d </span><br><span class="line"></span><br><span class="line"> #/ 显示c:\test目录中的内容</span><br><span class="line"><span class="hljs-built_in">dir</span> c:\test </span><br><span class="line"></span><br><span class="line"> # 显示当前目录中keys.txt的信息</span><br><span class="line"><span class="hljs-built_in">dir</span> keys.txt</span><br><span class="line"></span><br><span class="line">#/ 递归显示当前目录中的内容</span><br><span class="line"><span class="hljs-built_in">dir</span> /S   </span><br><span class="line"></span><br><span class="line"># 显示当前目录下以key开头的文件和文件夹的信息</span><br><span class="line"><span class="hljs-built_in">dir</span> key*  </span><br><span class="line"></span><br><span class="line"># 只显示当前目录中隐藏的文件和目录，并按照文件大小从小到大排序</span><br><span class="line"><span class="hljs-built_in">dir</span> /AH /OS</span><br></pre></td></tr></table></figure><h2 id="tree-显示目录结构"><a href="#tree-显示目录结构" class="headerlink" title="tree 显示目录结构"></a>tree 显示目录结构</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 显示目录结构</span><br><span class="line"><span class="hljs-built_in">tree</span> d:\file</span><br></pre></td></tr></table></figure><h2 id="ren-文件或目录重命名"><a href="#ren-文件或目录重命名" class="headerlink" title="ren 文件或目录重命名"></a>ren 文件或目录重命名</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">ren</span> <span class="hljs-number">1</span>.txt <span class="hljs-number">1</span>.bat</span><br><span class="line"><span class="hljs-built_in">ren</span> c:\test test_01</span><br><span class="line"><span class="hljs-built_in">ren</span> Logs.txt Logs-<span class="hljs-variable">%date:~0,4%</span><span class="hljs-variable">%date:~5,2%</span><span class="hljs-variable">%date:~8,2%</span>_<span class="hljs-variable">%time:~0,2%</span><span class="hljs-variable">%time:~3,2%</span>.txt</span><br></pre></td></tr></table></figure><h2 id="rd-删除目录"><a href="#rd-删除目录" class="headerlink" title="rd 删除目录"></a>rd 删除目录</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">rd</span> movie</span><br><span class="line"><span class="hljs-built_in">rd</span> /s /q d:\test  # 使用安静模式删除</span><br></pre></td></tr></table></figure><h2 id="move-移动"><a href="#move-移动" class="headerlink" title="move 移动"></a>move 移动</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">move</span> *.png png</span><br><span class="line"><span class="hljs-built_in">move</span> /Y *.png test</span><br><span class="line"><span class="hljs-built_in">move</span> <span class="hljs-number">1</span>.png d:\png\<span class="hljs-number">2</span>.png # 移动并重命名</span><br><span class="line"><span class="hljs-built_in">move</span> test d:\new # d:\new不存在则移动并重命名</span><br></pre></td></tr></table></figure><h2 id="del-删除"><a href="#del-删除" class="headerlink" title="del 删除"></a>del 删除</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">del</span> test</span><br><span class="line"><span class="hljs-built_in">del</span> /f test</span><br><span class="line"></span><br><span class="line"># 删除当前目录下的test文件夹中所有文件及d:\test2中所有doc文件（含只读文件；递归子目录下的文件；删除前不确认）</span><br><span class="line"><span class="hljs-built_in">del</span> /f /s /q test d:\test2\*.doc </span><br><span class="line"></span><br><span class="line"># 删除当前目录下所有只读文件</span><br><span class="line"><span class="hljs-built_in">del</span> /ar *.*</span><br><span class="line"></span><br><span class="line"># 删除当前目录下除系统文件以外的所有文件</span><br><span class="line"><span class="hljs-built_in">del</span> /a-s *.*</span><br></pre></td></tr></table></figure><ul><li>/ar、/ah、/as、/aa 分别表示删除只读、隐藏、系统、存档文件</li><li>/a-r、/a-h、/a-s、/a-a 分别表示删除除只读、隐藏、系统、存档以外的文件</li></ul><h2 id="replace-替换"><a href="#replace-替换" class="headerlink" title="replace 替换"></a>replace 替换</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 替换为d:\png中的<span class="hljs-number">1</span>.png</span><br><span class="line"><span class="hljs-built_in">replace</span> d:\<span class="hljs-number">1</span>.png d:\png</span><br></pre></td></tr></table></figure><h2 id="attrib-查看或修改文件或目录的属性"><a href="#attrib-查看或修改文件或目录的属性" class="headerlink" title="attrib  查看或修改文件或目录的属性"></a>attrib  查看或修改文件或目录的属性</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> # 查看当前目录下<span class="hljs-number">1</span>.txt的属性</span><br><span class="line"><span class="hljs-built_in">attrib</span> <span class="hljs-number">1</span>.txt  </span><br><span class="line"></span><br><span class="line"># 去掉<span class="hljs-number">1</span>.txt的只读属性</span><br><span class="line"><span class="hljs-built_in">attrib</span> -R <span class="hljs-number">1</span>.txt </span><br><span class="line"></span><br><span class="line"># 隐藏movie文件夹</span><br><span class="line"><span class="hljs-built_in">attrib</span> +H movie</span><br></pre></td></tr></table></figure><ul><li>A：存档  R：只读  S：系统  H：隐藏</li></ul><h2 id="assoc-设置’文件扩展名’关联到的’文件类型’"><a href="#assoc-设置’文件扩展名’关联到的’文件类型’" class="headerlink" title="assoc 设置’文件扩展名’关联到的’文件类型’"></a>assoc 设置’文件扩展名’关联到的’文件类型’</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 显示所有'文件扩展名'关联</span><br><span class="line"><span class="hljs-built_in">assoc</span></span><br><span class="line"></span><br><span class="line"># 显示.txt代表的'文件类型'，结果显示.txt=txtfile</span><br><span class="line"><span class="hljs-built_in">assoc</span> .txt </span><br><span class="line"></span><br><span class="line">#显示.doc代表的'文件类型'，结果显示.doc=Word.Document.<span class="hljs-number">8</span></span><br><span class="line"><span class="hljs-built_in">assoc</span> .doc </span><br><span class="line"></span><br><span class="line"># 显示.exe代表的'文件类型'，结果显示.exe=exefile</span><br><span class="line"><span class="hljs-built_in">assoc</span> .exe</span><br><span class="line"></span><br><span class="line"># 恢复.txt的正确关联</span><br><span class="line"><span class="hljs-built_in">assoc</span> .txt=txtfile</span><br></pre></td></tr></table></figure><h2 id="forfiles-递归目录执行命令"><a href="#forfiles-递归目录执行命令" class="headerlink" title="forfiles 递归目录执行命令"></a>forfiles 递归目录执行命令</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#在当前目录下查找含有.svn的文件或目录（递归子目录），并对该目录执行指定版本号svn更新</span><br><span class="line">forfiles /p . /m .svn /s /c "<span class="hljs-built_in">cmd</span> /c svn up -r12005" </span><br><span class="line"></span><br><span class="line"># 在c:\myfiles目录下查找含有.svn的文件或目录（递归子目录），并对该目录执行指定版本号svn更新</span><br><span class="line">forfiles /p c:\myfiles /m .svn /s /c "<span class="hljs-built_in">cmd</span> /c svn up -r12005"</span><br></pre></td></tr></table></figure><h2 id="文件查看"><a href="#文件查看" class="headerlink" title="文件查看"></a>文件查看</h2><ul><li>type 显示文本文件内容</li></ul><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#显示c盘中<span class="hljs-number">11</span>.txt的文本内容</span><br><span class="line"><span class="hljs-built_in">type</span> c:\<span class="hljs-number">11</span>.txt </span><br><span class="line"></span><br><span class="line"># 显示当前目录下conf.ini的文本内容</span><br><span class="line"><span class="hljs-built_in">type</span> conf.ini   </span><br><span class="line"></span><br><span class="line"># 分页显示c盘中<span class="hljs-number">11</span>.txt的文本内容</span><br><span class="line"><span class="hljs-built_in">type</span> c:\<span class="hljs-number">11</span>.txt | <span class="hljs-built_in">more</span></span><br></pre></td></tr></table></figure><ul><li>more 逐屏的显示文本文件内容</li></ul><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">more</span> <span class="hljs-built_in">con</span>.txt</span><br><span class="line"># Space:下一屏 q:退出</span><br></pre></td></tr></table></figure><h1 id="拷贝"><a href="#拷贝" class="headerlink" title="拷贝"></a>拷贝</h1><h2 id="copy-拷贝文件"><a href="#copy-拷贝文件" class="headerlink" title="copy 拷贝文件"></a>copy 拷贝文件</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">copy</span> test.txt d:\txt</span><br><span class="line"><span class="hljs-built_in">copy</span> movie d:\</span><br><span class="line"><span class="hljs-built_in">copy</span> /Y test.txt d:\txt</span><br><span class="line"></span><br><span class="line"># 将当前目录下的art_2.<span class="hljs-number">7</span>z.开头的所有文件（按照名称升序排序）依次合并生成art_2.<span class="hljs-number">7</span>z</span><br><span class="line"><span class="hljs-built_in">copy</span> /B art_2.<span class="hljs-number">7</span>z.* art_2.<span class="hljs-number">7</span>z   </span><br><span class="line"></span><br><span class="line"># 将当前目录下的art_2.<span class="hljs-number">7</span>z.<span class="hljs-number">001</span>、art_2.<span class="hljs-number">7</span>z.<span class="hljs-number">002</span>文件合并生成art_2.<span class="hljs-number">7</span>z</span><br><span class="line"><span class="hljs-built_in">copy</span> /B art_2.<span class="hljs-number">7</span>z.<span class="hljs-number">001</span>+art_2.<span class="hljs-number">7</span>z.<span class="hljs-number">002</span> art_2.<span class="hljs-number">7</span>z</span><br></pre></td></tr></table></figure><h2 id="xcopy"><a href="#xcopy" class="headerlink" title="xcopy"></a>xcopy</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 将c:\bat\hai中的所有内容拷贝到d:\hello中  注意：需要在hello后加上\  表示hello为一个目录，否则<span class="hljs-built_in">xcopy</span>会询问hello是F，还是D</span><br><span class="line"><span class="hljs-built_in">xcopy</span> c:\bat\hai d:\hello\ /y /h /e /f /c </span><br><span class="line"></span><br><span class="line"># 将c:\bat\hai中的<span class="hljs-number">2019</span>年<span class="hljs-number">11</span>月<span class="hljs-number">3</span>日后更改的文件拷贝到d:\hello中</span><br><span class="line"><span class="hljs-built_in">xcopy</span> c:\bat\hai d:\hello\ /d:<span class="hljs-number">11</span>-<span class="hljs-number">03</span>-<span class="hljs-number">2019</span></span><br></pre></td></tr></table></figure><h2 id="robocopy"><a href="#robocopy" class="headerlink" title="robocopy"></a>robocopy</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 将当前目录下Plugins中所有内容（排除名为Intermediate和Binaries的文件夹）保留目录结构拷贝到当前目录下的PluginsDest中（PluginsDest不存在会自动创建）</span><br><span class="line">robocopy .\Plugins .\PluginsDest /MIR /xd Intermediate Binaries  </span><br><span class="line"></span><br><span class="line"># 将c:\test中所有内容（排除名为UE4Editor-SGame-Win64-DebugGame.dll和pdb后缀的文件）保留目录结构拷贝到d:\test2中（d:\test2不存在会自动创建）</span><br><span class="line">robocopy c:\test d:\test2 /MIR /xd Intermediate /xf UE4Editor-SGame-Win64-DebugGame.dll *.pdb</span><br></pre></td></tr></table></figure><h1 id="mklink-符号链接"><a href="#mklink-符号链接" class="headerlink" title="mklink 符号链接"></a>mklink 符号链接</h1><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#  创建D盘Users目录链接到C盘，并命名为Users</span><br><span class="line">mklink /j "C:\Users" "D:\Users"</span><br></pre></td></tr></table></figure><ul><li>mklink [[/d] | [/h] | [/j]] Link Target</li></ul><ol><li>/d 创建目录符号链接。黙认为文件符号链接。</li><li>/h　　 创建硬链接，而不是符号链接。</li><li>/j　　　创建目录联接。</li><li>Link　　指定新的符号链接名称。</li><li>Target　指定新链接引用的路径(相对或绝对)。</li></ol><h1 id="注册表命令"><a href="#注册表命令" class="headerlink" title="注册表命令"></a>注册表命令</h1><table><thead><tr><th align="left">参数</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">KeyName [\Machine]FullKey</td><td align="left">Machine为远程机器的机器名 - 忽略默认到当前机器。远程机器上只有 HKLM 和 HKU。FullKey ROOTKEY+SubKey。ROOTKEY [ HKLM | HKCU| HKCR| HKU |  HKCC ]。SubKey 所选ROOTKEY下注册表项的完整名</td></tr><tr><td align="left">/v</td><td align="left">所选项之下要添加的值名</td></tr><tr><td align="left">/ve</td><td align="left">为注册表项添加空白值名&lt;无名称&gt;</td></tr><tr><td align="left">/t</td><td align="left">RegKey 数据类型: [ REG_SZ | REG_MULTI_SZ | REG_DWORD_BIG_ENDIAN| REG_DWORD| REG_BINARY|  REG_DWORD_LITTLE_ENDIAN| REG_NONE | REG_EXPAND_SZ ]如果忽略，则采用 REG_SZ</td></tr><tr><td align="left">/s</td><td align="left">指定一个在 REG_MULTI_SZ 数据字符串中, 用作分隔符的字符；如果忽略，则将””用作分隔符</td></tr><tr><td align="left">/d</td><td align="left">要分配给添加的注册表ValueName的数据</td></tr><tr><td align="left">/f</td><td align="left">不提示，强行改写现有注册表项</td></tr></tbody></table><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"># 强制添加一条开机启动c:\tools\myapp.exe程序的注册表项</span><br><span class="line">reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" /v MyApp /t REG_SZ /d "c:\tools\myapp.exe" /f  </span><br><span class="line"></span><br><span class="line"># 解决<span class="hljs-number">32</span>位xp打开ioa后，弹出的框关不掉问题</span><br><span class="line">reg add "HKLM\SOFTWARE\ScmClient" /v AgreementConfirmed /t REG_SZ /d <span class="hljs-number">1</span> /f  </span><br><span class="line"></span><br><span class="line"># 强制添加一条加速关闭应用程序的注册表项</span><br><span class="line">reg add "HKCU\ControlPanel\Desktop" /v WaitToKIllAppTimeOut /t REG_SZ /d <span class="hljs-number">10000</span> /f </span><br><span class="line"></span><br><span class="line"> # 将JdkPath_h4127442381设置为空</span><br><span class="line">reg add "hkcu\software\Unity Technologies\Unity Editor <span class="hljs-number">4</span>.x" /v JdkPath_h4127442381 /t REG_SZ /f</span><br><span class="line"></span><br><span class="line"># 强制添加windbg打开dump文件到右键菜单的注册表项（不指明/v，键值将写入默认值名中）</span><br><span class="line">reg add "HKCR\*\shell\WinDbg\command" /t REG_SZ /d "\"D:\Program Files (x86)\windbg\windbg.exe\" -z \"%<span class="hljs-number">1</span>\" " /f    </span><br><span class="line"></span><br><span class="line"># 强制添加winhex到右键菜单的注册表项（不指明/v，键值将写入默认值名中）</span><br><span class="line">reg add "HKCR\*\shell\WinHex\command" /t REG_SZ /d "\"D:\software-setup\system\winhex\winhex.exe\"  \"%<span class="hljs-number">1</span>\" " /f </span><br><span class="line"></span><br><span class="line">#为IE设置代理：http://txp-<span class="hljs-number">01</span>.tencent.com/proxy.pac</span><br><span class="line">reg add "hkcu\software\microsoft\windows\currentversion\internet settings" /v AutoConfigURL /t REG_SZ /d "http://txp-<span class="hljs-number">01</span>.tencent.com/proxy.pac" /f  </span><br><span class="line"></span><br><span class="line"> # 关闭IE代理服务器选项</span><br><span class="line">reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings" /v ProxyEnable /t REG_DWORD /d <span class="hljs-number">0</span> /f </span><br><span class="line"></span><br><span class="line"># 为Procmon.exe工具（Process Monitor为其属性面板上的描述名）添加License同意</span><br><span class="line">reg add "hkcu\software\Sysinternals\Process Monitor" /v EulaAccepted /t REG_DWORD /d <span class="hljs-number">1</span> /f  </span><br><span class="line"></span><br><span class="line">#强制删除值名的MyApp的注册表项</span><br><span class="line">reg delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" /v MyApp /f  </span><br><span class="line"></span><br><span class="line"># 强制删除让任务栏里的任务管理器为灰色的注册表项</span><br><span class="line">reg delete "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\taskmgr.exe" /f  </span><br><span class="line"></span><br><span class="line"># 删除http代理</span><br><span class="line">reg delete HKEY_CURRENT_USER\Environment /v HTTP_proxy /f  </span><br><span class="line"></span><br><span class="line"> # 删除https代理</span><br><span class="line">reg delete HKEY_CURRENT_USER\Environment /v HTTPS_proxy /f </span><br><span class="line"></span><br><span class="line"> # 强制复制winmine下所有的子项与值到winminebk中</span><br><span class="line">reg <span class="hljs-built_in">copy</span> "hkcu\software\microsoft\winmine" "hkcu\software\microsoft\winminebk" /s /f </span><br><span class="line"></span><br><span class="line"> # 导出winmine下所有的子项与值到</span><br><span class="line">reg export "hkcu\software\microsoft\winmine" c:\regbak\winmine.reg c:\regbak\winmine.reg文件中</span><br><span class="line"></span><br><span class="line"># 导入c:\regbak\winmine.reg文件到注册表中</span><br><span class="line">reg import c:\regbak\winmine.reg  </span><br><span class="line"></span><br><span class="line">#查询ie的安装路径</span><br><span class="line">reg query "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\IEXPLORE.EXE" /s   </span><br><span class="line"></span><br><span class="line"># 查询.dsw默认值</span><br><span class="line">reg query HKCR\.dsw /ve  </span><br><span class="line"></span><br><span class="line"># 查询QQGame安装路径</span><br><span class="line">reg query HKEY_CURRENT_USER\Software\Tencent\QQGame\SYS /v GameDirectory</span><br></pre></td></tr></table></figure><ul><li>注册表中%1 %2 %3 %4的含义：–  %1表示文件列表，%2表示默认打印机，%3表示驱动器，%4表示端口</li></ul><h1 id="命令顺序"><a href="#命令顺序" class="headerlink" title="命令顺序"></a>命令顺序</h1><h2 id><a href="#" class="headerlink" title="@#@"></a>@#@</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">cd</span> /d d:\src&amp;work.exe /o c:\result.txt # 先将当前工作目录切换到d:\src下，然后执行work.exe /o c:\result.txt命令</span><br></pre></td></tr></table></figure><h2 id="amp-amp"><a href="#amp-amp" class="headerlink" title="&amp;&amp;"></a>&amp;&amp;</h2><p>&amp;&amp;  顺序执行多条命令，当碰到执行出错的命令后将不执行后面的命令</p><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 如果找到了"ok"字样，就显示"成功"，找不到就不显示</span><br><span class="line"><span class="hljs-built_in">find</span> "ok" c:\test.txt &amp;&amp; <span class="hljs-built_in">echo</span> 成功</span><br></pre></td></tr></table></figure><h2 id="-1"><a href="#-1" class="headerlink" title="||"></a>||</h2><p>||   顺序执行多条命令，当碰到执行正确的命令后将不执行后面的命令</p><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 如果找不到"ok"字样，就显示"不成功"，找到了就不显示</span><br><span class="line"><span class="hljs-built_in">find</span> "ok" c:\test.txt || <span class="hljs-built_in">echo</span> 不成功</span><br></pre></td></tr></table></figure><h2 id="-2"><a href="#-2" class="headerlink" title="|"></a>|</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">dir</span> *.* /s/a | <span class="hljs-built_in">find</span> /c ".exe"</span><br><span class="line"><span class="hljs-built_in">dir</span> *.* /s/a <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span> | <span class="hljs-built_in">find</span> /c ".exe"</span><br></pre></td></tr></table></figure><h1 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h1><h2 id="gt"><a href="#gt" class="headerlink" title="&gt;"></a>&gt;</h2><p>将当前命令输出以覆盖的方式重定向</p><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">tasklist &gt; p1.txt</span><br><span class="line">tasklist <span class="hljs-number">1</span>&gt; p1.txt  # 等同于：tasklist &gt; p1.txt</span><br><span class="line"></span><br><span class="line"> #输出结果（stdout）打印在屏幕上，错误信息（stderr）以覆盖的方式重定向到p1.txt中（注：bin目录不存在时，会输出错误信息）</span><br><span class="line"><span class="hljs-built_in">dir</span> bin <span class="hljs-number">2</span>&gt; p1.txt </span><br><span class="line"></span><br><span class="line"> # 将错误信息（stderr）重定向到输出结果（stdout），然后将输出结果（stdout）以覆盖的方式重定向到p1.txt中（注：bin目录不存在时，会输出错误信息）</span><br><span class="line"><span class="hljs-built_in">dir</span> bin &gt; p1.txt <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span> </span><br><span class="line"></span><br><span class="line"> # 将输出结果（stdout）重定向到错误信息（stderr），然后将错误信息（stderr）以覆盖的方式重定向到p1.txt中（注：bin目录不存在时，会输出错误信息） 注：与上条命令结果一致</span><br><span class="line"><span class="hljs-built_in">dir</span> bin <span class="hljs-number">2</span>&gt; p1.txt <span class="hljs-number">1</span>&gt;&amp;<span class="hljs-number">2</span> </span><br><span class="line"></span><br><span class="line"># 屏幕上不打印tasklist的输出结果（stdout），错误信息（stderr）仍会打印</span><br><span class="line">tasklist &gt;<span class="hljs-built_in">nul</span>   </span><br><span class="line"></span><br><span class="line"># 屏幕上不打印命令的错误信息（stderr），输出结果（stdout）仍会打印（注：bin目录不存在时，会输出错误信息）</span><br><span class="line"><span class="hljs-built_in">dir</span> bin <span class="hljs-number">2</span>&gt;<span class="hljs-built_in">nul</span>  </span><br><span class="line"></span><br><span class="line">#  将命令的错误信息（stderr）重定向到输出结果（stdout），然后不打印输出结果（stdout）【屏幕上错误信息（stderr）和输出结果（stdout）都不打印】（注：bin目录不存在时，会输出错误信息）</span><br><span class="line"><span class="hljs-built_in">dir</span> bin &gt;<span class="hljs-built_in">nul</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span>  </span><br><span class="line"></span><br><span class="line">  # 将命令的输出结果（stdout）重定向到错误信息（stderr），然后不打印错误信息（stderr）【屏幕上错误信息（stderr）和输出结果（stdout）都不打印】（注：bin目录不存在时，会输出错误信息）</span><br><span class="line"><span class="hljs-built_in">dir</span> bin <span class="hljs-number">2</span>&gt;<span class="hljs-built_in">nul</span> <span class="hljs-number">1</span>&gt;&amp;<span class="hljs-number">2</span></span><br></pre></td></tr></table></figure><h2 id="gt-gt"><a href="#gt-gt" class="headerlink" title="&gt;&gt;"></a>&gt;&gt;</h2><p>将当前命令输出以追加的方式重定向</p><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 将tasklist的输出结果（stdout）以追加的方式重定向到p2.txt文件中（注：tasklist的输出结果就不会打印到屏幕上了）</span><br><span class="line">tasklist &gt;&gt; p2.txt</span><br><span class="line"> </span><br><span class="line">tasklist <span class="hljs-number">1</span>&gt;&gt; p2.txt  # 等同于：tasklist &gt;&gt; p2.txt</span><br><span class="line"></span><br><span class="line"># 输出结果（stdout）打印在屏幕上，错误信息（stderr）以追加的方式重定向到p2.txt中（注：bin目录不存在时，会输出错误信息）</span><br><span class="line"><span class="hljs-built_in">dir</span> bin <span class="hljs-number">2</span>&gt;&gt; p2.txt </span><br><span class="line"></span><br><span class="line"># 将错误信息（stderr）重定向到输出结果（stdout），然后将输出结果（stdout）以追加的方式重定向到p2.txt中（注：bin目录不存在时，会输出错误信息）</span><br><span class="line"><span class="hljs-built_in">dir</span> bin &gt;&gt; p2.txt <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span> </span><br><span class="line"></span><br><span class="line"># 将输出结果（stdout）重定向到错误信息（stderr），然后将错误信息（stderr）以追加的方式重定向到p2.txt中（注：bin目录不存在时，会输出错误信息） 注：与上条命令结果一致</span><br><span class="line"><span class="hljs-built_in">dir</span> bin <span class="hljs-number">2</span>&gt;&gt; p2.txt <span class="hljs-number">1</span>&gt;&amp;<span class="hljs-number">2</span></span><br></pre></td></tr></table></figure><h2 id="lt"><a href="#lt" class="headerlink" title="&lt;"></a>&lt;</h2><p> 从文件中获得输入信息，而不是从屏幕上，一般用于date time label等需要等待输入的命令<br> <figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">date</span> &lt;temp.txt  // temp.txt中的内容为<span class="hljs-number">2005</span>-<span class="hljs-number">05</span>-<span class="hljs-number">01</span></span><br></pre></td></tr></table></figure></p><h2 id="-3"><a href="#-3" class="headerlink" title="@"></a>@</h2><p> @   命令修饰符  在执行命令前，不打印出该命令的内容</p><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@<span class="hljs-built_in">cd</span> /d d:\me   // 执行该命令时，不打印出命令的内容：<span class="hljs-built_in">cd</span> /d d:/me</span><br></pre></td></tr></table></figure><h2 id="-4"><a href="#-4" class="headerlink" title=","></a>,</h2><p>在某些特殊的情况下可以用来代替空格使用</p><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">dir</span>,c:\   // 相当于：<span class="hljs-built_in">dir</span> c:\</span><br></pre></td></tr></table></figure><h2 id="-5"><a href="#-5" class="headerlink" title=";"></a>;</h2><p>当命令相同的时候,可以将不同的目标用;隔离开来但执行效果不变。如执行过程中发生错误则只返回错误报告但程序还是会继续执行</p><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">dir</span> c:\;d:\;e:\   // 相当于顺序执行：<span class="hljs-built_in">dir</span> c:\    <span class="hljs-built_in">dir</span> d:\     <span class="hljs-built_in">dir</span> e:\</span><br></pre></td></tr></table></figure><h1 id="时间日期"><a href="#时间日期" class="headerlink" title="时间日期"></a>时间日期</h1><h2 id="time"><a href="#time" class="headerlink" title="time"></a>time</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">time</span>  # 显示或设置当前时间</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">time</span> /t  # 显示当前时间</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">time</span>   # 设置新的当前时间（格式：hh:mm:ss），直接回车则表示放弃设置</span><br></pre></td></tr></table></figure><h2 id="date"><a href="#date" class="headerlink" title="date"></a>date</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">date</span> /t  # 显示当前日期</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">date</span>  # 设置新的当前日期（格式：YYYY/MM/DD），直接回车则表示放弃设置</span><br></pre></td></tr></table></figure><h1 id="BAT"><a href="#BAT" class="headerlink" title="BAT"></a>BAT</h1><h2 id="显示"><a href="#显示" class="headerlink" title="显示"></a>显示</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">cls</span>  # 清除屏幕</span><br><span class="line"><span class="hljs-built_in">ver</span>  # 显示当前windows系统的版本号</span><br><span class="line">winver  # 弹框显示当前windows系统信息</span><br><span class="line">hostname  # 显示当前机器名</span><br><span class="line"><span class="hljs-built_in">vol</span>  # 显示当前分区的卷标</span><br><span class="line"><span class="hljs-built_in">label</span>  # 显示当前分区的卷标，同时提示输入新卷标</span><br><span class="line"><span class="hljs-built_in">label</span> c:system  # 设置c盘的卷标为system</span><br></pre></td></tr></table></figure><h2 id="echo"><a href="#echo" class="headerlink" title="echo"></a>echo</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> # 输出一个"回车换行"，空白行</span><br><span class="line"><span class="hljs-built_in">echo</span>. </span><br><span class="line"></span><br><span class="line"># 后续所有命令在执行前，不打印出命令的内容</span><br><span class="line"><span class="hljs-built_in">echo</span> off </span><br><span class="line"></span><br><span class="line"># 后续所有命令在执行前，打印出命令的内容</span><br><span class="line"><span class="hljs-built_in">echo</span> on   </span><br><span class="line"></span><br><span class="line">#/ 输出<span class="hljs-number">123</span>到终端屏幕</span><br><span class="line"><span class="hljs-built_in">echo</span> <span class="hljs-number">123</span> </span><br><span class="line"></span><br><span class="line"># 输出Hello World<span class="hljs-variable">!!!</span>到终端屏幕</span><br><span class="line"><span class="hljs-built_in">echo</span> "Hello World<span class="hljs-variable">!!!</span>"   </span><br><span class="line"></span><br><span class="line">#每个命令运行结束，可以用这个命令行格式查看返回码；默认值为<span class="hljs-number">0</span>，一般命令执行出错会设<span class="hljs-keyword">errorlevel</span>为<span class="hljs-number">1</span></span><br><span class="line"><span class="hljs-built_in">echo</span> <span class="hljs-variable">%errorlevel%</span>   </span><br><span class="line"></span><br><span class="line"># 输出test的字符串到当前目录中的p1.txt文件中（以覆盖的方式）</span><br><span class="line"><span class="hljs-built_in">echo</span> test &gt; p1.txt</span><br></pre></td></tr></table></figure><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 显示变量p代表的字符串，即aa1bb1aa2bb2</span><br><span class="line"><span class="hljs-built_in">echo</span> <span class="hljs-variable">%p%</span></span><br><span class="line"></span><br><span class="line">#显示变量p中第<span class="hljs-number">6</span>个字符以后的所有字符，即aa2bb2</span><br><span class="line"><span class="hljs-built_in">echo</span> <span class="hljs-variable">%p:~6%</span> </span><br><span class="line"></span><br><span class="line"># 显示第<span class="hljs-number">6</span>个字符以后的<span class="hljs-number">3</span>个字符，即aa2</span><br><span class="line"><span class="hljs-built_in">echo</span> <span class="hljs-variable">%p:~6,3%</span> </span><br><span class="line"></span><br><span class="line"># 显示最后面的<span class="hljs-number">2</span>个字符，即b2</span><br><span class="line"><span class="hljs-built_in">echo</span> <span class="hljs-variable">%p:~-2%</span></span><br><span class="line"></span><br><span class="line"># 显示除了最后<span class="hljs-number">2</span>个字符以外的其它字符，即aa1bb1aa2b</span><br><span class="line"><span class="hljs-built_in">echo</span> <span class="hljs-variable">%p:~0,-2%</span></span><br><span class="line"></span><br><span class="line"># 用c替换变量p中所有的aa，即显示c1bb1c2bb2</span><br><span class="line"><span class="hljs-built_in">echo</span> <span class="hljs-variable">%p:aa=c%</span></span><br><span class="line"></span><br><span class="line"># 将变量p中的所有aa字符串置换为空，即显示<span class="hljs-number">1</span>bb12bb2</span><br><span class="line"><span class="hljs-built_in">echo</span> <span class="hljs-variable">%p:aa=%</span> </span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">echo</span> <span class="hljs-variable">%p:*bb=c%</span></span><br><span class="line"># 第一个bb及其之前的所有字符被替换为c，即显示c1aa2bb2</span><br></pre></td></tr></table></figure><h2 id="set"><a href="#set" class="headerlink" title="set"></a>set</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 显示当前用户所有的环境变量</span><br><span class="line"><span class="hljs-built_in">set</span>  </span><br><span class="line"></span><br><span class="line"># 查看<span class="hljs-built_in">path</span>的环境变量值（准确的说是查看以<span class="hljs-built_in">path</span>开头的环境变量）</span><br><span class="line"><span class="hljs-built_in">set</span> <span class="hljs-built_in">path</span> </span><br><span class="line"></span><br><span class="line">#清空<span class="hljs-built_in">path</span>变量</span><br><span class="line"><span class="hljs-built_in">set</span> <span class="hljs-built_in">path</span>=   </span><br><span class="line"></span><br><span class="line"># 将<span class="hljs-built_in">path</span>变量设置为d:\execute（注：修改的<span class="hljs-built_in">path</span>只会影响当前回话，也不会存储到系统配置中去；当前<span class="hljs-built_in">cmd</span>窗口关闭，新设置的<span class="hljs-built_in">path</span>也就不存在了</span><br><span class="line"><span class="hljs-built_in">set</span> <span class="hljs-built_in">path</span>=d:\execute ）</span><br><span class="line"></span><br><span class="line"># 在<span class="hljs-built_in">path</span>变量中添加d:\execute（注：修改的<span class="hljs-built_in">path</span>只会影响当前回话，也不会存储到系统配置中去；当前<span class="hljs-built_in">cmd</span>窗口关闭，新设置的<span class="hljs-built_in">path</span>也就不存在了）</span><br><span class="line"><span class="hljs-built_in">set</span> <span class="hljs-built_in">path</span>=<span class="hljs-variable">%path%</span>;d:\execute  </span><br><span class="line"></span><br><span class="line"># 设置变量p，并赋值为aa1bb1aa2bb2</span><br><span class="line"><span class="hljs-built_in">set</span> p=aa1bb1aa2bb2</span><br></pre></td></tr></table></figure><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 设置变量p，赋值为 <span class="hljs-variable">%p:*bb=c%</span> ，即c1aa2bb2</span><br><span class="line"><span class="hljs-built_in">set</span> p=<span class="hljs-variable">%p:*bb=c%</span> </span><br><span class="line"></span><br><span class="line"># 设置p为数值型变量，值为<span class="hljs-number">39</span></span><br><span class="line"><span class="hljs-built_in">set</span> /a p=<span class="hljs-number">39</span> </span><br><span class="line"></span><br><span class="line"># 支持运算符，有小数时用去尾法，<span class="hljs-number">39</span>/<span class="hljs-number">10</span>=<span class="hljs-number">3</span>.<span class="hljs-number">9</span>，去尾得<span class="hljs-number">3</span>，p=<span class="hljs-number">3</span></span><br><span class="line"><span class="hljs-built_in">set</span> /a p=<span class="hljs-number">39</span>/<span class="hljs-number">10</span> </span><br><span class="line"></span><br><span class="line"> # 用 /a 参数时，在 = 后面的变量可以不加%直接引用</span><br><span class="line"><span class="hljs-built_in">set</span> /a p=p/<span class="hljs-number">10</span></span><br><span class="line"></span><br><span class="line"># &amp;运算要加引号。其它支持的运算符参见<span class="hljs-built_in">set</span>/?</span><br><span class="line"><span class="hljs-built_in">set</span> /a p="<span class="hljs-number">1</span>&amp;<span class="hljs-number">0</span>"</span><br></pre></td></tr></table></figure><h2 id="path"><a href="#path" class="headerlink" title="path"></a>path</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 显示当前<span class="hljs-built_in">path</span>变量的值</span><br><span class="line"><span class="hljs-built_in">path</span> </span><br><span class="line"></span><br><span class="line"># 清除所有搜索路径设置并指示<span class="hljs-built_in">cmd</span>.exe只在当前目录中搜索</span><br><span class="line"><span class="hljs-built_in">path</span> ;</span><br><span class="line"></span><br><span class="line">#将d:\xxx路径添加到<span class="hljs-built_in">path</span>中</span><br><span class="line"><span class="hljs-built_in">path</span> d:\xxx;<span class="hljs-variable">%PATH%</span></span><br></pre></td></tr></table></figure><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">title</span> 正在做命令行测试  # 修改当前<span class="hljs-built_in">cmd</span>窗口的标题栏文字为正在做命令行测试</span><br><span class="line"></span><br><span class="line">prompt orz:   # 将命令提示符修改为orz:</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">print</span> <span class="hljs-number">1</span>.txt  #使用设置好的打印机来打印<span class="hljs-number">1</span>.txt文本文件</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">call</span> ff.bat   # 调用执行ff.bat脚本（ff.bat脚本执行完原脚本才会往下执行）</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">exit</span> # 退出当前<span class="hljs-built_in">CMD</span>实例</span><br><span class="line"><span class="hljs-built_in">pause</span> # 暂停批处理程序，并显示出：请按任意键继续....</span><br></pre></td></tr></table></figure><h2 id="start"><a href="#start" class="headerlink" title="start"></a>start</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">start</span>  # 运行某程序或命令</span><br><span class="line"></span><br><span class="line"># 最大化的方式启动记事本</span><br><span class="line"><span class="hljs-built_in">start</span> /max notepad.exe</span><br><span class="line"></span><br><span class="line"> # 最小化的方式启动计算器</span><br><span class="line"><span class="hljs-built_in">start</span> /min calc.exe </span><br><span class="line"></span><br><span class="line"># 最小化的方式启动Proxifier代理工具</span><br><span class="line"><span class="hljs-built_in">start</span> /min "" d:\Proxifier.exe  </span><br><span class="line"></span><br><span class="line"># 启动一个<span class="hljs-built_in">cmd</span>实例窗口，并运行tasklist</span><br><span class="line"><span class="hljs-built_in">start</span>  tasklist </span><br><span class="line"></span><br><span class="line"># 调用资源管理器打开f盘</span><br><span class="line"><span class="hljs-built_in">start</span> explorer f:\  </span><br><span class="line"></span><br><span class="line"># 启动ie并打开www.qq.com网址</span><br><span class="line">strat iexplore "www.qq.com" </span><br><span class="line"></span><br><span class="line">#启动开始执行ff.bat（启动ff.bat脚本后，原脚本继续执行，不会等ff.bat脚本执行完）</span><br><span class="line"><span class="hljs-built_in">start</span> ff.bat</span><br></pre></td></tr></table></figure><h2 id="color"><a href="#color" class="headerlink" title="color"></a>color</h2><p>设置当前cmd窗口背景色和前景色（前景色即为字体的颜色）</p><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">color</span> <span class="hljs-number">02</span> # 将背景色设为黑色，将字体设为绿色</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">代码</th><th align="left">颜色</th><th align="left">代码</th><th align="left">颜色</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">黑色</td><td align="left">8</td><td align="left">灰色</td></tr><tr><td align="left">1</td><td align="left">蓝色</td><td align="left">9</td><td align="left">淡蓝色</td></tr><tr><td align="left">2</td><td align="left">绿色</td><td align="left">A</td><td align="left">淡绿色</td></tr><tr><td align="left">3</td><td align="left">浅绿色</td><td align="left">B</td><td align="left">淡浅绿色</td></tr><tr><td align="left">4</td><td align="left">红色</td><td align="left">C</td><td align="left">淡红色</td></tr><tr><td align="left">5</td><td align="left">紫色</td><td align="left">D</td><td align="left">淡紫色</td></tr><tr><td align="left">6</td><td align="left">黄色</td><td align="left">E</td><td align="left">淡黄色</td></tr><tr><td align="left">7</td><td align="left">白色</td><td align="left">F</td><td align="left">亮白色</td></tr></tbody></table><ul><li>设置DOS窗口颜色为9f，大小：200行 60列（若屏幕缓冲区大小的宽度w&lt;200或高度h&lt;60,最终DOS的窗口就会为w行，h列）</li></ul><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">mode</span> <span class="hljs-built_in">con</span> cols=<span class="hljs-number">200</span> lines=<span class="hljs-number">60</span> &amp; <span class="hljs-built_in">color</span> <span class="hljs-number">9</span>f</span><br></pre></td></tr></table></figure><h2 id="chcp-字符编码"><a href="#chcp-字符编码" class="headerlink" title="chcp  字符编码"></a>chcp  字符编码</h2><p>936 – GBK(一般情况下为默认编码)<br>437 – 美国英语<br>65001 – utf-8<br>1200 – utf-16<br>1201 – utf-16(Big-Endian)<br>12000 – utf-32<br>12001 – utf-32(Big-Endian)</p><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 设置当前命令行环境编码为GBK  执行完该命令后还需要将字体设置为点阵字体，才能真正将编码环境切成utf8</span><br><span class="line"><span class="hljs-built_in">chcp</span>  <span class="hljs-number">936</span> </span><br><span class="line"></span><br><span class="line"># 设置当前命令行环境编码为utf8  执行完该命令后还需要将字体设置为Lucida Console，才能真正将编码环境切成utf8</span><br><span class="line"><span class="hljs-built_in">chcp</span>  <span class="hljs-number">65001</span></span><br></pre></td></tr></table></figure><h2 id="wmic-查看进程信息"><a href="#wmic-查看进程信息" class="headerlink" title="wmic 查看进程信息"></a>wmic 查看进程信息</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 查看名为"buyticket.exe"所有进程命令行，exe全路径，PID及线程数</span><br><span class="line">wmic process where Caption="buyticket.exe" get commandline,ExecutablePath,ProcessId,ThreadCount /value</span><br><span class="line"></span><br><span class="line"># 查看名为"buyticket.exe"所有进程的exe全路径及当前打开的句柄数</span><br><span class="line">wmic process where Caption="buyticket.exe" get ExecutablePath,HandleCount /value  </span><br><span class="line"></span><br><span class="line"># 查看名为"buyticket.exe"所有进程的exe全路径、当前虚拟地址空间占用及物理内存工作集</span><br><span class="line">wmic process where Caption="buyticket.exe" get ExecutablePath,VirtualSize,WorkingSetSize /value</span><br></pre></td></tr></table></figure><h2 id="shutdown"><a href="#shutdown" class="headerlink" title="shutdown"></a>shutdown</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#关闭计算机</span><br><span class="line">shutdown /s  </span><br><span class="line"></span><br><span class="line"># 一小时后，关闭本地计算机</span><br><span class="line">shutdown /s /t <span class="hljs-number">3600</span></span><br><span class="line"></span><br><span class="line"># 终止系统关闭</span><br><span class="line">shutdown /a </span><br><span class="line"></span><br><span class="line"># 关闭并重启本地计算</span><br><span class="line">shutdown /r 机</span><br><span class="line"></span><br><span class="line"># 关闭并重启ip为<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">166</span>的计算机</span><br><span class="line">shutdown /m <span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">166</span> /r</span><br></pre></td></tr></table></figure><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 关闭并重启计算机，重启后重新启动所有注册的应用程序</span><br><span class="line">shutdown /g  </span><br><span class="line"></span><br><span class="line"># 注销本地计算机</span><br><span class="line">shutdown /l  </span><br><span class="line"></span><br><span class="line"># 休眠本地计算机（强制正在运行的应用程序关闭，不前台警告用户）</span><br><span class="line">shutdown /h /f </span><br><span class="line"></span><br><span class="line"> # 关闭计算机</span><br><span class="line">shutdown /s</span><br></pre></td></tr></table></figure><h2 id="regsvr32-注册或反注册com组件"><a href="#regsvr32-注册或反注册com组件" class="headerlink" title="regsvr32  注册或反注册com组件"></a>regsvr32  注册或反注册com组件</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 以无声的方式注册clock.ocx组件</span><br><span class="line">regsvr32 /s clock.ocx  </span><br><span class="line"></span><br><span class="line"># 卸载myCommon.dll组件</span><br><span class="line"> regsvr32 /u myCommon.dll</span><br></pre></td></tr></table></figure><h2 id="format-格式化磁盘"><a href="#format-格式化磁盘" class="headerlink" title="format  格式化磁盘"></a>format  格式化磁盘</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 以ntfs类型格式化J盘 【类型有:FAT、FAT32、exFAT、NTFS或UDF】</span><br><span class="line"><span class="hljs-built_in">format</span> J: /<span class="hljs-built_in">FS</span>:ntfs   </span><br><span class="line"></span><br><span class="line">#  以fat32类型快速格式化J盘</span><br><span class="line"><span class="hljs-built_in">format</span> J: /<span class="hljs-built_in">FS</span>:fat32 /Q</span><br></pre></td></tr></table></figure><h2 id="chkfsk-检查磁盘并显示状态报告"><a href="#chkfsk-检查磁盘并显示状态报告" class="headerlink" title="chkfsk 检查磁盘并显示状态报告"></a>chkfsk 检查磁盘并显示状态报告</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkdsk /f D:   # 检查磁盘D并显示状态报告；加参数/f表示同时会修复磁盘上的错误</span><br></pre></td></tr></table></figure><h2 id="subset"><a href="#subset" class="headerlink" title="subset"></a>subset</h2><p>subst   磁盘映射  – 磁盘映射信息都保存在注册表以下键值中：HKEY_CURRENT_USER\Network</p><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 显示目前所有的映射</span><br><span class="line"><span class="hljs-built_in">subst</span> </span><br><span class="line"></span><br><span class="line"># 将\\com\software共享映射为本地z盘</span><br><span class="line"><span class="hljs-built_in">subst</span> z: \\com\software </span><br><span class="line"></span><br><span class="line"># 将e:\src映射为本地y盘</span><br><span class="line"><span class="hljs-built_in">subst</span> y: e:\src </span><br><span class="line"></span><br><span class="line"># 删除z盘映射</span><br><span class="line"><span class="hljs-built_in">subst</span> z: /d</span><br></pre></td></tr></table></figure><h2 id="cmdkey"><a href="#cmdkey" class="headerlink" title="cmdkey"></a>cmdkey</h2><p> 凭据Credential（保存的用户名和密码）</p><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 列出可用的凭据</span><br><span class="line">cmdkey /list  </span><br><span class="line"></span><br><span class="line"># 列出指定目标的凭据</span><br><span class="line">cmdkey /list:<span class="hljs-number">10</span>.<span class="hljs-number">12</span>.<span class="hljs-number">190</span>.<span class="hljs-number">82</span>  </span><br><span class="line"></span><br><span class="line"># 列出指定目标的凭据</span><br><span class="line">cmdkey /list:Domain:target=<span class="hljs-number">10</span>.<span class="hljs-number">12</span>.<span class="hljs-number">190</span>.<span class="hljs-number">82</span>  </span><br><span class="line"></span><br><span class="line"># 若target为<span class="hljs-number">10</span>.<span class="hljs-number">12</span>.<span class="hljs-number">190</span>.<span class="hljs-number">82</span>的凭据不存在，则添加；否则就将<span class="hljs-number">10</span>.<span class="hljs-number">12</span>.<span class="hljs-number">190</span>.<span class="hljs-number">82</span>凭据的用户名修改为LiLei，密码修改为<span class="hljs-number">123456</span></span><br><span class="line">cmdkey /add:Domain:target=<span class="hljs-number">10</span>.<span class="hljs-number">12</span>.<span class="hljs-number">190</span>.<span class="hljs-number">82</span> /user:LiLei /pass:<span class="hljs-number">123456</span>  </span><br><span class="line"></span><br><span class="line"># 删除指定目标的凭据</span><br><span class="line">cmdkey /delete:Domain:target=<span class="hljs-number">10</span>.<span class="hljs-number">12</span>.<span class="hljs-number">190</span>.<span class="hljs-number">82</span></span><br></pre></td></tr></table></figure><h2 id="cscript-执行vbs脚本"><a href="#cscript-执行vbs脚本" class="headerlink" title="cscript  执行vbs脚本"></a>cscript  执行vbs脚本</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 执行mac.vbs脚本，显示本机mac地址</span><br><span class="line">cscript /Nologo mac.vbs</span><br></pre></td></tr></table></figure><figure class="highlight vbs hljs"><figcaption><span>mac.vbs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">Dim</span> mc,mo</span><br><span class="line"><span class="hljs-keyword">Set</span> mc=<span class="hljs-built_in">GetObject</span>(<span class="hljs-string">"Winmgmts:"</span>).InstancesOf(<span class="hljs-string">"Win32_NetworkAdapterConfiguration"</span>)</span><br><span class="line"><span class="hljs-keyword">For</span> <span class="hljs-keyword">Each</span> mo <span class="hljs-keyword">In</span> mc</span><br><span class="line"><span class="hljs-keyword">If</span> mo.IPEnabled=<span class="hljs-literal">True</span> <span class="hljs-keyword">Then</span></span><br><span class="line"><span class="hljs-built_in">MsgBox</span> <span class="hljs-string">"本机网卡MAC地址是: "</span> &amp; mo.MacAddress</span><br><span class="line"><span class="hljs-keyword">Exit</span> <span class="hljs-keyword">For</span></span><br><span class="line"><span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span></span><br><span class="line"><span class="hljs-keyword">Next</span></span><br></pre></td></tr></table></figure><h2 id="powercfg-设置电源方案"><a href="#powercfg-设置电源方案" class="headerlink" title="powercfg  设置电源方案"></a>powercfg  设置电源方案</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 列出当前用户环境中的所有电源方案的GUID以及当前使用的是哪一个电源方案</span><br><span class="line">powercfg -list   </span><br><span class="line"></span><br><span class="line"># 查询GUID为<span class="hljs-number">8</span>c5e7fda-e8bf-<span class="hljs-number">4</span>a96-<span class="hljs-number">9</span>a85-a6e23a8c635c的电源方案的详细内容</span><br><span class="line">powercfg -query <span class="hljs-number">8</span>c5e7fda-e8bf-<span class="hljs-number">4</span>a96-<span class="hljs-number">9</span>a85-a6e23a8c635c </span><br><span class="line"></span><br><span class="line"># 设置禁止休眠</span><br><span class="line">powercfg -h off</span><br></pre></td></tr></table></figure><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#  设置硬盘从不关闭</span><br><span class="line">powercfg -change -disk-timeout-dc <span class="hljs-number">0</span></span><br><span class="line">powercfg -change -disk-timeout-ac <span class="hljs-number">0</span></span><br><span class="line"></span><br><span class="line">#  设置显示器从不关闭</span><br><span class="line">powercfg -change -monitor-timeout-dc <span class="hljs-number">0</span></span><br><span class="line">powercfg -change -monitor-timeout-ac <span class="hljs-number">0</span></span><br><span class="line"></span><br><span class="line"># 设置从不进入待机</span><br><span class="line">powercfg -change -standby-timeout-dc <span class="hljs-number">0</span></span><br><span class="line">powercfg -change -standby-timeout-ac <span class="hljs-number">0</span></span><br><span class="line"></span><br><span class="line">#  设置从不进入休眠</span><br><span class="line">powercfg -change -hibernate-timeout-dc <span class="hljs-number">0</span></span><br><span class="line">powercfg -change -hibernate-timeout-ac <span class="hljs-number">0</span></span><br></pre></td></tr></table></figure><ol><li>dc代表直流电源 即使用电池供电；ac代表交流电源 即直接连接电源</li><li>后面数字为时间，单位为分钟；设置为0表示从不</li></ol><h2 id="netsh-advfirewall-设置防火墙"><a href="#netsh-advfirewall-设置防火墙" class="headerlink" title="netsh advfirewall  设置防火墙"></a>netsh advfirewall  设置防火墙</h2><p>windows防火墙规则顺序：阻止规则的优先级高于允许规则</p><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">#将防火墙当前的所有配置导出到d:\test\advfirewall.pol文件</span><br><span class="line">netsh advfirewall export "d:\test\advfirewall.pol"  </span><br><span class="line"># 将d:\test\advfirewall.pol文件中规则导入到防火墙中</span><br><span class="line">netsh advfirewall import "d:\test\advfirewall.pol"  </span><br><span class="line"># 将防火墙还原为默认策略</span><br><span class="line">netsh advfirewall reset</span><br><span class="line"></span><br><span class="line"># 关闭所有类型网络的防火墙（域网络【Domain】、家庭或工作的专用网络【Private】、公用网络都关闭【Public】）</span><br><span class="line">netsh advfirewall <span class="hljs-built_in">set</span> allprofiles state off</span><br><span class="line"></span><br><span class="line">netsh advfirewall <span class="hljs-built_in">set</span> allprofiles state on  # 开启所有类型网络的防火墙</span><br><span class="line"></span><br><span class="line">#关闭当前类型网络的防火墙</span><br><span class="line">netsh advfirewall <span class="hljs-built_in">set</span> currentprofile state off </span><br><span class="line"></span><br><span class="line"># 开启当前类型网络的防火墙</span><br><span class="line">netsh advfirewall <span class="hljs-built_in">set</span> currentprofile state on </span><br><span class="line"></span><br><span class="line"># 开启域网络的防火墙</span><br><span class="line">netsh advfirewall <span class="hljs-built_in">set</span> domainprofile state on </span><br><span class="line"></span><br><span class="line"> # 关闭域网络的防火墙</span><br><span class="line">netsh advfirewall <span class="hljs-built_in">set</span> domainprofile state off</span><br><span class="line"></span><br><span class="line"># 开启家庭或工作的专用网络的防火墙</span><br><span class="line">netsh advfirewall <span class="hljs-built_in">set</span> privateprofile state on </span><br><span class="line"></span><br><span class="line"># 关闭家庭或工作的专用网络的防火墙</span><br><span class="line">netsh advfirewall <span class="hljs-built_in">set</span> privateprofile state off  </span><br><span class="line"></span><br><span class="line"># 开启公用网络的防火墙</span><br><span class="line">netsh advfirewall <span class="hljs-built_in">set</span> publicprofile state on </span><br><span class="line"></span><br><span class="line"> # 关闭公用网络的防火墙</span><br><span class="line">netsh advfirewall <span class="hljs-built_in">set</span> publicprofile state off </span><br><span class="line"></span><br><span class="line">#显示所有规则</span><br><span class="line">netsh advfirewall firewall show rule name=all  </span><br><span class="line"></span><br><span class="line"># 显示名为foxmail的所有规则</span><br><span class="line">netsh advfirewall firewall show rule name=foxmail   </span><br><span class="line"># 开启<span class="hljs-built_in">ping</span>回显</span><br><span class="line">netsh advfirewall firewall <span class="hljs-built_in">set</span> rule name="文件和打印机共享(回显请求 - ICMPv4-<span class="hljs-keyword">In</span>)" new enable=yes </span><br><span class="line"></span><br><span class="line">#  删除所有名为NiZhanBrowser的规则</span><br><span class="line">netsh advfirewall firewall delete rule name=NiZhanBrowser </span><br><span class="line"></span><br><span class="line"># 删除所有名为NiZhanBrowser的入站规则</span><br><span class="line">netsh advfirewall firewall delete rule name=NiZhanBrowser <span class="hljs-built_in">dir</span>=<span class="hljs-keyword">in</span></span><br><span class="line"></span><br><span class="line"># 删除所有名为NiZhanBrowser且操作为阻止的规则</span><br><span class="line">netsh advfirewall firewall delete rule name=NiZhanBrowser action=block </span><br><span class="line"></span><br><span class="line"># 添加名为TCP-<span class="hljs-keyword">In</span>-<span class="hljs-number">8888</span>入站规则：允许TCP端口<span class="hljs-number">8888</span></span><br><span class="line">netsh advfirewall firewall add rule name=TCP-<span class="hljs-keyword">In</span>-<span class="hljs-number">8888</span> protocol=TCP localport=<span class="hljs-number">8888</span> <span class="hljs-built_in">dir</span>=<span class="hljs-keyword">in</span> action=allow  </span><br><span class="line"></span><br><span class="line"># 添加名为TCP-<span class="hljs-keyword">In</span>-<span class="hljs-number">8888</span>入站规则：阻止TCP端口<span class="hljs-number">8888</span></span><br><span class="line">netsh advfirewall firewall add rule name=TCP-<span class="hljs-keyword">In</span>-<span class="hljs-number">8888</span> protocol=TCP localport=<span class="hljs-number">8888</span> <span class="hljs-built_in">dir</span>=<span class="hljs-keyword">in</span> action=block  </span><br><span class="line"></span><br><span class="line"># 添加名为TCP-<span class="hljs-keyword">In</span>-<span class="hljs-number">8888</span>出站规则：允许TCP端口<span class="hljs-number">8888</span></span><br><span class="line">netsh advfirewall firewall add rule name=TCP-<span class="hljs-keyword">In</span>-<span class="hljs-number">8888</span> protocol=TCP localport=<span class="hljs-number">8888</span> <span class="hljs-built_in">dir</span>=out action=allow  </span><br><span class="line"></span><br><span class="line"># 添加名为TCP-<span class="hljs-keyword">In</span>-<span class="hljs-number">8888</span>出站规则：阻止TCP端口<span class="hljs-number">8888</span></span><br><span class="line">netsh advfirewall firewall add rule name=TCP-<span class="hljs-keyword">In</span>-<span class="hljs-number">8888</span> protocol=TCP localport=<span class="hljs-number">8888</span> <span class="hljs-built_in">dir</span>=out action=block  </span><br><span class="line"></span><br><span class="line">#  添加名为test1入站规则：允许TCP端口<span class="hljs-number">8888</span>、远程IP地址在<span class="hljs-number">10</span>.<span class="hljs-number">96</span>.<span class="hljs-number">208</span>.<span class="hljs-number">0</span>/<span class="hljs-number">23</span>,<span class="hljs-number">10</span>.<span class="hljs-number">96</span>.<span class="hljs-number">154</span>.<span class="hljs-number">0</span>/<span class="hljs-number">23</span>区间、远程Port在<span class="hljs-number">1024</span>-<span class="hljs-number">2048</span>,<span class="hljs-number">2050</span>-<span class="hljs-number">65535</span></span><br><span class="line">netsh advfirewall firewall add rule name=test1 protocol=TCP localport=<span class="hljs-number">8888</span> remoteip=<span class="hljs-number">10</span>.<span class="hljs-number">96</span>.<span class="hljs-number">208</span>.<span class="hljs-number">0</span>/<span class="hljs-number">23</span>,<span class="hljs-number">10</span>.<span class="hljs-number">96</span>.<span class="hljs-number">154</span>.<span class="hljs-number">0</span>/<span class="hljs-number">23</span> remoteport=<span class="hljs-number">1024</span>-<span class="hljs-number">2048</span>,<span class="hljs-number">2050</span>-<span class="hljs-number">65535</span> <span class="hljs-built_in">dir</span>=<span class="hljs-keyword">in</span> action=allow </span><br><span class="line"></span><br><span class="line"># 添加名为test2入站规则：允许TCP端口<span class="hljs-number">8888</span>、本地IP地址在<span class="hljs-number">10</span>.<span class="hljs-number">46</span>.<span class="hljs-number">50</span>.<span class="hljs-number">32</span>、本地Port在<span class="hljs-number">3702</span></span><br><span class="line">netsh advfirewall firewall add rule name=test2 protocol=TCP localport=<span class="hljs-number">8888</span> localip=<span class="hljs-number">10</span>.<span class="hljs-number">46</span>.<span class="hljs-number">50</span>.<span class="hljs-number">32</span> localport=<span class="hljs-number">3702</span> <span class="hljs-built_in">dir</span>=<span class="hljs-keyword">in</span> action=allow </span><br><span class="line"></span><br><span class="line"># 添加名为test3入站规则：允许TCP端口<span class="hljs-number">8888</span>、程序路径为：D:\tools\test3.exe</span><br><span class="line">netsh advfirewall firewall add rule name=test2 protocol=TCP localport=<span class="hljs-number">8888</span> program="D:\tools\test3.exe" <span class="hljs-built_in">dir</span>=<span class="hljs-keyword">in</span> action=allow</span><br></pre></td></tr></table></figure><p>注：netsh advfirewall firewall add rule ?可用来查看帮助信息</p><h2 id="schtasks-任务计划"><a href="#schtasks-任务计划" class="headerlink" title="schtasks  任务计划"></a>schtasks  任务计划</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 以较为详细易于阅读的格式显示本机所有任务计划信息</span><br><span class="line">schtasks /query /fo LIST /v  </span><br><span class="line"></span><br><span class="line"> # 创建一个名为Soda Build的任务计划：该任务计划每<span class="hljs-number">20</span>分钟执行一下d:\check.vbs脚本</span><br><span class="line">schtasks /create /sc minute /mo <span class="hljs-number">20</span> /tn "Soda Build" /tr d:\check.vbs </span><br><span class="line"></span><br><span class="line"># 强制创建一个名为Soda Build的任务计划（不进行确认）：该任务计划每天凌晨<span class="hljs-number">2</span>点<span class="hljs-number">06</span>分执行一下D:\updateall.bat脚本</span><br><span class="line">schtasks /create /tn "Soda Build" /tr D:\updateall.bat /sc daily /st <span class="hljs-number">02</span>:<span class="hljs-number">06</span> /f </span><br><span class="line"></span><br><span class="line"># 强制删除Soda Build名称的任务计划（不进行确认）</span><br><span class="line">schtasks /delete /tn "Soda Build" /f </span><br><span class="line"></span><br><span class="line">#将名为Soda Build的任务计划的执行脚本修改为d:\check2.vbs</span><br><span class="line">schtasks /change /tn "Soda Build" /tr d:\check2.vbs </span><br><span class="line"></span><br><span class="line">#执行名为Soda Build的任务计划</span><br><span class="line">schtasks /run /tn "Soda Build" </span><br><span class="line"></span><br><span class="line">#终止执行名为Soda Build的任务计划</span><br><span class="line">schtasks /end /tn "Soda Build"</span><br></pre></td></tr></table></figure><h2 id="net"><a href="#net" class="headerlink" title="net"></a>net</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"># 查看已经启动的服务</span><br><span class="line"><span class="hljs-built_in">net</span> <span class="hljs-built_in">start</span> </span><br><span class="line"></span><br><span class="line"># 开启任务计划服务</span><br><span class="line"><span class="hljs-built_in">net</span> <span class="hljs-built_in">start</span> "Task Scheduler"   </span><br><span class="line"></span><br><span class="line"># 不询问，直接关闭任务计划服务</span><br><span class="line"><span class="hljs-built_in">net</span> stop "Task Scheduler" /y </span><br><span class="line"></span><br><span class="line"># 开启dns缓存服务</span><br><span class="line"><span class="hljs-built_in">net</span> <span class="hljs-built_in">start</span> dnscache </span><br><span class="line"></span><br><span class="line"># 不询问，直接关闭dns缓存服务</span><br><span class="line"><span class="hljs-built_in">net</span> stop dnscache /y  </span><br><span class="line"></span><br><span class="line"># 开启Remote Desktop Services服务</span><br><span class="line"><span class="hljs-built_in">net</span> <span class="hljs-built_in">start</span> TermService  </span><br><span class="line"></span><br><span class="line"># 不询问，直接关闭Remote Desktop Services服务</span><br><span class="line"><span class="hljs-built_in">net</span> stop TermService /y  </span><br><span class="line"></span><br><span class="line"># 查看当前用户下的共享目录</span><br><span class="line"><span class="hljs-built_in">net</span> share  </span><br><span class="line"></span><br><span class="line">#  取消名为workFile的共享状态</span><br><span class="line"><span class="hljs-built_in">net</span> share workFile /delete </span><br><span class="line"></span><br><span class="line"># 将c:\<span class="hljs-number">360</span>Downloads设为共享，并取名为xxx</span><br><span class="line"><span class="hljs-built_in">net</span> share xxx=c:\<span class="hljs-number">360</span>Downloads   </span><br><span class="line"></span><br><span class="line"># 开启ipc$共享</span><br><span class="line"><span class="hljs-built_in">net</span> share ipc$ </span><br><span class="line"></span><br><span class="line"># 删除ipc$共享</span><br><span class="line"><span class="hljs-built_in">net</span> share ipc$ /<span class="hljs-built_in">del</span> </span><br><span class="line"></span><br><span class="line"># 删除c盘共享</span><br><span class="line"><span class="hljs-built_in">net</span> share c$ /<span class="hljs-built_in">del</span> </span><br><span class="line"></span><br><span class="line"># 建立<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">166</span>的ipc空链接</span><br><span class="line"><span class="hljs-built_in">net</span> use \\<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">166</span>\ipc$ " " /user:" "</span><br><span class="line"></span><br><span class="line"># 直接登陆后建立<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">166</span>的ipc非空链接（用户名为administrator 密码为<span class="hljs-number">123456</span>）</span><br><span class="line"><span class="hljs-built_in">net</span> use \\<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">166</span>\ipc$ "<span class="hljs-number">123456</span>" /user:"administrator"  </span><br><span class="line"></span><br><span class="line"># 直接登陆后映射<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">166</span>的c盘到本地为h盘（用户名为administrator 密码为<span class="hljs-number">123456</span>）</span><br><span class="line"><span class="hljs-built_in">net</span> use h: \\<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">166</span>\c$ "<span class="hljs-number">123456</span>" /user:"administrator"   </span><br><span class="line"></span><br><span class="line"># 登陆后映射<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">166</span>的c盘到本地为h盘</span><br><span class="line"><span class="hljs-built_in">net</span> use h: \\<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">166</span>\c$   </span><br><span class="line"></span><br><span class="line"># 删除ipc链接</span><br><span class="line"><span class="hljs-built_in">net</span> use \\<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">166</span>\ipc$ /<span class="hljs-built_in">del</span>  </span><br><span class="line"></span><br><span class="line"># 删除本地的h盘的映射</span><br><span class="line"><span class="hljs-built_in">net</span> use h: /<span class="hljs-built_in">del</span> </span><br><span class="line"></span><br><span class="line"># 查看本地局域网内开启了哪些共享</span><br><span class="line"><span class="hljs-built_in">net</span> view </span><br><span class="line"></span><br><span class="line"># 查看<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">166</span>的机器上在局域网内开启了哪些共享</span><br><span class="line"><span class="hljs-built_in">net</span> view \\<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">166</span> </span><br><span class="line"></span><br><span class="line"># 查看本地机器的日期及时间</span><br><span class="line"><span class="hljs-built_in">net</span> <span class="hljs-built_in">time</span> \\<span class="hljs-number">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>  </span><br><span class="line"></span><br><span class="line"># 查看本地机器的日期及时间</span><br><span class="line"><span class="hljs-built_in">net</span> <span class="hljs-built_in">time</span> \\localhost   </span><br><span class="line"></span><br><span class="line"># 查看<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">166</span>机器的日期及时间</span><br><span class="line"><span class="hljs-built_in">net</span> <span class="hljs-built_in">time</span> \\<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">166</span>  </span><br><span class="line"></span><br><span class="line"># 设置本地计算机时间与<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">166</span>主机的时间同步，加上参数/yes可取消确认信息</span><br><span class="line"><span class="hljs-built_in">net</span> <span class="hljs-built_in">time</span> \\<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">166</span> /<span class="hljs-built_in">set</span> </span><br><span class="line"></span><br><span class="line"># 查看当前机器上的用户</span><br><span class="line"><span class="hljs-built_in">net</span> user  </span><br><span class="line"></span><br><span class="line"># 查看当前机器上的Administrator用户的信息</span><br><span class="line"><span class="hljs-built_in">net</span> user Administrator  </span><br><span class="line"></span><br><span class="line"># 启用Guest用户</span><br><span class="line"><span class="hljs-built_in">net</span> user Guest /active:yes  </span><br><span class="line"></span><br><span class="line"># 新建一个名为dev，密码为<span class="hljs-number">123456</span>的用户</span><br><span class="line"><span class="hljs-built_in">net</span> user dev <span class="hljs-number">123456</span> /add   </span><br><span class="line"></span><br><span class="line"># 把名为dev的用户添加到管理员用户组中，使其具有管理员权限</span><br><span class="line"><span class="hljs-built_in">net</span> localgroup administrators dev /add  </span><br><span class="line"></span><br><span class="line"># 删除名为dev的用户</span><br><span class="line"><span class="hljs-built_in">net</span> user dev /<span class="hljs-built_in">del</span></span><br></pre></td></tr></table></figure><h2 id="进程操作"><a href="#进程操作" class="headerlink" title="进程操作"></a>进程操作</h2><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 显示当前运行的进程信息（可查看PID）</span><br><span class="line">tasklist  </span><br><span class="line"></span><br><span class="line">#结束指定的进程</span><br><span class="line"><span class="hljs-built_in">taskkill</span>  </span><br><span class="line"></span><br><span class="line"># 结束名为notepad.exe的进程</span><br><span class="line"><span class="hljs-built_in">taskkill</span> /im notepad.exe </span><br><span class="line"></span><br><span class="line">#  结束pid为<span class="hljs-number">1230</span>、<span class="hljs-number">1241</span>和<span class="hljs-number">1253</span>的进程以及由它们启动起来的子进程</span><br><span class="line"><span class="hljs-built_in">taskkill</span> /pid <span class="hljs-number">1230</span> /pid <span class="hljs-number">1241</span> /pid <span class="hljs-number">1253</span> /t </span><br><span class="line"></span><br><span class="line"># 强制结束有名为<span class="hljs-built_in">cmd</span>.exe的进程以及由它启动起来的子进程</span><br><span class="line"><span class="hljs-built_in">taskkill</span> /f /im <span class="hljs-built_in">cmd</span>.exe /t</span><br></pre></td></tr></table></figure><h1 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h1><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#  测试与baidu服务器的连接情况</span><br><span class="line"><span class="hljs-built_in">ping</span> baidu.com   </span><br><span class="line"></span><br><span class="line"># 测试机器名为chen-pc0的连接情况</span><br><span class="line"><span class="hljs-built_in">ping</span> chen-pc0   </span><br><span class="line"></span><br><span class="line"> # 测试与ip为<span class="hljs-number">220</span>.<span class="hljs-number">181</span>.<span class="hljs-number">111</span>.<span class="hljs-number">86</span>的连接情况</span><br><span class="line"><span class="hljs-built_in">ping</span> <span class="hljs-number">220</span>.<span class="hljs-number">181</span>.<span class="hljs-number">111</span>.<span class="hljs-number">86</span>  </span><br><span class="line"></span><br><span class="line"># 向qq.com发送<span class="hljs-number">10</span>次<span class="hljs-number">65500</span>字节的<span class="hljs-built_in">ping</span></span><br><span class="line"><span class="hljs-built_in">ping</span> -l <span class="hljs-number">65500</span> -n <span class="hljs-number">10</span> qq.com  </span><br><span class="line"></span><br><span class="line"># 对当前主机执行<span class="hljs-number">6</span>次<span class="hljs-built_in">ping</span>操作（花费时间为<span class="hljs-number">5</span>s）</span><br><span class="line"><span class="hljs-built_in">ping</span> -n <span class="hljs-number">6</span> <span class="hljs-number">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span> </span><br><span class="line"></span><br><span class="line"> # 不断地测试baidu服务器的连接情况   【Ctrl+<span class="hljs-built_in">Pause</span> <span class="hljs-built_in">Break</span>：查看<span class="hljs-built_in">ping</span>的统计信息；Ctrl+C：终止当前任务】</span><br><span class="line"><span class="hljs-built_in">ping</span> -t baidu.com</span><br></pre></td></tr></table></figure><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># 查看本地ip地址等详细信息</span><br><span class="line"><span class="hljs-built_in">ipconfig</span> /all</span><br><span class="line"></span><br><span class="line"># 显示本地dns缓存的内容</span><br><span class="line"><span class="hljs-built_in">ipconfig</span> /displaydns </span><br><span class="line"></span><br><span class="line"># 清除本地dns缓存的内容</span><br><span class="line"><span class="hljs-built_in">ipconfig</span> /flushdns</span><br><span class="line"></span><br><span class="line"># 获取www.cnblogs.com的域名解析</span><br><span class="line">nslookup www.cnblogs.com </span><br><span class="line"></span><br><span class="line"># 打印出www.cnblogs.com的域名解析所有记录</span><br><span class="line">nslookup -d www.cnblogs.com</span><br><span class="line"></span><br><span class="line"># 查看开启了哪些端口</span><br><span class="line">netstat -a   </span><br><span class="line"></span><br><span class="line"> # 查看端口的网络连接情况</span><br><span class="line">netstat -n </span><br><span class="line"></span><br><span class="line"># 查看正在进行的工作</span><br><span class="line">netstat -v   </span><br><span class="line"></span><br><span class="line"># 查看tcp协议的使用情况</span><br><span class="line">netstat -p tcp  </span><br><span class="line"></span><br><span class="line"># 查看本机到达<span class="hljs-number">182</span>.<span class="hljs-number">140</span>.<span class="hljs-number">167</span>.<span class="hljs-number">44</span>的路由路径</span><br><span class="line">tracert <span class="hljs-number">182</span>.<span class="hljs-number">140</span>.<span class="hljs-number">167</span>.<span class="hljs-number">44</span>  </span><br><span class="line"></span><br><span class="line">#显示出IP路由</span><br><span class="line">route <span class="hljs-built_in">print</span></span><br></pre></td></tr></table></figure><h1 id="arp"><a href="#arp" class="headerlink" title="arp"></a>arp</h1><p>arp   显示和修改地址解析协议(ARP)使用的“IP到mac”的地址转换表</p><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 显示arp缓存表</span><br><span class="line">arp -a</span><br></pre></td></tr></table></figure><p>at  计划任务（必须保证“Task Scheduler”服务启动   net start “task scheduler”）</p><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 查看所有的计划任务</span><br><span class="line"><span class="hljs-built_in">at</span> </span><br><span class="line"></span><br><span class="line"># 停止所有任务计划（不需要确认）</span><br><span class="line"><span class="hljs-built_in">at</span> /delete /yes </span><br><span class="line"></span><br><span class="line"># 开启id为<span class="hljs-number">1</span>的计划任</span><br><span class="line"><span class="hljs-built_in">at</span> <span class="hljs-number">1</span> </span><br><span class="line"></span><br><span class="line"># 停止id为<span class="hljs-number">1</span>的计划任务（不需要确认）</span><br><span class="line"><span class="hljs-built_in">at</span> <span class="hljs-number">1</span> /delete /yes  </span><br><span class="line"></span><br><span class="line"># 到<span class="hljs-number">12</span>:<span class="hljs-number">42</span> ，电脑会出现“ 系统关机 ”对话框，并默认 <span class="hljs-number">30</span> 秒延时自动关机</span><br><span class="line"><span class="hljs-built_in">at</span> <span class="hljs-number">12</span>:<span class="hljs-number">42</span> shutdown –s –t30   </span><br><span class="line"></span><br><span class="line"># 如果命令不是exe文件，必须在命令前加上<span class="hljs-built_in">cmd</span> /c</span><br><span class="line"><span class="hljs-built_in">at</span> <span class="hljs-built_in">cmd</span> /c <span class="hljs-built_in">dir</span> &gt; c:\test.out  </span><br><span class="line"></span><br><span class="line"># 在每周六早上<span class="hljs-number">6</span>点，电脑定时启动task.bat批处理文件</span><br><span class="line"><span class="hljs-built_in">at</span> <span class="hljs-number">6</span>:<span class="hljs-number">00</span>AM /every:Saturday task.bat  </span><br><span class="line"></span><br><span class="line"># 到<span class="hljs-number">12</span>:<span class="hljs-number">00</span>时，关闭名为chen的计算机</span><br><span class="line"><span class="hljs-built_in">at</span> \\chen <span class="hljs-number">12</span>:<span class="hljs-number">00</span> shutdown /r   </span><br><span class="line"></span><br><span class="line"># 到<span class="hljs-number">12</span>:<span class="hljs-number">00</span>时，关闭ip为<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">166</span>的计算机</span><br><span class="line"><span class="hljs-built_in">at</span> \\<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.<span class="hljs-number">166</span> <span class="hljs-number">12</span>:<span class="hljs-number">00</span> shutdown /r</span><br></pre></td></tr></table></figure><h1 id="文本处理"><a href="#文本处理" class="headerlink" title="文本处理"></a>文本处理</h1><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 编辑config.ini文件（会进入edit字符编辑器；按alt，可以选择对应的菜单） win7 x64下没有该命令</span><br><span class="line">edit config.ini</span><br></pre></td></tr></table></figure><p>find  文件中搜索字符串</p><figure class="highlight cmd hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># 在<span class="hljs-number">1</span>.txt文件中忽略大小写查找pid字符串，并带行号显示查找后的结果</span><br><span class="line"><span class="hljs-built_in">find</span> /N /I "pid" <span class="hljs-number">1</span>.txt </span><br><span class="line"></span><br><span class="line"># 只显示在<span class="hljs-number">1</span>.txt文件中查找到exe字符串的次数</span><br><span class="line"><span class="hljs-built_in">find</span> /C "exe" <span class="hljs-number">1</span>.txt  </span><br><span class="line"></span><br><span class="line"># 显示未包含<span class="hljs-number">1</span>.txt文件中未包含exe字符串的行</span><br><span class="line"><span class="hljs-built_in">find</span> /V "exe" <span class="hljs-number">1</span>.txt</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">findstr</span>  文件中搜索字符串</span><br><span class="line"></span><br><span class="line"># 在<span class="hljs-number">1</span>.txt文件中搜索hello或world</span><br><span class="line"><span class="hljs-built_in">findstr</span> "hello world" <span class="hljs-number">1</span>.txt  # 在<span class="hljs-number">1</span>.txt文件中搜索hello或world</span><br><span class="line"></span><br><span class="line"># 在<span class="hljs-number">1</span>.txt文件中搜索hello world</span><br><span class="line"><span class="hljs-built_in">findstr</span> /c:"hello world" <span class="hljs-number">1</span>.txt </span><br><span class="line"></span><br><span class="line"># 在<span class="hljs-number">1</span>.txt文件中搜索hello world，并在每行结果前打印出<span class="hljs-number">1</span>.txt:   注：<span class="hljs-built_in">findstr</span>只有在<span class="hljs-number">2</span>个及以上文件中搜索字符串时才会打印出每个文件的文件名，<span class="hljs-built_in">nul</span>表示一个空文件</span><br><span class="line"><span class="hljs-built_in">findstr</span> /c:"hello world" <span class="hljs-number">1</span>.txt <span class="hljs-built_in">nul</span>  # 在<span class="hljs-number">1</span>.txt文件中搜索hello world，并在每行结果前打印出<span class="hljs-number">1</span>.txt:   注：<span class="hljs-built_in">findstr</span>只有在<span class="hljs-number">2</span>个及以上文件中搜索字符串时才会打印出每个文件的文件名，<span class="hljs-built_in">nul</span>表示一个空文件</span><br><span class="line"></span><br><span class="line"># 不区分大小写，在当前目录和所有子目录中的所有文件中的hello</span><br><span class="line"><span class="hljs-built_in">findstr</span> /s /i "Hello" *.*   # 不区分大小写，在当前目录和所有子目录中的所有文件中的hello</span><br><span class="line"></span><br><span class="line"># 在<span class="hljs-number">1</span>.txt中搜索以<span class="hljs-number">1</span>个数字+<span class="hljs-number">1</span>个小写字母开头子串的行</span><br><span class="line"><span class="hljs-built_in">findstr</span>  "^[<span class="hljs-number">0</span>-<span class="hljs-number">9</span>][a-z]" <span class="hljs-number">1</span>.txt  # 在<span class="hljs-number">1</span>.txt中搜索以<span class="hljs-number">1</span>个数字+<span class="hljs-number">1</span>个小写字母开头子串的行</span><br></pre></td></tr></table></figure><h1 id="控制台命令窗口中一些技巧"><a href="#控制台命令窗口中一些技巧" class="headerlink" title="控制台命令窗口中一些技巧"></a>控制台命令窗口中一些技巧</h1><p>在文件夹空白处按住Shift，然后右键弹出快捷菜单，可以看到“在此处打开命令行窗口”<br>命令参数的路径：要使用反斜杠<code>\</code>，不要使用正斜杠’/‘   如：del d:\test2\file\my.txt<br>命令参数的路径：若存在空格，应使用双引号将路径引起来  如：del “d:\program files\file\my.txt”</p><p>文件及目录名中不能包含下列任何字符：<code>\ / : * ? &quot; &lt; &gt; |</code></p><p><code>rem</code>   在批处理文件中添加注解，其后的命令不会被执行，但会回显<br><code>::</code> 也可以起到rem的注释作用，且不会有回显<br>任何以冒号: 开头的字符行, 在批处理中都被视作标号（label）, 而直接忽略其后的所有内容<br>有效标号：冒号后紧跟一个以字母数字开头的字符串，goto语句可以识别<br>无效标号：冒号后紧跟一个非字母数字的一个特殊符号，goto无法识别的标号，可以起到注释作用，::常被用作注释符号</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CMD 基础&lt;br&gt;转载自:&lt;a href=&quot;https://www.cnblogs.com/kekec/p/3662125.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;可可西&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Coding" scheme="https://vitan.me/categories/Coding/"/>
    
    
      <category term="Win" scheme="https://vitan.me/tags/Win/"/>
    
  </entry>
  
  <entry>
    <title>HCNA NOTE</title>
    <link href="https://vitan.me/posts/HCNA_Note.html"/>
    <id>https://vitan.me/posts/HCNA_Note.html</id>
    <published>2019-10-20T02:12:16.000Z</published>
    <updated>2019-12-10T01:38:54.148Z</updated>
    
    <content type="html"><![CDATA[<p>HCNA 学习笔记</p><a id="more"></a><h1 id="网络整体架构"><a href="#网络整体架构" class="headerlink" title="网络整体架构"></a>网络整体架构</h1><h2 id="企业网络"><a href="#企业网络" class="headerlink" title="企业网络"></a>企业网络</h2><p>企业网络：包括小型办公室、教育、政府、银行等行业或机构</p><ul><li>企业网络远程互联：</li></ul><p><img src="https://i.loli.net/2019/10/19/ci9HUqC17B53GvV.png" alt></p><p>总公司与分公司使用广域网链路(WAN)互联</p><h3 id="企业网络基本架构"><a href="#企业网络基本架构" class="headerlink" title="企业网络基本架构"></a>企业网络基本架构</h3><ol><li>小型企业：通常采用扁平网络结构，扩展能力低。</li><li>大型企业：通常采用层次化结构以支撑网络的扩展和用户的增长。 </li></ol><ul><li>结构图(左小右大)<br><img src="https://i.loli.net/2019/10/19/b9xZIt12lcgOifu.png" alt></li></ul><h1 id="网络基本管理及模拟器使用"><a href="#网络基本管理及模拟器使用" class="headerlink" title="网络基本管理及模拟器使用"></a>网络基本管理及模拟器使用</h1><h2 id="常用的传输介质"><a href="#常用的传输介质" class="headerlink" title="常用的传输介质"></a>常用的传输介质</h2><p>双绞线、光纤、Radio(蓝牙等)、同轴电缆(几乎淘汰)</p><h3 id="双绞线-8芯"><a href="#双绞线-8芯" class="headerlink" title="双绞线(8芯)"></a>双绞线(8芯)</h3><p>有多种类型，不同类型传输速度不同和，超5类、6类最常用。RJ-45水晶头</p><p><code>568A标准</code>：白绿，绿，白橙，蓝，白蓝，橙，白棕，棕<br><code>568B标准</code>：白橙，橙，白绿，蓝，白蓝，绿，白棕，棕</p><p><code>交叉线</code>：一头采用568A标准，一头采用568B标准<br><code>平行线/直通线</code>：两头采用同样的标准（同为568A标准或568B标准）</p><p>相同设备使用交叉线，不同设备使用直通线，现在很多设备都有自适应。</p><h3 id="光纤"><a href="#光纤" class="headerlink" title="光纤"></a>光纤</h3><p><code>单模光纤(S)</code>：颜色多为黄色，连接头多为蓝色或绿色，只能传输一种模式的广。不存在模间色散，适用于 <code>长距离高速传输</code><br><code>多模光纤(M)</code>:线缆颜色千兆多位橙色、万兆多为水蓝色，连接头多位灰白色，允许不同模式的光在一根光纤上传输，由于模间色散较大而导致信号脉冲展宽严重，因此主要用于局域网的短距离传输。</p><p>区别：主要在传输距离，单模长距离，多模短距离。单模和多模差异在传输距离</p><p>洲际的传输使用的是 <code>光缆</code>，不是光纤。</p><p>常用光纤连接器：ST，FC，SC，LC连接器。连接器有帽子，要拿掉才能连接。</p><h3 id="串口电缆"><a href="#串口电缆" class="headerlink" title="串口电缆"></a>串口电缆</h3><p>网络通信中常用和推荐的串口电缆标准为 RS-232，但传输速率有限仅为6米。<br>RS-422和RS-485的传输距离可达1200米。接头常用V.35(80年代淘汰)，但仍在帧中继、ATM等传统网络上使用。<br>V.24为RS-232标准的欧洲版，RS-232本身没有定义接头标准，RS-232逐渐被FireWire，USB等取代。新产品和设备已经普遍使用USB标准。</p><h2 id="ENSP-模拟器"><a href="#ENSP-模拟器" class="headerlink" title="ENSP 模拟器"></a>ENSP 模拟器</h2><p>关闭Windows防火墙，不要装各种管家。<br>尽量少运行软件，可能会干扰 virtunal-box。<br>重新注册要关闭ENSP，个人文件夹下的.VirtualBox彻底删除。注册完毕之后关闭ENSP然后再开启。</p><h2 id="冲突域"><a href="#冲突域" class="headerlink" title="冲突域"></a>冲突域</h2><p><img src="https://i.loli.net/2019/10/19/ik3RlpEa1FXoTDH.jpg" alt></p><p>应用场景：多点接入网络(MA),如交换机(Switch)</p><p>冲突域与半双工搭配</p><p><img src="https://i.loli.net/2019/10/19/n2aqxv1Vpy8bukJ.png" alt></p><p>单工：简单的说就是一方只能发信息，另一方则只能收信息，通信是单向的。<br>半双工：比单工先进一点，就是双方都能发信息，但同一时间则只能一方发信息。<br>全双工：比半双工再先进一点，就是双方不仅都能发信息，而且能够同时发送。</p><p>半双工和全双工都支持双向数据传输。</p><p>共享式网络中，不同的主机同时发送数据时，就会产生信号冲突的问题，解决方法一般是：采用<code>载波侦听多路访问/冲突检测技术(CAMA/CD)</code>的基本工作过程如下：</p><ol><li>终端设备不同地检测共享网路的状态。如果线路空闲，则可以发送数据，线路不空闲，则等待一段时间后据徐检测(延时时间由退避算法决定)。</li><li>如有另一个设备同时发送数据，两个设备发送的数据会产生冲突。</li><li>终端设备检测到冲突之后，马上停止发送自己的数据，并发送特俗阻塞信息，以强化冲突信号，使线路上的其他站点能够尽早检测冲突。</li><li>终端设备检测到冲突后，等待一段时间后再将进行数据发送(延时时间由退避算法决定)。</li></ol><p>CSMA/CD 的工作原理：先听后发，边发边听，冲突停发，随机延迟后重发。</p><p>Q:用串行线路能否构建MA网络<br>A:肯定可以</p><p>NBMA(非广播多路访问)：物理架构(ATM、帧中继网络)—-NMBMA(网络设计)—VPN(DSVPN)。</p><h2 id="熟悉以及远程管理设备的实验"><a href="#熟悉以及远程管理设备的实验" class="headerlink" title="熟悉以及远程管理设备的实验"></a>熟悉以及远程管理设备的实验</h2><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">system-view</span><br><span class="line">interface GigabitEnternet0/0/0/0 <span class="hljs-comment"># 进入接口</span></span><br><span class="line">ip address 10.1.1.1 255.255.255.0</span><br></pre></td></tr></table></figure><p>常用命令</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sysname R1 <span class="hljs-comment"># 修改设备名字</span></span><br><span class="line">ip address 10.1.1.1.7 <span class="hljs-comment"># 配置IP地址</span></span><br><span class="line">ip address mask  10.1.1.1.7 24 <span class="hljs-comment"># 配置IP地址和掩码</span></span><br><span class="line">diaplay this <span class="hljs-comment"># 显示当前模式</span></span><br><span class="line">dis ip int bri <span class="hljs-comment"># 查看接口开启情况</span></span><br><span class="line">undo shutdown <span class="hljs-comment"># </span></span><br><span class="line">q <span class="hljs-comment"># 退出</span></span><br><span class="line"></span><br><span class="line">user-interface <span class="hljs-comment"># 用户接口</span></span><br><span class="line">user-interface ？ <span class="hljs-comment"># 查看帮助</span></span><br><span class="line"></span><br><span class="line">user-interface vty 0 4 <span class="hljs-comment"># 开启虚拟终端管理</span></span><br><span class="line"><span class="hljs-built_in">set</span> authentication password cipher pass <span class="hljs-comment"># 设置认证密码为pass</span></span><br><span class="line"></span><br><span class="line">talent 10.1.1.1 <span class="hljs-comment"># 远程管理设备，不能进入system-view</span></span><br><span class="line"></span><br><span class="line">diaplay ip routting0table <span class="hljs-comment"># 查看路由表</span></span><br></pre></td></tr></table></figure><h1 id="网络各种分层结构"><a href="#网络各种分层结构" class="headerlink" title="网络各种分层结构"></a>网络各种分层结构</h1><h2 id="网络分层基础"><a href="#网络分层基础" class="headerlink" title="网络分层基础"></a>网络分层基础</h2><blockquote><p>网络的层次化不要以设备最为标准，要以协议作为分层的标准。</p></blockquote><h3 id="OSI-开放式系统互联模型-七层模型："><a href="#OSI-开放式系统互联模型-七层模型：" class="headerlink" title="OSI(开放式系统互联模型) 七层模型："></a>OSI(开放式系统互联模型) 七层模型：</h3><ol><li>应用层：为应用程序提供网络服务</li><li>表示层：数据格式化，加密、解密，如：jpg，gif</li><li>会话层：建立、维护、管理会话连接,系统(Linux,iOS,Android)在此</li><li>传输层：建立、维护、管理端到端连接，单位：段(segment)，TCP/UDP连个协议</li><li>网络层：IP寻址和路由选择,单位：包，有200多个协议</li><li>数据链路层：控制网络层与物理层之间的通讯，单位：帧(frame)</li><li>物理层：比特流传输，单位：比特(bit)</li></ol><p>应用层、表示层、会话层：单位统称为：协议数据单元(PDU)<br><code>物理层</code>在TCP/IP中被称为<code>互联网层</code>(Internet Protocal)</p><h3 id="TCP-IP-工业标准"><a href="#TCP-IP-工业标准" class="headerlink" title="TCP/IP(工业标准)"></a>TCP/IP(工业标准)</h3><ol><li>应用层 (TELNET、FTP、SMTP)</li><li>传输层 (TCP、UDP)</li><li>互联网层 (IP、ICMP),路由</li><li>网络接口层 (PPP)，交换</li></ol><h2 id="数据封装"><a href="#数据封装" class="headerlink" title="数据封装"></a>数据封装</h2><p><img src="https://i.loli.net/2019/10/19/wHVmxltdUp7POZY.png" alt="批注 2019-10-19 142448.png"></p><p>每一层都有一个头部</p><h2 id="TCP与UDP的概念相互的区别及优劣"><a href="#TCP与UDP的概念相互的区别及优劣" class="headerlink" title="TCP与UDP的概念相互的区别及优劣"></a>TCP与UDP的概念相互的区别及优劣</h2><ol><li>TCP面向连接，UDP面向无链接</li><li>TCP面向报文，UDP面向字节流</li><li>TCP提供可靠传输服务（数据顺序、正确性），UDP传输不可靠</li><li>TCP协议传输速度慢，UDP协议传输速度快</li><li>TCP协议对系统资源要求多（头部开销大），UDP协议要求少*</li></ol><h2 id="VRP-的操作"><a href="#VRP-的操作" class="headerlink" title="VRP 的操作"></a>VRP 的操作</h2><p>管理vlan(虚拟局域网)</p><figure class="highlight bash hljs"><figcaption><span>SW1</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">system-view</span><br><span class="line">sysname SW1</span><br><span class="line">interface vlanif 1</span><br><span class="line">ip address 10.1.1.1 24</span><br><span class="line">display this</span><br></pre></td></tr></table></figure><figure class="highlight bash hljs"><figcaption><span>SW2</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">system-view</span><br><span class="line">sysname SW2</span><br><span class="line">interface vlan 1</span><br><span class="line">ip address 10.1.1.2 24</span><br></pre></td></tr></table></figure><p>ENSP自带了网络报文解析器。右键设备-数据抓包</p><h1 id="Ehternet基础"><a href="#Ehternet基础" class="headerlink" title="Ehternet基础"></a>Ehternet基础</h1><blockquote><p>网络中传输数据时需要定义并遵循一些标准，以太网是根据IEEE802.3 标准来管理和控制数据帧的。了解IEEE802.3标准是充分理解以太网中链路层通讯的标准。</p></blockquote><ul><li>IEEE 是局域网标准</li></ul><h2 id="以太网帧"><a href="#以太网帧" class="headerlink" title="以太网帧"></a>以太网帧</h2><p>以太网(最流行，最常用，效率最高)，它的数据链路层基于MAC地址进行帧的传输。<br>PR：<br>FR(MA网络)：帧中继靠的是DLCI<br>PPP(ppp网络)、HDLC(ppp网络)：什么都不靠</p><h2 id="以太网MAC地址"><a href="#以太网MAC地址" class="headerlink" title="以太网MAC地址"></a>以太网MAC地址</h2><p>以太网的MAC地址(Media Access Control Address)：<br>由两部分组成:前24位的供应商代码、后24位的序列号。供应商代码由IEEE管理和分配。</p><p><img src="https://i.loli.net/2019/10/19/jVUx84uDd6HQGRB.png" alt></p><p>OUI：厂商序号</p><h3 id="MAC分类"><a href="#MAC分类" class="headerlink" title="MAC分类"></a>MAC分类</h3><p>单一的源段发送到单一的目的端，每个主机接口由一个MAC地址唯一标识，MAC地址的OUI中第一字节第8个比特表示地址类型，对于主机MAC地址这个比特固定为0如，表示目的的MAC地址为此MAC地址的帧都是发送到某个唯一的端。在冲突域中，所有主机都能收到源主机发送的单播帧，但其他主机发现目的地址与本地MAC地址不一致后会丢弃收到的帧，只有真正的目的主机才会接收并处理收到的帧</p><p><code>单播MAC</code>(1 V 1)：01001100 第一字节的最后一位：0<br><code>组播MAC</code>(1 V n): 00000001 第一字节的最后一位：1<br><code>广播MAC</code>(1 V all): F1111111 第一字节的最后一位：1</p><p>01005E:经典的组播MAC</p><h2 id="以太网封装格式"><a href="#以太网封装格式" class="headerlink" title="以太网封装格式"></a>以太网封装格式</h2><p>以太网两种最常用的以太网封装格式：以太2型和802.3</p><p>80年代初：DIX v2，1983年：提出IEEE8.2.3</p><p>类型的位置除了IP(0800)还有ARP(0806),PPPoE,MP,IPv6c</p><p>两种协议的主要区别在于：</p><p>EnternetII格式中包含一个Type字段，标识以太网帧处理完成值后将被发送到哪个上层协议进行处理。IEEE802.3格式同样的位置是长度字段。</p><p>以太网帧中的Type字段为0X0800，表示该帧的网络层协议为IP协议。</p><p>不同的Type字段值可以用来区别这两种帧的类型:</p><p><code>EnternetII格式</code>: Length/Type &gt;= 1536(0x0600)<br><img src="https://i.loli.net/2019/10/19/To9jSpQuv6ANefi.png" alt></p><p><code>IEEE802.3格式</code>: Length/Type &lt;= 1500(0x05DC)<br><img src="https://i.loli.net/2019/10/19/V1tadSRlEiCQgFM.png" alt></p><p>以太网帧中还包括源和目的的MAC地址，分别代表发送者和接受者的MAC，此外还有帧校验序列字段，用于检验传输过程中的完整性。</p><h1 id="以太网IP地址网络基础和FTP"><a href="#以太网IP地址网络基础和FTP" class="headerlink" title="以太网IP地址网络基础和FTP"></a>以太网IP地址网络基础和FTP</h1><h2 id="IP编制"><a href="#IP编制" class="headerlink" title="IP编制"></a>IP编制</h2><h3 id="IP编制组成"><a href="#IP编制组成" class="headerlink" title="IP编制组成"></a>IP编制组成</h3><p><img src="https://i.loli.net/2019/10/19/ndLwcGxUgrkJhCq.png" alt></p><ol><li>IP 地址分为网络部分和主机部分</li><li>IP 地址由32个二进制位组成，通常用点分十进制形式表示。</li></ol><ul><li>IP报文头部</li></ul><p><img src="https://i.loli.net/2019/10/19/R1GazuNob9qBnwY.png" alt></p><p>Tyep[Data] 的 1500 包括IP报头</p><h2 id="以太网IPv4基础和分类"><a href="#以太网IPv4基础和分类" class="headerlink" title="以太网IPv4基础和分类"></a>以太网IPv4基础和分类</h2><p><code>/8</code>：代表掩码，作用：区分网络和主机，代表8个连续的1(255.0.0.0)<br><code>127.0.0.0/8</code> ：网络(主机位全为0)<br><code>127.255.255.255/8</code> ：广播地址(主机全为1)</p><p>每个网段上有两个特俗地址不能分配给主机或网络设备。(除网络地址和广播地址外的其他IP地址可以作为网络设备的IP地址)</p><ol><li><p>IP地址主机位全为0(而不是无端一定为0)，表示一个网段。</p></li><li><p>该网段中的广播地址，目的地址为广播地址的报文会被该网段中的所有网络设备接受，广播地址的主机位全为1.</p></li></ol><h2 id="网络的进制"><a href="#网络的进制" class="headerlink" title="网络的进制"></a>网络的进制</h2><p>二进制，十进制，十六进制(MAC)</p><h2 id="IPv4地址分类"><a href="#IPv4地址分类" class="headerlink" title="IPv4地址分类"></a>IPv4地址分类</h2><p><img src="https://i.loli.net/2019/10/19/JEgjcsGPN43vtYD.png" alt></p><h3 id="地址范围"><a href="#地址范围" class="headerlink" title="地址范围"></a>地址范围</h3><p>A类：1.0.0.1<del>126.255.255.254<br>B类：128.1.0.1</del>191.255.255.254<br>C类：192.0.1.1<del>223.255.255.254<br>D类：224.0.0.0～239.255.255.255<br>E类：240.0.0.1</del>255.255.255.254</p><ul><li>NET: ABCDE的有类网络</li><li>subset：即子网(一个大的网络划分成小的网络)</li></ul><p>10.2.8.3/24 可以容纳的主机：2^8-2</p><h3 id="IP地址类型"><a href="#IP地址类型" class="headerlink" title="IP地址类型"></a>IP地址类型</h3><p>互联网标准：RFC </p><ul><li>私有地址</li></ul><ol><li>10.0.0.0~10.255.255.255</li><li>127.16.0.0~127.31.55.255</li><li>192.168.0.0~192.158.255.255</li></ol><ul><li>特俗地址</li></ul><ol><li>127.0.0.0~127.255.255.255, 127.0.0.1主机环回地址</li><li>0.0.0.0</li><li>255.255.2555.255(本地广播地址，是0.0.0.0的广播地址)</li></ol><h2 id="子网掩码-subset-mask"><a href="#子网掩码-subset-mask" class="headerlink" title="子网掩码(subset mask)"></a>子网掩码(subset mask)</h2><p><img src="https://i.loli.net/2019/10/19/YGBtav3hmNwMCDi.png" alt></p><ul><li>默认子网掩码</li></ul><p><img src="https://i.loli.net/2019/10/19/s25D4BLpFRfkITJ.png" alt></p><p>A类：8位<br>B类：16位<br>C类：24位</p><h2 id="地址规划"><a href="#地址规划" class="headerlink" title="地址规划"></a>地址规划</h2><p><img src="https://i.loli.net/2019/10/19/xzUOeirdFZqsyjh.png" alt></p><ul><li>举例</li></ul><p><img src="https://i.loli.net/2019/10/19/iNvgm3yKU5ehRZn.png" alt></p><p>由子网掩码可知：172.10.1.7/16，所以网络地址为：172.16.0.0(主机位全为0)，主机数：2^16,可用主机数: 2^16-2</p><p>例子：10.1.8.3/24的网络是什么？第一个可用主机是？最后一个可用主机？可用主机是多少？<br>10.1.8.0，10.1.8.1，10.1.8.254，$2^8$-2=254</p><ul><li>变长子网掩码</li></ul><p><img src="https://i.loli.net/2019/10/20/ScY1AUKshDLRvx4.png" alt></p><p>192.168.1.7/25</p><h2 id="有类IP编址的缺陷"><a href="#有类IP编址的缺陷" class="headerlink" title="有类IP编址的缺陷"></a>有类IP编址的缺陷</h2><p>在设计网络时使用有类IP地址会造成地址的浪费。<br><img src="https://i.loli.net/2019/10/19/Sv8LD5ZQUioz7lw.png" alt></p><h2 id="划分子网方法"><a href="#划分子网方法" class="headerlink" title="划分子网方法"></a>划分子网方法</h2><ol><li><p>根据需要的子网数目来确定子网位数，但是要确保每个子网可用的IP地址数目大于等于本机数。<br>优点：简单<br>缺点：每个子网的实际主机数不同，但分配的IP地址数目相同，可能浪费IP地址</p></li><li><p>根据每个子网的主机数目来确定主机数位，然后确定子网数位。<br>优点：比较充分地利用IP地址<br>缺点：复杂</p></li></ol><h2 id="计算"><a href="#计算" class="headerlink" title="计算"></a>计算</h2><h3 id="科学但麻烦的方法"><a href="#科学但麻烦的方法" class="headerlink" title="科学但麻烦的方法"></a>科学但麻烦的方法</h3><p>要转换二进制<br>二进制:1代表网络，0代表主机。</p><ol><li>子网的数目 = $2^x$ (x代表子网位数)</li><li>可用主机数目 = $2^y$-2 (y代表主机位数)</li><li>主机位为全1的地址时广播地址=下个子网号-1</li><li>主机位全为0的地址是网络地址。 </li></ol><ul><li>利用子网数目计算子网掩码</li></ul><blockquote><p>把B类地址172.16.0.0划分成30个子网络，它的子网掩码是多少？</p></blockquote><p>将子网络数目30转换成二进制表示11110<br>统计一下这个二进制的数共有5位<br>注意：当二进制数中只有一个1的时候，所统计的位数需要减1（例如：10000要统计为4位）<br>将B类地址的子网掩码255.255.0.0主机地址部分的前5位变成1<br>这就得到了所要的子网掩码（11111111.11111111.11111000.00000000）255.255.248.0。</p><ul><li>利用主机数目计算子网掩码<blockquote><p>把B类地址172.16.0.0划分成若干子网络，每个子网络能容纳500台主机，它的子网掩码是多少？</p></blockquote></li></ul><p>把500转换成二进制表示111110100<br>统计一下这个二进制的数共有9位<br>将子网掩码255.255.255.255从后向前的9位变成0<br>这就得到了所要的子网掩码（11111111.11111111.11111110.00000000）255.255.254.0。</p><ul><li>利用子网掩码计算最大有效子网数<blockquote><p>A类IP地址，子网掩码为255.224.0.0，它所能划分的最大有效子网数是多少？</p></blockquote></li></ul><p>将子网掩码转换成二进制表示11111111.11100000.00000000.00000000<br>统计一下它的网络位共有11位<br>A类地址网络位的基础数是8，二者之间的位数差是3<br>最大有效子网数就是$2^3$，即最多可以划分8个子网络。</p><ul><li>利用子网掩码计算最大可用主机数<blockquote><p>A类IP地址，子网掩码为255.252.0.0，将它划分成若干子网络，每个子网络中可用主机数有多少？</p></blockquote></li></ul><p>将子网掩码转换成二进制表示11111111.11111100.00000000.00000000<br>统计一下它的主机位共有18位<br>最大可用主机数就是 2^18-2（除去全是0的网络地址和全是1广播地址），即每个子网络最多有262142台主机可用。</p><ul><li>利用子网掩码确定子网络的起止地址<blockquote><p>B类IP地址172.16.0.0，子网掩码为255.255.192.0，它所能划分的子网络起止地址是多少？</p></blockquote></li></ul><p>利用子网掩码计算，最多可以划分4个子网络<br>利用子网掩码计算，每个子网络可容纳16384台主机（包括网络地址和广播地址）<br>用16384除以256（网段内包括网络地址和广播地址的全部主机数），结果是64<br>具体划分网络起止方法如下：<br>172.16.0.0～172.16.63.255<br>172.16.64.0～172.16.127.255<br>172.16.128.0～172.16.191.255<br>172.16.192.0～172.16.255.255</p><p><a href="http://blog.sina.com.cn/s/blog_5753d0930101fxdf.html" target="_blank" rel="noopener">参考来源</a></p><h2 id="快速但需要检验的方法"><a href="#快速但需要检验的方法" class="headerlink" title="快速但需要检验的方法"></a>快速但需要检验的方法</h2><p>快的方式(Block):几个主机位,算B类地址比较麻烦.</p><ul><li>例子</li></ul><p>132.56.45.7/30,网络位，主机位多少？</p><p>30转成二进制：1111，1100，后两位的0的块：$2^2$,一块最多4个主机(0-3,4-7,8-11)</p><h2 id="CIDR-无类域间路由"><a href="#CIDR-无类域间路由" class="headerlink" title="CIDR 无类域间路由"></a>CIDR 无类域间路由</h2><p>cidrreport.org<br>无间路由(Classless Inter Domain Routing):由RFC1871定义。突破传统的地址分类边界，将路由表中的若干条线路汇聚成一条路由，减少了路由表的规模，提高了路由的可扩展性。</p><p><img src="https://i.loli.net/2019/10/20/xD3bcuXPFsLTiSZ.png" alt></p><p>图中：转成二进制：<br>10.24.0000，0000.0<br>10.24.0000，0001.0<br>10.24.0000，0010.0<br>10.24.0000，0011.0</p><p>转二进制部分只有后两位不一样。把网络往前推（子网是Mask边长汇总是Mask变短),原来是24，变短就是22.</p><h2 id="网关-Gateway"><a href="#网关-Gateway" class="headerlink" title="网关(Gateway)"></a>网关(Gateway)</h2><p>用来转发来自不同网段之间的数据包。</p><p><img src="https://i.loli.net/2019/10/20/6y7Jc51WoUZINP8.png" alt></p><h2 id="实施FTP"><a href="#实施FTP" class="headerlink" title="实施FTP"></a>实施FTP</h2><ul><li>文件传输</li></ul><p>FTP：文件传输协议 (华为居多)，基于TCP，两个端口号,控制端口一般为21，而数据端口不一定是20，和FTP的应用模式有关，如果是主动模式，应该为20，如果为被动模式，由服务器端和客户端协商而定。<br>TFTP：简单文件传输协议 (思科居多)，基于UDP</p><ol><li>网络连通性<br>···bash SW1<br>interface vlanf1<br>ip address 10.1.1.1 255.255.255.0<figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">```bash SW2</span><br><span class="line">interface vlanf1</span><br><span class="line">ip address 10.1.1.2 255.255.255.0</span><br></pre></td></tr></table></figure></li></ol><p>测试连通性</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping 10.1.1.1.2</span><br></pre></td></tr></table></figure><ol start="2"><li><p>开启FTP服务</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ftp server <span class="hljs-built_in">enable</span></span><br><span class="line">diaplay ftp-servver <span class="hljs-comment"># 查看状态</span></span><br></pre></td></tr></table></figure></li><li><p>实施FTP<br>开启3A（认证，授权，统计）</p><figure class="highlight bash hljs"><figcaption><span>SW1</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">aaa</span><br><span class="line"><span class="hljs-built_in">local</span>-user Endar password simple userName <span class="hljs-comment"># 增加用户名和密码</span></span><br><span class="line"><span class="hljs-built_in">local</span>-user Endar level 15 <span class="hljs-comment"># 设置最高的访问权限，0-15级</span></span><br><span class="line"><span class="hljs-built_in">local</span>-user Endar ftp-directory flash: <span class="hljs-comment"># 共享所有目录，后面可以指定其他</span></span><br><span class="line"><span class="hljs-built_in">local</span>-user Endar server-type ftp <span class="hljs-comment"># 设置用户服务用于ftp协议</span></span><br><span class="line">save Endar.zip <span class="hljs-comment"># 保持配置文件</span></span><br></pre></td></tr></table></figure></li></ol><p>客户端测试</p><figure class="highlight bash hljs"><figcaption><span>SW2</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ftp 10.1.1.1 <span class="hljs-comment"># 后输入用户名、密码</span></span><br><span class="line">dir <span class="hljs-comment"># 查考目录</span></span><br><span class="line">get Endar.zip <span class="hljs-comment"># 获取文件</span></span><br><span class="line">q <span class="hljs-comment"># 退出</span></span><br></pre></td></tr></table></figure><h1 id="以太网IP头部概述和VRP相关讲解"><a href="#以太网IP头部概述和VRP相关讲解" class="headerlink" title="以太网IP头部概述和VRP相关讲解"></a>以太网IP头部概述和VRP相关讲解</h1><p>一公司四个部门，5、25、27、15人，规划每个部门vlan，给固定长度掩码：192.168.1.0/27，192.168.1.32/27，192.168.1.64/27，192.168.1.96/27</p><h2 id="IP包头的重要字段"><a href="#IP包头的重要字段" class="headerlink" title="IP包头的重要字段"></a>IP包头的重要字段</h2><h2 id="VRP基础-应用"><a href="#VRP基础-应用" class="headerlink" title="VRP基础(应用)"></a>VRP基础(应用)</h2><h1 id="VRP-通用路由平台-的FTP应用"><a href="#VRP-通用路由平台-的FTP应用" class="headerlink" title="VRP(通用路由平台)的FTP应用"></a>VRP(通用路由平台)的FTP应用</h1><p>可以Web、Cli登录<br>常用密码：Admin@huawei</p><h2 id="设备初始化启动"><a href="#设备初始化启动" class="headerlink" title="设备初始化启动"></a>设备初始化启动</h2><p>bios 自检<br>内存检测<br>copy 数据(VRP包拷贝)<br>解压缩到内存<br>CTRL + B 停止自动启动(后可以初始密码)</p><h2 id="命令行视图"><a href="#命令行视图" class="headerlink" title="命令行视图"></a>命令行视图</h2><p><img src="https://i.loli.net/2019/10/20/RLPUMe4njqVylga.png" alt></p><ul><li>用户视图</li></ul><p>清除、display、保存</p><ul><li>系统视图(system-view)</li></ul><p>以中括号显示。可以display，但不能清除、保存<br>配置系统参数</p><ul><li><p>接口视图</p></li><li><p>协议视图<br>OSPF、BGP、is-is</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">system-view</span><br><span class="line">ospf <span class="hljs-comment"># 进入 osp 协议设置</span></span><br><span class="line">bgp <span class="hljs-comment"># 将进入 bgp协议设置</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="命令行功能"><a href="#命令行功能" class="headerlink" title="命令行功能"></a>命令行功能</h2><table><thead><tr><th align="left">命令</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">CTRL + A</td><td align="left">光标移动到当前目录行最前端</td></tr><tr><td align="left">CTRL + E</td><td align="left">光标移动到当前目录行最末端</td></tr><tr><td align="left">CTRL + C</td><td align="left">停止当前命令的运行</td></tr><tr><td align="left">CTRL + Z</td><td align="left">回到用户视图</td></tr><tr><td align="left">CTRL + ]</td><td align="left">终止当前连接或切换连接</td></tr><tr><td align="left">Backspace</td><td align="left">删除光标左边的第一个字符</td></tr><tr><td align="left">⬅ Or CTRL + B</td><td align="left">光标左移一位</td></tr><tr><td align="left">➡ Or CRTL + F</td><td align="left">光标右移一位</td></tr><tr><td align="left">TAB</td><td align="left">输入一个不完整的命令按TAB进行补全</td></tr></tbody></table><h2 id="命令行在线帮助"><a href="#命令行在线帮助" class="headerlink" title="命令行在线帮助"></a>命令行在线帮助</h2><ul><li>部分帮助</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;d?</span><br><span class="line">&lt;Huawei&gt;display h?</span><br></pre></td></tr></table></figure><ul><li>完全帮助</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;Huawei&gt;?</span><br><span class="line">&lt;Huawei&gt;dislay?</span><br></pre></td></tr></table></figure><h2 id="命令等级"><a href="#命令等级" class="headerlink" title="命令等级"></a>命令等级</h2><table><thead><tr><th align="left">用户等级</th><th align="left">命令等级</th><th align="left">名称</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">0</td><td align="left">访问级</td></tr><tr><td align="left">1</td><td align="left">0 and 1</td><td align="left">监控级</td></tr><tr><td align="left">2</td><td align="left">0，1 and 2</td><td align="left">配置级</td></tr><tr><td align="left">3-15</td><td align="left">0，1，2 and 3</td><td align="left">管理级</td></tr></tbody></table><p>允许某管理员保存系统配置，则可以将save命令的级别提高到4级，并定义只有该管理员有4级权限。就可以在不影响其他用户的情况下，实现命令的使用控制。</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">system-view</span><br><span class="line"><span class="hljs-built_in">command</span>-privileage level 2 view user save</span><br></pre></td></tr></table></figure><h2 id="用户界面"><a href="#用户界面" class="headerlink" title="用户界面"></a>用户界面</h2><p>VTY接口最大可配范围：0~4</p><table><thead><tr><th align="left">用户界面类型</th><th align="left">编号</th></tr></thead><tbody><tr><td align="left">Console</td><td align="left">0</td></tr><tr><td align="left">VTY</td><td align="left">0~4</td></tr></tbody></table><figure class="highlight bash hljs"><figcaption><span>R1</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">system-view</span><br><span class="line">user-intetface vty 0 4</span><br><span class="line"><span class="hljs-built_in">set</span> authentication password clipher pass</span><br></pre></td></tr></table></figure><figure class="highlight bash hljs"><figcaption><span>R2</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">talnet 12.1.1.1</span><br></pre></td></tr></table></figure><figure class="highlight bash hljs"><figcaption><span>R1</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">diaplay users <span class="hljs-comment"># 查看用户</span></span><br><span class="line">user privilege level 2 <span class="hljs-comment"># 设置用户登陆权限</span></span><br></pre></td></tr></table></figure><p><code>user-interface maximum-vty number</code> 可以配置同时登陆到设备的VTY类型用户界面的最大个数，如最大登录用户数设为0，则任何用户都不能通过Telnet或者SSH登陆到路由器。</p><ul><li>配置用户界面命令</li></ul><table><thead><tr><th align="left">命令</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">idle-tineout</td><td align="left">设置超时时间默认十分钟</td></tr><tr><td align="left">screen-length</td><td align="left">设置指定终端屏幕的临时显示行数(0不显示)</td></tr><tr><td align="left">history-command max-size</td><td align="left">设置历史命令缓冲区的大小</td></tr></tbody></table><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">system-view</span><br><span class="line">user-interface console 0</span><br><span class="line">histoty-command max-size 20</span><br><span class="line">indle-timeout 1 30 <span class="hljs-comment"># 1分20秒(最好不要改))</span></span><br></pre></td></tr></table></figure><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">system-view</span><br><span class="line">user-interface console 0</span><br><span class="line">screen-length 512 <span class="hljs-comment"># 最大行数512</span></span><br></pre></td></tr></table></figure><h2 id="CTR-快捷键"><a href="#CTR-快捷键" class="headerlink" title="CTR 快捷键"></a>CTR 快捷键</h2><table><thead><tr><th align="left">命令</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">CTRL + TAB</td><td align="left">到达后一标签</td></tr><tr><td align="left">CTRL + SHIFT + TAB</td><td align="left">前一标签</td></tr><tr><td align="left">ALT + 数字</td><td align="left">直接到达某标签</td></tr></tbody></table><h2 id="配置标题消息"><a href="#配置标题消息" class="headerlink" title="配置标题消息"></a>配置标题消息</h2><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 配置在用户登录前显示的标题信息</span></span><br><span class="line">header login information <span class="hljs-string">"Welcome to huawei certification"</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 配置在用户登陆后显示的标题信息</span></span><br><span class="line">header shell information <span class="hljs-string">"Please dont't reboot this devices"</span></span><br></pre></td></tr></table></figure><p><code>dis current-configuration | ?</code><br><code>dis current-configuration | include header</code> 显示包含 header 的命令有哪些 </p><h1 id="文件系统管理"><a href="#文件系统管理" class="headerlink" title="文件系统管理"></a>文件系统管理</h1><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><table><thead><tr><th align="left">命令</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">pwd</td><td align="left">查看当前目录</td></tr><tr><td align="left">dir</td><td align="left">显示当前目录下的文件信息</td></tr><tr><td align="left">more</td><td align="left">查看文本文件的具体内容</td></tr><tr><td align="left">cd</td><td align="left">修改当前用户当前界面的工作目录</td></tr><tr><td align="left">mkdir</td><td align="left">创建新目录</td></tr><tr><td align="left">rmdir</td><td align="left">删除目录</td></tr><tr><td align="left">copy</td><td align="left">复制文件</td></tr><tr><td align="left">move</td><td align="left">移动文件</td></tr><tr><td align="left">rename</td><td align="left">村民们文件</td></tr><tr><td align="left">delete / unreserved</td><td align="left">删除/永久删除文件</td></tr><tr><td align="left">undelete</td><td align="left">恢复删除的文件</td></tr><tr><td align="left">reset recycle-bin</td><td align="left">彻底删除回收站的文件</td></tr><tr><td align="left">save</td><td align="left">保存配置，要在用户模式下</td></tr></tbody></table><h2 id="配置文件管理"><a href="#配置文件管理" class="headerlink" title="配置文件管理"></a>配置文件管理</h2><p><img src="https://i.loli.net/2019/10/20/B7dYZRDnW2tQmc6.png" alt></p><ul><li>配置文件查询</li></ul><table><thead><tr><th align="left">命令</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">diaplay curremt-contiguration</td><td align="left">显示当前配置文件</td></tr><tr><td align="left">diaplay saved-configuration</td><td align="left">显示保存的配置文件</td></tr></tbody></table><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">save Endar.zip <span class="hljs-comment"># 保存配置</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 查看当前配置</span></span><br><span class="line">diaplay current-configuration</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 显示保存的配置文件</span></span><br><span class="line">diaplay saved-configuration</span><br></pre></td></tr></table></figure><ul><li>系统启动文件查查</li></ul><table><thead><tr><th align="left">命令</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">display startup</td><td align="left">查看系统启动参数</td></tr></tbody></table><ul><li>系统启动配置文件修改</li></ul><p><code>startuo ?</code> :</p><ol><li>path # 加载补丁</li><li>save-configuration # 加载下次的配置</li><li>system-software # 加载下次启动的软件</li></ol><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 配置系统下次启动时使用的配置文件</span></span><br><span class="line">startup save-configuration Ender.zip</span><br><span class="line">dis startup</span><br></pre></td></tr></table></figure><ul><li>比较当前配置和保存的配置</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compare configuration</span><br></pre></td></tr></table></figure><ul><li>配置文件重装</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 清楚下次启动时加载的配置文件</span></span><br><span class="line">reset save-contiguration</span><br></pre></td></tr></table></figure><ul><li>设置环回地址<figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">system-view</span><br><span class="line">interface loopback 0</span><br><span class="line">ip address 10.1.1.1 32</span><br></pre></td></tr></table></figure></li></ul><h2 id="存储设备"><a href="#存储设备" class="headerlink" title="存储设备"></a>存储设备</h2><p>SDRAM、Flash、NVRAM、SD Card、USB</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 显示存储设备信息</span></span><br><span class="line">diaplay version</span><br></pre></td></tr></table></figure><ul><li>存储设备修复</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fixdisk flash:</span><br><span class="line"></span><br><span class="line">fixdisk ad1:</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HCNA 学习笔记&lt;/p&gt;
    
    </summary>
    
      <category term="Coding" scheme="https://vitan.me/categories/Coding/"/>
    
    
      <category term="Linux" scheme="https://vitan.me/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>LAMP</title>
    <link href="https://vitan.me/posts/LAMP.html"/>
    <id>https://vitan.me/posts/LAMP.html</id>
    <published>2019-10-15T04:32:16.000Z</published>
    <updated>2019-12-10T01:38:54.152Z</updated>
    
    <content type="html"><![CDATA[<p>Linux 编译安装 LAMP </p><a id="more"></a><h1 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h1><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>编译工具&amp;开发包</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install make gcc openssl</span><br></pre></td></tr></table></figure><p>依赖包</p><table><thead><tr><th align="left">包</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><a href="https://httpd.apache.org/" target="_blank" rel="noopener">httpd</a></td><td align="left">Apache 主程序包</td></tr><tr><td align="left"><a href="https://apr.apache.org/download.cgi" target="_blank" rel="noopener">apr</a></td><td align="left">Apache 依赖包</td></tr><tr><td align="left"><a href="https://apr.apache.org/download.cgi" target="_blank" rel="noopener">apr-util</a></td><td align="left">Apache 依赖包</td></tr><tr><td align="left"><a href="https://ftp.pcre.org/pub/pcre/" target="_blank" rel="noopener">pcre</a></td><td align="left">Apache 依赖包</td></tr></tbody></table><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><ul><li>apr</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf apr-1.5.2.tar.gz</span><br><span class="line"><span class="hljs-built_in">cd</span> apr-1.5.2</span><br><span class="line">./configure --prefix=/usr/<span class="hljs-built_in">local</span>/apr</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><ul><li>apr-util</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf apr-util-1.5.4.tar.gz</span><br><span class="line"><span class="hljs-built_in">cd</span> apr-tuil-1.5.4</span><br><span class="line">./configure --prefix=/usr/<span class="hljs-built_in">local</span>/apr-util/\</span><br><span class="line">--with-apr=/usr/<span class="hljs-built_in">local</span>/apr/bin/apr-1-config</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><ul><li>pcre</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">unzip -o pcre-8.38.zip</span><br><span class="line"><span class="hljs-built_in">cd</span> pcre-8.38</span><br><span class="line">./cofigure --prefix=/usr/<span class="hljs-built_in">local</span>/pcre</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><ul><li>Apache</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf httpd-2.4.18.tar.gz -C /usr/<span class="hljs-built_in">local</span>/src/</span><br><span class="line"><span class="hljs-built_in">cd</span> /usr/<span class="hljs-built_in">local</span>/src/httpd-2.4.18/</span><br><span class="line">./configure --prefix=/usr/<span class="hljs-built_in">local</span>/apache2 \</span><br><span class="line">--<span class="hljs-built_in">enable</span>-so \</span><br><span class="line">--<span class="hljs-built_in">enable</span>-ssl \</span><br><span class="line">--with-apr=/usr/<span class="hljs-built_in">local</span>/apr/ \</span><br><span class="line">--with-apr-util=/usr/<span class="hljs-built_in">local</span>/apr-util/ \</span><br><span class="line">--with-pcre=/usr/<span class="hljs-built_in">local</span>/pcre/</span><br></pre></td></tr></table></figure><p>注:<br>–enable-so # 支持动态加载模块哦<br>–enable-rewrite # 支持网站地址重写<br>–with-apr=/usr/local/apr # 关联 apr</p><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /usr/<span class="hljs-built_in">local</span>/apache2/conf/httpd.conf</span><br></pre></td></tr></table></figure><h3 id="网站根目录"><a href="#网站根目录" class="headerlink" title="网站根目录"></a>网站根目录</h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /usr/<span class="hljs-built_in">local</span>/apache2/htdocs/</span><br></pre></td></tr></table></figure><h3 id="生成启动脚本"><a href="#生成启动脚本" class="headerlink" title="生成启动脚本"></a>生成启动脚本</h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/<span class="hljs-built_in">local</span>/apache2/bin/apachectl  /etc/init.d/</span><br><span class="line">chmod +x /etc/init.d/apachectl</span><br></pre></td></tr></table></figure><p>vim /etc/init.d/apachectl</p><figure class="highlight bash hljs"><figcaption><span>apachectl</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># chkconfig: 2345 64 36</span></span><br><span class="line"><span class="hljs-comment"># descroption:  apache service</span></span><br></pre></td></tr></table></figure><h2 id="将服务添加到系统启动列表"><a href="#将服务添加到系统启动列表" class="headerlink" title="将服务添加到系统启动列表"></a>将服务添加到系统启动列表</h2><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --add apachectl</span><br><span class="line">chkconfig apachectl on</span><br><span class="line">chkconfig --list apachectl </span><br><span class="line">service apachectl start</span><br></pre></td></tr></table></figure><h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><h2 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h2><p><a href="https://sourceforge.net/projects/boost/files/latest/download" target="_blank" rel="noopener">boost</a><br><a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">MySQL</a></p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y remove boost</span><br><span class="line">yum -y remove mysql</span><br></pre></td></tr></table></figure><h2 id="Install-1"><a href="#Install-1" class="headerlink" title="Install"></a>Install</h2><h3 id="添加用户和组"><a href="#添加用户和组" class="headerlink" title="添加用户和组"></a>添加用户和组</h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupadd mysql</span><br><span class="line">useradd -M -s /sbin/nologin -r -g mysql mysql</span><br></pre></td></tr></table></figure><h3 id="创建安装目录和数据存放目录"><a href="#创建安装目录和数据存放目录" class="headerlink" title="创建安装目录和数据存放目录"></a>创建安装目录和数据存放目录</h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir /server</span><br><span class="line">mount /dev/sdb2 /server/</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 开机自动挂载</span></span><br><span class="line"><span class="hljs-built_in">echo</span> <span class="hljs-string">"/dev/sdb2 /server ext4 defaults 0 0"</span> &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /server/mysql/data</span><br><span class="line">tar -zxvf boost_1_59_0.tar.gz</span><br><span class="line">mv booboost_1_59_0 boost</span><br><span class="line">tar -zxvf mysql-5.7.11.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">cd</span> mysql-5.7.11</span><br><span class="line"> cmake . \</span><br><span class="line">-DCMAKE_INSTALL_PREFIX=/usr/<span class="hljs-built_in">local</span>/mysql \</span><br><span class="line">-DSYSCONFDIR=/server/mysql/data \</span><br><span class="line">-DSYCONFDIR=/etc \</span><br><span class="line">-DWITH_MYISAM_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_INNOBASE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_MEMORY_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_READLINE=1 \</span><br><span class="line">-DMYSQL_UNIX_ADDR=/tmp/mysql.sock \</span><br><span class="line">-DMYSQL_TCP_PORT=3306 \</span><br><span class="line">-DENABLED_LOCAL_INFILE=1 \</span><br><span class="line">-DWITH_PARTITION_STORAGE_ENGINE=1 \</span><br><span class="line">-DEXTRA_CHARSETS=all \</span><br><span class="line">-DDEFAULT_CHARSET=utf8 \</span><br><span class="line">-DDEFAULT_COLLATION=utf8_general_ci \</span><br><span class="line">-DDOWNLOAD_BOOST=1 \</span><br><span class="line">DWITH_BOOST=/server/boost</span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">make -j 4 <span class="hljs-comment"># 多核心安装</span></span><br><span class="line"><span class="hljs-comment"># 查看核心数</span></span><br><span class="line">grep processor /proc.cpuinfo | wc -l</span><br><span class="line"></span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>修改目录权限</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R mysql:mysql /server/mysql/</span><br></pre></td></tr></table></figure><p>生成配置文件</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv /etc/my.cnf&#123;,.bak&#125;</span><br><span class="line">cp /server/mysql/support-files/my-default.cnf /etc/my.cnf</span><br></pre></td></tr></table></figure><p>生成服务启动脚本</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp /server/mysql/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">chkcongig mysqld on</span><br><span class="line">chkconfig --list mysqld</span><br></pre></td></tr></table></figure><p>初始化数据库</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/server/mysqk/bin/mysqld --initialize-insecure --user=mysql --basedir=/server/mysql --datadir=/server/mydql/data</span><br></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server mysqld start</span><br></pre></td></tr></table></figure><p>添加 path 路径</p><ol><li>方法一</li></ol><figure class="highlight bash hljs"><figcaption><span>vim</span><a href="/etc/profile">link</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">export</span> MYSQL_HOME=/server/mysql</span><br><span class="line"><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$MYSQL_HOMW</span>/bin</span><br></pre></td></tr></table></figure><p>使修改生效</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><ol start="2"><li>方法二<figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /server/mysql/bin/* /user/<span class="hljs-built_in">local</span>/bin</span><br></pre></td></tr></table></figure></li></ol><p>修改密码</p><ol><li>方法一</li></ol><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u roor password <span class="hljs-string">"123456"</span></span><br></pre></td></tr></table></figure><ol start="2"><li>方法二</li></ol><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql</span><br><span class="line"><span class="hljs-built_in">set</span> password=password(<span class="hljs-string">'123456'</span>);</span><br></pre></td></tr></table></figure><h1 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h1><h2 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h2><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install php-mcrypt libmcrypt libmcrypt-devel autoconf freetype gd libmcrypt libpng libpng-devel libjpeg libxml2 libxml2-devel zlib curl curl-devel</span><br></pre></td></tr></table></figure><h2 id="Install-2"><a href="#Install-2" class="headerlink" title="Install"></a>Install</h2><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar  zxvf php-7.05.tar.gz</span><br></pre></td></tr></table></figure><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">cd</span> php-7.05</span><br><span class="line">./configure --prefix=/server/php7/ \</span><br><span class="line">--with-apx2=/use/<span class="hljs-built_in">local</span>/apache2/bin/apxs \</span><br><span class="line">--<span class="hljs-built_in">enable</span>-mbstring \</span><br><span class="line">--with-curl \</span><br><span class="line">--with-gd \</span><br><span class="line">--<span class="hljs-built_in">enable</span>-fpm \</span><br><span class="line">--enab;e-musqld \</span><br><span class="line">--with-pdo-mysql=mysqld \</span><br><span class="line">--with-config-file-path=/server/php7/etc/ \</span><br><span class="line">--with-mysqli=mysqlnd \</span><br><span class="line">--with-mysql-socl=/server/mysql/mysql.sock</span><br></pre></td></tr></table></figure><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make -j 4</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>生成配置文件</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp php.ini-production /server/php7/etc/php.int</span><br></pre></td></tr></table></figure><p>添加 Apache 支持</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/<span class="hljs-built_in">local</span>/apache2/cong/httpd.conf</span><br><span class="line"></span><br><span class="line">Addtype application/x-httpd=php .php .phtml</span><br></pre></td></tr></table></figure><p>创建测试页面</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">cd</span> /usr/<span class="hljs-built_in">local</span>/apache2/htdocs/</span><br><span class="line"><span class="hljs-built_in">echo</span> <span class="hljs-string">"</span></span><br><span class="line"><span class="hljs-string">&lt;?php phpinfo();</span></span><br><span class="line"><span class="hljs-string">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux 编译安装 LAMP &lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://vitan.me/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://vitan.me/tags/Linux/"/>
    
      <category term="Web" scheme="https://vitan.me/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>解决Python Pip 速度慢</title>
    <link href="https://vitan.me/posts/PipInstall.html"/>
    <id>https://vitan.me/posts/PipInstall.html</id>
    <published>2019-09-19T14:32:19.000Z</published>
    <updated>2019-12-10T01:38:54.157Z</updated>
    
    <content type="html"><![CDATA[<p>解决 Python 安装库时速度慢或者超时问题</p><a id="more"></a><h1 id="设置超时时间"><a href="#设置超时时间" class="headerlink" title="设置超时时间"></a>设置超时时间</h1><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip --default-timeout=<span class="hljs-number">1000</span> install jieba</span><br></pre></td></tr></table></figure><h1 id="i-指定源"><a href="#i-指定源" class="headerlink" title="-i 指定源"></a>-i 指定源</h1><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install wordcloud -i https://pypi.tuna.tsinghua.edu.cn/simple/</span><br></pre></td></tr></table></figure><h1 id="更改默认设置"><a href="#更改默认设置" class="headerlink" title="更改默认设置"></a>更改默认设置</h1><figure class="highlight python hljs"><figcaption><span>~/.pip/pip.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="hljs-keyword">global</span>]</span><br><span class="line">index-url = http://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">[install]</span><br><span class="line">trusted-host=mirrors.aliyun.com</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;解决 Python 安装库时速度慢或者超时问题&lt;/p&gt;
    
    </summary>
    
      <category term="Coding" scheme="https://vitan.me/categories/Coding/"/>
    
    
      <category term="Linux" scheme="https://vitan.me/tags/Linux/"/>
    
      <category term="Python" scheme="https://vitan.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Matplotlib 中文乱码</title>
    <link href="https://vitan.me/posts/MatplotlibZh.html"/>
    <id>https://vitan.me/posts/MatplotlibZh.html</id>
    <published>2019-09-18T14:42:36.000Z</published>
    <updated>2019-12-10T01:38:54.155Z</updated>
    
    <content type="html"><![CDATA[<p>Linux 解决 matplotlib 中文乱码问题</p><a id="more"></a><h1 id="安装字体"><a href="#安装字体" class="headerlink" title="安装字体"></a>安装字体</h1><ul><li><p>安装中文字体，例如 SimHei</p></li><li><p>检测本机中文字体</p></li></ul><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> matplotlib.font_manager <span class="hljs-keyword">import</span> FontManager</span><br><span class="line"><span class="hljs-keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">fm = FontManager()</span><br><span class="line">mat_fonts = set(f.name <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> fm.ttflist)</span><br><span class="line"><span class="hljs-comment">#print(mat_fonts)</span></span><br><span class="line">output = subprocess.check_output(<span class="hljs-string">'fc-list :lang=zh -f "%&#123;family&#125;\n"'</span>, shell=<span class="hljs-literal">True</span>)</span><br><span class="line"><span class="hljs-comment">#print( '*' * 10, '系统可用的中文字体', '*' * 10)</span></span><br><span class="line"><span class="hljs-comment">#print (output)</span></span><br><span class="line">zh_fonts = set(f.split(<span class="hljs-string">','</span>, <span class="hljs-number">1</span>)[<span class="hljs-number">0</span>] <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> output.decode(<span class="hljs-string">'utf-8'</span>).split(<span class="hljs-string">'\n'</span>))</span><br><span class="line">available = mat_fonts &amp; zh_fonts</span><br><span class="line"><span class="hljs-keyword">print</span> (<span class="hljs-string">'*'</span> * <span class="hljs-number">10</span>, <span class="hljs-string">'可用的字体'</span>, <span class="hljs-string">'*'</span> * <span class="hljs-number">10</span>)</span><br><span class="line"><span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> available:</span><br><span class="line">     <span class="hljs-keyword">print</span> (f)</span><br></pre></td></tr></table></figure><h1 id="配置字体"><a href="#配置字体" class="headerlink" title="配置字体"></a>配置字体</h1><ul><li>复制字体</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo cp font.ttf /usr/share/fonts</span><br><span class="line">sudo cp font.ttf /usr/lib/python3.7/site-packages/matplotlib/mpl-data/fonts</span><br></pre></td></tr></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><figure class="highlight plain hljs"><figcaption><span>/usr/lib/python3.7/site-packages/matplotlib/mpl-data</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nvim matplotlibrc</span><br></pre></td></tr></table></figure><ul><li>matplotlibrc</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">font.family     : sans-serif                                           </span><br><span class="line">font.serif▏     : serif     </span><br><span class="line"></span><br><span class="line">font.serif         : SimHei,Source Code Pro,DejaVu Serif, Bitstream Vera Serif, Computer Modern Roman, New Century Schoolbook, Century Schoolbook L, Utopia</span><br><span class="line">font.sans-serif    : SimHei,Source Code Pro,DejaVu Sans, Bitstream Vera Sans, Computer Modern Sans Serif, Lucida Grande, Verdana, Geneva, Lucid, Arial, Helvetica</span><br></pre></td></tr></table></figure><h1 id="清楚缓存"><a href="#清楚缓存" class="headerlink" title="清楚缓存"></a>清楚缓存</h1><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ~/.cache/matplotlib</span><br></pre></td></tr></table></figure><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 中文乱码的处理</span></span><br><span class="line">from pylab import mpl</span><br><span class="line">mpl.rcParams[<span class="hljs-string">'font.sans-serif'</span>] = [<span class="hljs-string">'Source Code Pro'</span>] <span class="hljs-comment"># 指定默认字体</span></span><br><span class="line">mpl.rcParams[<span class="hljs-string">'axes.unicode_minus'</span>] = False <span class="hljs-comment"># 解决保存图像是负号'-'显示为方块的问题</span></span><br></pre></td></tr></table></figure><hr><p><strong>参考资料</strong></p><ul><li><a href="https://segmentfault.com/a/1190000000621721" target="_blank" rel="noopener">Linux下解决matplotlib中文乱码的方法</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux 解决 matplotlib 中文乱码问题&lt;/p&gt;
    
    </summary>
    
      <category term="Diary" scheme="https://vitan.me/categories/Diary/"/>
    
    
      <category term="Linux" scheme="https://vitan.me/tags/Linux/"/>
    
      <category term="ArchLinux" scheme="https://vitan.me/tags/ArchLinux/"/>
    
      <category term="Python" scheme="https://vitan.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Linux Wine 调整分辨率</title>
    <link href="https://vitan.me/posts/Wine-dpi.html"/>
    <id>https://vitan.me/posts/Wine-dpi.html</id>
    <published>2019-09-17T06:43:23.000Z</published>
    <updated>2019-12-10T01:38:54.199Z</updated>
    
    <content type="html"><![CDATA[<p>Linux Wine 调整分辨率</p><a id="more"></a><h1 id="终端输入"><a href="#终端输入" class="headerlink" title="终端输入"></a>终端输入</h1><ul><li>应用设置</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">env WINEPREFIX=<span class="hljs-string">"<span class="hljs-variable">$HOME</span>/.deepinwine/Deepin-WeChat"</span> winecfg</span><br></pre></td></tr></table></figure><ul><li>全局设置</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">winecfg</span><br></pre></td></tr></table></figure><h1 id="设置分辨率"><a href="#设置分辨率" class="headerlink" title="设置分辨率"></a>设置分辨率</h1><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/Wine-dpi.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux Wine 调整分辨率&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://vitan.me/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://vitan.me/tags/Linux/"/>
    
      <category term="Wine" scheme="https://vitan.me/tags/Wine/"/>
    
  </entry>
  
  <entry>
    <title>Xpath 升格用法</title>
    <link href="https://vitan.me/posts/Xpath.html"/>
    <id>https://vitan.me/posts/Xpath.html</id>
    <published>2019-09-12T11:05:17.000Z</published>
    <updated>2019-12-10T01:38:54.199Z</updated>
    
    <content type="html"><![CDATA[<p>xpath 升格用法</p><a id="more"></a><h1 id="匹配当前节点下所有子节点"><a href="#匹配当前节点下所有子节点" class="headerlink" title="匹配当前节点下所有子节点 .//"></a>匹配当前节点下所有子节点 <code>.//</code></h1><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xpath(<span class="hljs-string">'//div//'</span>) <span class="hljs-comment"># div 当前节点</span></span><br></pre></td></tr></table></figure><ul><li><code>//</code> 标签下的所有标签</li></ul><h1 id="匹配某标签的属性值-属性名称"><a href="#匹配某标签的属性值-属性名称" class="headerlink" title="匹配某标签的属性值 /@属性名称"></a>匹配某标签的属性值 <code>/@属性名称</code></h1><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 获取 input value</span></span><br><span class="line">xpath(<span class="hljs-string">'//input/@value'</span>)</span><br></pre></td></tr></table></figure><h1 id="匹配多个路径"><a href="#匹配多个路径" class="headerlink" title="匹配多个路径 |"></a>匹配多个路径 <code>|</code></h1><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xpath(<span class="hljs-string">'//div/text() | //div/div/text()'</span>)</span><br></pre></td></tr></table></figure><h1 id="按属性匹配"><a href="#按属性匹配" class="headerlink" title="按属性匹配 @"></a>按属性匹配 <code>@</code></h1><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 获取所有id="test"的所有文本内容</span></span><br><span class="line">xpath(<span class="hljs-string">'//*[@id="test"]//text()'</span>)</span><br></pre></td></tr></table></figure><h1 id="匹配不包含某个属性的标签-not"><a href="#匹配不包含某个属性的标签-not" class="headerlink" title="匹配不包含某个属性的标签 not"></a>匹配不包含某个属性的标签 <code>not</code></h1><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 多用于表格中匹配中不包含表头信息的数据</span></span><br><span class="line">xpath(<span class="hljs-string">'//table/tr[not(@class="tbhead")]'</span>)</span><br></pre></td></tr></table></figure><h1 id="匹配包含多个属性的标签-and"><a href="#匹配包含多个属性的标签-and" class="headerlink" title="匹配包含多个属性的标签 and"></a>匹配包含多个属性的标签 <code>and</code></h1><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 匹配所有的tr中不包含 tbhead 属性 和包含 head 的tr标签</span></span><br><span class="line">xpath(<span class="hljs-string">'//table/tr[not(@class="tbhead") and @class="head"]'</span>)</span><br></pre></td></tr></table></figure><h1 id="匹配包含不同属性的名称相同的标签-or"><a href="#匹配包含不同属性的名称相同的标签-or" class="headerlink" title="匹配包含不同属性的名称相同的标签 or"></a>匹配包含不同属性的名称相同的标签 <code>or</code></h1><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 匹配包含class="speedbar" 或者 class="content-wrap" 的标签</span></span><br><span class="line">xpath（<span class="hljs-string">'//div[@class="speedbar" or @class="content-wrap"]'</span>）</span><br></pre></td></tr></table></figure><h1 id="将对象还原为字符串-etree-tostring（）"><a href="#将对象还原为字符串-etree-tostring（）" class="headerlink" title="将对象还原为字符串 etree.tostring（）"></a>将对象还原为字符串 <code>etree.tostring（）</code></h1><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 将匹配到的对象，作为etree.tostring（）的参数即可，  注： 返回字符串</span></span><br><span class="line">sObj = xml.xpath(<span class="hljs-string">'//*[@id="test"]'</span>)[<span class="hljs-number">0</span>]<span class="hljs-comment"># 使用xpath定位一个节点</span></span><br><span class="line">sStr = etree.tostring(sObj)</span><br></pre></td></tr></table></figure><h1 id="按轴-Axes-匹配"><a href="#按轴-Axes-匹配" class="headerlink" title="按轴(Axes)匹配"></a>按轴(Axes)匹配</h1><h2 id="选取当前节点的所有子元素-child"><a href="#选取当前节点的所有子元素-child" class="headerlink" title="选取当前节点的所有子元素 child"></a>选取当前节点的所有子元素 <code>child</code></h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 获取div下的tr的标签</span></span><br><span class="line">xpath(<span class="hljs-string">'//div[@id="testid"]/child::tr/td/text()'</span>)</span><br><span class="line"><span class="hljs-comment"># 感觉这种方法鸡肋， 也可以实现</span></span><br><span class="line">xpath(<span class="hljs-string">'//div[@id="testid"]//tr/td'</span>)</span><br></pre></td></tr></table></figure><h2 id="选取当前节点的所有属性-attribute"><a href="#选取当前节点的所有属性-attribute" class="headerlink" title="选取当前节点的所有属性 attribute"></a>选取当前节点的所有属性 <code>attribute</code></h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 获取div标签所有的属性值</span></span><br><span class="line">xpath(<span class="hljs-string">'//div/attribute::*'</span>) </span><br><span class="line"><span class="hljs-comment"># 感觉这种方法鸡肋，//div/@* 同样能实现</span></span><br></pre></td></tr></table></figure><h2 id="ancestor：父辈元素-ancestor-or-self：父辈元素及当前元素"><a href="#ancestor：父辈元素-ancestor-or-self：父辈元素及当前元素" class="headerlink" title="ancestor：父辈元素 / ancestor-or-self：父辈元素及当前元素"></a>ancestor：父辈元素 / ancestor-or-self：父辈元素及当前元素</h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 获取父辈元素的div的所有属性值， 在不好定位的情况下，通过孩子标签定位，这种方法可以用</span></span><br><span class="line">xpath(<span class="hljs-string">'//div[@id="test"]/ancestor::div/@*'</span>)</span><br><span class="line">xpath(<span class="hljs-string">'//div[@id="test"]/ancestor-or-self::div/@*'</span>)</span><br></pre></td></tr></table></figure><h2 id="descendant：后代-descendant-or-self：后代及当前节点本身"><a href="#descendant：后代-descendant-or-self：后代及当前节点本身" class="headerlink" title="descendant：后代 / descendant-or-self：后代及当前节点本身"></a>descendant：后代 / descendant-or-self：后代及当前节点本身</h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 获取孩子元素的div的所有属性值，感觉鸡肋</span></span><br><span class="line">xpath(<span class="hljs-string">'//div[@id="test"]/descendant::div/@*'</span>)</span><br><span class="line">xpath(<span class="hljs-string">'//div[@id="test"]/descendant-or-self::div/@*'</span>)</span><br></pre></td></tr></table></figure><h2 id="选取当前节点的所有命名空间节点-namespace"><a href="#选取当前节点的所有命名空间节点-namespace" class="headerlink" title="选取当前节点的所有命名空间节点 namespace"></a>选取当前节点的所有命名空间节点 <code>namespace</code></h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xpath(<span class="hljs-string">'//div[@id="test"]/namespace::*'</span>)</span><br></pre></td></tr></table></figure><h2 id="定位-position"><a href="#定位-position" class="headerlink" title="定位 position"></a>定位 <code>position</code></h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 和通过下标定位一样， 方法鸡肋</span></span><br><span class="line">xpath(<span class="hljs-string">'//*[@id="test"]/ol/li[position()=2]/text()'</span>)</span><br></pre></td></tr></table></figure><h1 id="Xpath-函数"><a href="#Xpath-函数" class="headerlink" title="Xpath 函数"></a>Xpath 函数</h1><h2 id="统计数量-count"><a href="#统计数量-count" class="headerlink" title="统计数量 count"></a>统计数量 <code>count</code></h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 统计符合要求节点的数量,返回字符串</span></span><br><span class="line">xpath(<span class="hljs-string">'count(//tr[@info])'</span>)</span><br></pre></td></tr></table></figure><h2 id="字符串拼接-concat"><a href="#字符串拼接-concat" class="headerlink" title="字符串拼接 concat"></a>字符串拼接 <code>concat</code></h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 统计出来的两个内容的字符串进行“ + ”处理,返回字符串</span></span><br><span class="line">xpath(<span class="hljs-string">'concat(//li[@id="one"]/text(),//li[@id="three"]/text())'</span>)</span><br></pre></td></tr></table></figure><h2 id="解析当前节点下的字符-string"><a href="#解析当前节点下的字符-string" class="headerlink" title="解析当前节点下的字符 string"></a>解析当前节点下的字符 <code>string</code></h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># string()直解析匹配的第一个标签的值，  注： 返回字符串</span></span><br><span class="line">xpath(<span class="hljs-string">'string(//tr)'</span>)</span><br></pre></td></tr></table></figure><h2 id="获取当前节点的节点名称-local-name"><a href="#获取当前节点的节点名称-local-name" class="headerlink" title="获取当前节点的节点名称 local-name"></a>获取当前节点的节点名称 <code>local-name</code></h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 返回当前属性的节点名称，  注： 返回字符串</span></span><br><span class="line">xpath(<span class="hljs-string">'local-name(//*[@id="test"])'</span>)</span><br></pre></td></tr></table></figure><h2 id="以指定的字符开头-starts-with"><a href="#以指定的字符开头-starts-with" class="headerlink" title="以指定的字符开头 starts-with"></a>以指定的字符开头 <code>starts-with</code></h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># starts-with定位属性值以8开头的li元素</span></span><br><span class="line">xpath(<span class="hljs-string">'//tr[starts-with(@code,"one")]/text()'</span>)</span><br></pre></td></tr></table></figure><h2 id="小于-lt"><a href="#小于-lt" class="headerlink" title="小于 &lt;"></a>小于 <code>&lt;</code></h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 匹配所有tr标签属性info小于200的内容</span></span><br><span class="line">xpath(<span class="hljs-string">'//tr[@info&lt;200]/text()'</span>)</span><br></pre></td></tr></table></figure><h2 id="根据指定的文本内容选择"><a href="#根据指定的文本内容选择" class="headerlink" title="根据指定的文本内容选择"></a>根据指定的文本内容选择</h2><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 指定的文本内容可以是文本内容的部分， 也可以是全部</span></span><br><span class="line">xpath(<span class="hljs-string">'//div[2]/ul/li[contains(text(), "指定的文本内容")]/span/text()'</span></span><br></pre></td></tr></table></figure><hr><p><strong>Via</strong></p><ul><li><a href="https://www.jianshu.com/p/4fef4142b33f" target="_blank" rel="noopener">作者:董小贱</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;xpath 升格用法&lt;/p&gt;
    
    </summary>
    
      <category term="Coding" scheme="https://vitan.me/categories/Coding/"/>
    
    
      <category term="Linux" scheme="https://vitan.me/tags/Linux/"/>
    
      <category term="WebCrawler" scheme="https://vitan.me/tags/WebCrawler/"/>
    
      <category term="Python" scheme="https://vitan.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Hexo SEO 优化</title>
    <link href="https://vitan.me/posts/HexoSEO.html"/>
    <id>https://vitan.me/posts/HexoSEO.html</id>
    <published>2019-09-06T01:13:41.000Z</published>
    <updated>2019-12-10T01:38:54.149Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo SEO 优化</p><a id="more"></a><h1 id="添加站点地图"><a href="#添加站点地图" class="headerlink" title="添加站点地图"></a>添加站点地图</h1><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight bash hljs"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">#hexo sitemap</span></span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br><span class="line">baidusitemap:</span><br><span class="line">  path: bdmap.xml</span><br></pre></td></tr></table></figure><h1 id="添加-robots"><a href="#添加-robots" class="headerlink" title="添加 robots"></a>添加 robots</h1><p>站点 source 下添加 <code>robots.txt</code></p><figure class="highlight bash hljs"><figcaption><span>robots.txt</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Allow: /</span><br><span class="line">Allow: /archives/</span><br><span class="line">Allow: /categories/</span><br><span class="line">Allow: /tags/</span><br><span class="line">Allow: /about/</span><br><span class="line"></span><br><span class="line">Disallow: /vendors/</span><br><span class="line">Disallow: /js/</span><br><span class="line">Disallow: /css/</span><br><span class="line">Disallow: /fonts/</span><br><span class="line">Disallow: /vendors/</span><br><span class="line">Disallow: /fancybox/</span><br><span class="line"></span><br><span class="line">Sitemap: https://vitan.me/sitemap.xml</span><br><span class="line">Sitemap: https://vitan.me/bdmap.xml</span><br></pre></td></tr></table></figure><h1 id="添加到-Google"><a href="#添加到-Google" class="headerlink" title="添加到 Google"></a>添加到 Google</h1><ul><li>在 <a href="https://search.google.com/search-console" target="_blank" rel="noopener">Google Search Console</a> 添加站点地图</li><li>在 <a href="https://ziyuan.baidu.com/linksubmit/index" target="_blank" rel="noopener">百度</a> 添加站点地图</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo SEO 优化&lt;/p&gt;
    
    </summary>
    
      <category term="Diary" scheme="https://vitan.me/categories/Diary/"/>
    
    
      <category term="Hexo" scheme="https://vitan.me/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>撤销 Google AdSense</title>
    <link href="https://vitan.me/posts/GoogleAdSense.html"/>
    <id>https://vitan.me/posts/GoogleAdSense.html</id>
    <published>2019-08-11T12:04:29.000Z</published>
    <updated>2019-12-10T01:38:54.147Z</updated>
    
    <content type="html"><![CDATA[<h1 id="AdSense-账户"><a href="#AdSense-账户" class="headerlink" title="AdSense 账户"></a>AdSense 账户</h1><h2 id="撤销原因"><a href="#撤销原因" class="headerlink" title="撤销原因"></a>撤销原因</h2><p>更换了邮箱之后重新申请了一个，但是提示有多个 AdSense 账户</p><a id="more"></a><h2 id="常规撤销"><a href="#常规撤销" class="headerlink" title="常规撤销"></a>常规撤销</h2><p>登录 <a href="https://www.google.com/adsense/" target="_blank" rel="noopener">Google AdSense</a> 点击菜单-&gt;账号-&gt;撤销账号</p><ul><li>个人情况<br>我遇到的情况比较特俗，AdSense 页面的 <code>账号</code> 按钮不可点击，为灰色。</li></ul><h2 id="摸索的方法"><a href="#摸索的方法" class="headerlink" title="摸索的方法"></a>摸索的方法</h2><ol><li>在 <a href="https://myaccount.google.com" target="_blank" rel="noopener">Google 账号</a> 的 <code>数据和个性化</code> -&gt; <code>下载数据、删除数据或为数据制定方案</code> -&gt; <code>删除某项服务或您的帐号</code> 关闭自己的 Google 付款资料</li><li>可以发现 AdSense 页面中的 <code>账号</code> 按钮变为可点击了，撤销成功！</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;AdSense-账户&quot;&gt;&lt;a href=&quot;#AdSense-账户&quot; class=&quot;headerlink&quot; title=&quot;AdSense 账户&quot;&gt;&lt;/a&gt;AdSense 账户&lt;/h1&gt;&lt;h2 id=&quot;撤销原因&quot;&gt;&lt;a href=&quot;#撤销原因&quot; class=&quot;headerlink&quot; title=&quot;撤销原因&quot;&gt;&lt;/a&gt;撤销原因&lt;/h2&gt;&lt;p&gt;更换了邮箱之后重新申请了一个，但是提示有多个 AdSense 账户&lt;/p&gt;
    
    </summary>
    
      <category term="Diary" scheme="https://vitan.me/categories/Diary/"/>
    
    
      <category term="Hexo" scheme="https://vitan.me/tags/Hexo/"/>
    
      <category term="Google" scheme="https://vitan.me/tags/Google/"/>
    
  </entry>
  
  <entry>
    <title>RaspberryPi 搭建 Gogs Git 服务</title>
    <link href="https://vitan.me/posts/GogsOnPi.html"/>
    <id>https://vitan.me/posts/GogsOnPi.html</id>
    <published>2019-07-31T06:14:52.000Z</published>
    <updated>2019-12-10T01:38:54.147Z</updated>
    
    <content type="html"><![CDATA[<p>树莓派搭建 Gogs Git 服务</p><a id="more"></a><h1 id="安装-MySQL"><a href="#安装-MySQL" class="headerlink" title="安装 MySQL"></a>安装 MySQL</h1><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install mariadb-server mariadb-client</span><br></pre></td></tr></table></figure><p>配置</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/mysql/mariadb.conf.d/50-server.cnf </span><br><span class="line">注释掉 </span><br><span class="line"><span class="hljs-built_in">bind</span>-address = 127.0.0.1</span><br></pre></td></tr></table></figure><ul><li>修改 root 密码</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysqladmin -u root -p password</span><br></pre></td></tr></table></figure><ul><li>新建 gogs 数据库</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -h127.0.0.1 -uroot -p123456</span><br><span class="line">create database gogs;</span><br></pre></td></tr></table></figure><ul><li>重启 MySQL</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service mysql restart</span><br></pre></td></tr></table></figure><h1 id="golang"><a href="#golang" class="headerlink" title="golang"></a>golang</h1><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install golang -y</span><br></pre></td></tr></table></figure><h1 id="gogs"><a href="#gogs" class="headerlink" title="gogs"></a><a href="https://gogs.io/" target="_blank" rel="noopener">gogs</a></h1><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://cdn.gogs.io/0.11.79/gogs_0.11.79_raspi2_armv6.zip</span><br></pre></td></tr></table></figure><p>解压</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf gogs_0.11.79_raspi2_armv6.zip</span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">cd</span> 解压后的目录</span><br><span class="line">./gogs web</span><br></pre></td></tr></table></figure><p>配置</p><ul><li>浏览器打开 <code>http://ip:3000</code></li></ul><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190731144809.png" alt></p><p>后台运行</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./gogs web &gt; nohup.out 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><h1 id="Frp-内网穿透"><a href="#Frp-内网穿透" class="headerlink" title="Frp 内网穿透"></a><a href="https://diannaobos.com/frp/" target="_blank" rel="noopener">Frp</a> 内网穿透</h1><p>下载安装</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/fatedier/frp/releases/download/v0.27.1/frp_0.27.1_linux_386.tar.gz</span><br><span class="line">  </span><br><span class="line"><span class="hljs-comment"># 解压安装</span></span><br><span class="line">tar -zxvf frp_0.27.1_linux_386.tar.gz</span><br></pre></td></tr></table></figure><p>配置</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">cd</span> frp_0.27.1_linux_386</span><br><span class="line">vim frps.ini</span><br></pre></td></tr></table></figure><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = gogs.vitan.me</span><br><span class="line">server_port = 8000</span><br><span class="line">token = </span><br><span class="line"></span><br><span class="line">[gogs]</span><br><span class="line"><span class="hljs-built_in">type</span> =http</span><br><span class="line">privilege_mode = <span class="hljs-literal">true</span></span><br><span class="line">local_ip = localhost</span><br><span class="line">locah_port = 3000</span><br><span class="line"></span><br><span class="line">custom_domain = gogs.vitan.me</span><br></pre></td></tr></table></figure><p>启动</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./frps -c ./frps.ini</span><br></pre></td></tr></table></figure><ul><li>配置好服务器端后,可以在浏览中(<a href="http://IP:8000/static/#/" target="_blank" rel="noopener">http://IP:8000/static/#/</a>) 打开 frp 的控制台</li></ul><hr><p><strong>参考</strong></p><ul><li><a href="https://gogs.io/docs/installation/install_from_binary" target="_blank" rel="noopener">gogs</a></li><li><a href="https://diannaobos.com/frp/" target="_blank" rel="noopener">Frp</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;树莓派搭建 Gogs Git 服务&lt;/p&gt;
    
    </summary>
    
      <category term="Diary" scheme="https://vitan.me/categories/Diary/"/>
    
    
      <category term="Linux" scheme="https://vitan.me/tags/Linux/"/>
    
      <category term="Git" scheme="https://vitan.me/tags/Git/"/>
    
      <category term="RaspberryPi" scheme="https://vitan.me/tags/RaspberryPi/"/>
    
  </entry>
  
  <entry>
    <title>Termux 局域网共享文件</title>
    <link href="https://vitan.me/posts/Termux-Httpd.html"/>
    <id>https://vitan.me/posts/Termux-Httpd.html</id>
    <published>2019-07-29T11:25:00.000Z</published>
    <updated>2019-12-10T01:38:54.194Z</updated>
    
    <content type="html"><![CDATA[<p>Android 跨设备局域网共享文件</p><a id="more"></a><h1 id="http-server"><a href="#http-server" class="headerlink" title="http-server"></a>http-server</h1><p>安装</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pkg install nodejs-lts</span><br><span class="line">npm install http-server -g</span><br></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http-server</span><br></pre></td></tr></table></figure><h2 id="同一局域网"><a href="#同一局域网" class="headerlink" title="同一局域网"></a>同一局域网</h2><p>同一局域网下浏览器登录启动服务后的提示的 ip 即可访问手机的文件，相反电脑同理。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Android 跨设备局域网共享文件&lt;/p&gt;
    
    </summary>
    
      <category term="Diary" scheme="https://vitan.me/categories/Diary/"/>
    
    
      <category term="Android" scheme="https://vitan.me/tags/Android/"/>
    
      <category term="Linux" scheme="https://vitan.me/tags/Linux/"/>
    
      <category term="Termux" scheme="https://vitan.me/tags/Termux/"/>
    
  </entry>
  
  <entry>
    <title>Shell</title>
    <link href="https://vitan.me/posts/Shell.html"/>
    <id>https://vitan.me/posts/Shell.html</id>
    <published>2019-07-20T10:59:04.000Z</published>
    <updated>2019-12-10T01:38:54.193Z</updated>
    
    <content type="html"><![CDATA[<p>Shell 总结</p><a id="more"></a><h1 id="变量替换和测试"><a href="#变量替换和测试" class="headerlink" title="变量替换和测试"></a>变量替换和测试</h1><h2 id="变量替换"><a href="#变量替换" class="headerlink" title="变量替换"></a>变量替换</h2><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190720191523.png" alt></p><h2 id="变量测试"><a href="#变量测试" class="headerlink" title="变量测试"></a>变量测试</h2><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190720191707.png" alt></p><h1 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a>字符串处理</h1><h2 id="计算字符串长度"><a href="#计算字符串长度" class="headerlink" title="计算字符串长度"></a>计算字符串长度</h2><p>方法一</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-variable">$&#123;#string&#125;</span></span><br></pre></td></tr></table></figure><p>方法二</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expr length <span class="hljs-string">"<span class="hljs-variable">$string</span>"</span></span><br></pre></td></tr></table></figure><ul><li>string 有空格，则必须加双引号</li></ul><h2 id="子串"><a href="#子串" class="headerlink" title="子串"></a>子串</h2><p>获取子串在字符串中的索引位置</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expr index <span class="hljs-variable">$string</span> <span class="hljs-variable">$substring</span></span><br></pre></td></tr></table></figure><p>抽取子串</p><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190720192503.png" alt></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>计算字符串长度</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var1=<span class="hljs-string">"This is a app"</span></span><br><span class="line">len=<span class="hljs-variable">$&#123;#$var1&#125;</span></span><br><span class="line">len=`expr length <span class="hljs-string">"<span class="hljs-variable">$var1</span>"</span>`</span><br></pre></td></tr></table></figure><p>子串索引</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var1=<span class="hljs-string">"quicstart is a app"</span></span><br><span class="line">ind=`expr index <span class="hljs-string">"<span class="hljs-variable">$var1</span>"</span> start`</span><br></pre></td></tr></table></figure><p>子串长度</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var1=<span class="hljs-string">"quicstart is a app"</span></span><br><span class="line">ind=`expr match <span class="hljs-string">"$<span class="hljs-variable">$var1</span>"</span> app`</span><br></pre></td></tr></table></figure><p>抽取字符串中的子串</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var1=<span class="hljs-string">"quicstart is a app"</span></span><br><span class="line">substr1=<span class="hljs-variable">$&#123;var1:10&#125;</span></span><br><span class="line">substr2=<span class="hljs-variable">$&#123;var1:10:6&#125;</span></span><br><span class="line">substr1=<span class="hljs-variable">$&#123;var1:-5&#125;</span></span><br><span class="line">substr1=<span class="hljs-variable">$&#123;var1:-10:4&#125;</span></span><br></pre></td></tr></table></figure><ul><li>expr 索引1开始,${string:position}从0开始</li></ul><p>实例</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#! /bin/bash</span></span><br><span class="line">string=<span class="hljs-string">"Bigdata process framework is Hadoop,Hadoop is an open source project"</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">function</span> print_tips</span><br><span class="line">&#123;</span><br><span class="line">    <span class="hljs-built_in">echo</span> <span class="hljs-string">"***********************"</span></span><br><span class="line">    <span class="hljs-built_in">echo</span> <span class="hljs-string">"(1) 打印string长度"</span></span><br><span class="line">    <span class="hljs-built_in">echo</span> <span class="hljs-string">"(2) 删除字符串中所有Hadoop"</span></span><br><span class="line">    <span class="hljs-built_in">echo</span> <span class="hljs-string">"(3) 替换第一个Hadoop为Mapreduce"</span></span><br><span class="line">    <span class="hljs-built_in">echo</span> <span class="hljs-string">"(4) 替换全部Hadoop为Mapreduce"</span></span><br><span class="line">    <span class="hljs-built_in">echo</span> <span class="hljs-string">"**********************"</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">function</span> len_of_string</span><br><span class="line">&#123;</span><br><span class="line">  <span class="hljs-built_in">echo</span> <span class="hljs-string">"<span class="hljs-variable">$&#123;#string&#125;</span>"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">function</span> del_hadoop</span><br><span class="line">&#123;</span><br><span class="line">  <span class="hljs-built_in">echo</span> <span class="hljs-string">"<span class="hljs-variable">$&#123;string/Hadoop/&#125;</span>"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">function</span> rep_hadoop_mapreduce_first</span><br><span class="line">&#123;</span><br><span class="line">  <span class="hljs-built_in">echo</span> <span class="hljs-string">"<span class="hljs-variable">$&#123;string/Hadoop/Mapreduce&#125;</span>"</span> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">function</span> rep_hadoop_mapreduce_all</span><br><span class="line">&#123;</span><br><span class="line">  <span class="hljs-built_in">echo</span> <span class="hljs-string">"<span class="hljs-variable">$&#123;string//Hadoop/Mapreduce&#125;</span>"</span> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">while</span> <span class="hljs-literal">true</span></span><br><span class="line"><span class="hljs-keyword">do</span> </span><br><span class="line">  <span class="hljs-built_in">echo</span> <span class="hljs-string">"【string=<span class="hljs-variable">$string</span>】"</span></span><br><span class="line">  <span class="hljs-built_in">echo</span></span><br><span class="line">  print_tips</span><br><span class="line">  <span class="hljs-built_in">read</span> -p <span class="hljs-string">"Pls input your choice(1|2|3|4|q|Q):"</span> choice</span><br><span class="line">  <span class="hljs-keyword">case</span> <span class="hljs-variable">$choice</span> <span class="hljs-keyword">in</span></span><br><span class="line">        1)  len_of_string</span><br><span class="line">            ;;</span><br><span class="line">        2)  del_hadoop</span><br><span class="line">            ;;</span><br><span class="line">        3)  rep_hadoop_mapreduce_first</span><br><span class="line">            ;;</span><br><span class="line">        4)  rep_hadoop_mapreduce_all</span><br><span class="line">            ;;</span><br><span class="line">        q|Q)  <span class="hljs-built_in">exit</span></span><br><span class="line">              ;;</span><br><span class="line">        *)</span><br><span class="line">            <span class="hljs-built_in">echo</span> <span class="hljs-string">"Error,input only in &#123;1|2|3|4|q|Q&#125;"</span></span><br><span class="line">            ;;</span><br><span class="line">        <span class="hljs-keyword">esac</span></span><br><span class="line"><span class="hljs-keyword">done</span></span><br></pre></td></tr></table></figure><h1 id="命令替换"><a href="#命令替换" class="headerlink" title="命令替换"></a>命令替换</h1><p>语法格式</p><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190720194539.png" alt></p><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><p>获取系统所有用户并输出</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd | cut -d “:” -^C <span class="hljs-comment">#分割的第一个</span></span><br><span class="line">cat /etc/passwd | cut -d “:” -f 1 <span class="hljs-comment">#分段</span></span><br></pre></td></tr></table></figure><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#! /bin/bash</span></span><br><span class="line"><span class="hljs-comment"># 判断进程是否存在，否则启动</span></span><br><span class="line">nginx_process_num=$(ps -ef | grep nginx | grep -v grep | wc -l)</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$nginx_process_num</span> -eq 0 ];<span class="hljs-keyword">then</span></span><br><span class="line">    systemctl start nginx</span><br><span class="line"><span class="hljs-keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2><p><code>\</code>`<code>和</code>$()`</p><ol><li>``和$()是等价的，但初学推荐$()</li><li>$(())用于进行整数运算，包括加减乘除</li><li>$(((100 + 30) / 12))</li></ol><h1 id="有类型变量"><a href="#有类型变量" class="headerlink" title="有类型变量"></a>有类型变量</h1><h2 id="declare-和-typeset-命令"><a href="#declare-和-typeset-命令" class="headerlink" title="declare 和 typeset 命令"></a>declare 和 typeset 命令</h2><p>两者关系:两者等价，都是用来定义变量类型</p><h2 id="declare参数表"><a href="#declare参数表" class="headerlink" title="declare参数表"></a>declare参数表</h2><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190720195605.png" alt></p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 声明整数型变量</span></span><br><span class="line"><span class="hljs-built_in">declare</span> -i ab <span class="hljs-comment">#声明整数型变量</span></span><br><span class="line">ab=56 <span class="hljs-comment">#改变变量内容</span></span><br><span class="line"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$ab</span> <span class="hljs-comment">#显示变量内容</span></span><br><span class="line">56</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 改变变量属性</span></span><br><span class="line"><span class="hljs-built_in">declare</span> -i ef <span class="hljs-comment">#声明整数型变量</span></span><br><span class="line">ef=1  <span class="hljs-comment">#变量赋值（整数值）</span></span><br><span class="line"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$ef</span> <span class="hljs-comment">#显示变量内容</span></span><br><span class="line">1</span><br><span class="line">ef=<span class="hljs-string">"wer"</span> <span class="hljs-comment">#变量赋值（文本值）</span></span><br><span class="line"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$ef</span> </span><br><span class="line">0</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">declare</span> +i ef <span class="hljs-comment">#取消变量属性</span></span><br><span class="line">ef=<span class="hljs-string">"wer"</span></span><br><span class="line"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$ef</span></span><br><span class="line">wer</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 设置变量只读</span></span><br><span class="line"><span class="hljs-built_in">declare</span> -r ab <span class="hljs-comment">#设置变量为只读</span></span><br><span class="line">ab=88 <span class="hljs-comment">#改变变量内容</span></span><br><span class="line"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$ab</span> <span class="hljs-comment">#显示变量内容</span></span><br><span class="line">56</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 声明数组变量</span></span><br><span class="line"><span class="hljs-built_in">declare</span> -a <span class="hljs-built_in">cd</span>=<span class="hljs-string">'([0]="a" [1]="b" [2]="c")'</span> <span class="hljs-comment">#声明数组变量</span></span><br><span class="line"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$&#123;cd[1]&#125;</span></span><br><span class="line">b <span class="hljs-comment">#显示变量内容</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$&#123;cd[@]&#125;</span> <span class="hljs-comment">#显示整个数组变量内容</span></span><br><span class="line">a b c</span><br></pre></td></tr></table></figure><ul><li><code>declare -x</code> 声明为环境变量，可在脚本中直接使用</li></ul><h2 id="取消声明的变量"><a href="#取消声明的变量" class="headerlink" title="取消声明的变量"></a>取消声明的变量</h2><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">declare</span> +r</span><br><span class="line"><span class="hljs-built_in">declare</span> +i</span><br><span class="line"><span class="hljs-built_in">declare</span> +a</span><br><span class="line"><span class="hljs-built_in">declare</span> +X</span><br></pre></td></tr></table></figure><h1 id="数学运算"><a href="#数学运算" class="headerlink" title="数学运算"></a>数学运算</h1><p>语法格式<br><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190720200443.png" alt></p><p>expr操作符对照表<br><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190720200649.png" alt></p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190720201000.png" alt></p><h1 id="Bash运算之bc"><a href="#Bash运算之bc" class="headerlink" title="Bash运算之bc"></a>Bash运算之bc</h1><h2 id="bc-操作"><a href="#bc-操作" class="headerlink" title="bc 操作"></a>bc 操作</h2><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190720201134.png" alt></p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scale=2 <span class="hljs-comment">#精确到小数点后两位</span></span><br><span class="line"><span class="hljs-built_in">echo</span> “20+22” | bc</span><br><span class="line"><span class="hljs-built_in">echo</span> “scale=3;23+33” | bc</span><br></pre></td></tr></table></figure><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="函数定义和使用"><a href="#函数定义和使用" class="headerlink" title="函数定义和使用"></a>函数定义和使用</h2><p>Linux Shell中的函数和大多数编程语言中的函数一样，将相似的任务或代码封装到函数中，供其他地方调用</p><p>语法一</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">name()</span><br><span class="line">&#123;</span><br><span class="line">  command1</span><br><span class="line">  command2</span><br><span class="line">  ....</span><br><span class="line">  commandn</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>语法二</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">function</span> name</span><br><span class="line">&#123;</span><br><span class="line">  command1</span><br><span class="line">  command2</span><br><span class="line">  ....</span><br><span class="line">  commandn</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="如何调用"><a href="#如何调用" class="headerlink" title="如何调用"></a>如何调用</h2><ol><li>直接使用函数名调用，可以将其想象成 Shell 中的一条命令</li><li>函数内部可以直接使用函数 $1,$2…$n</li><li>调用函数：function_name $1 $2</li></ol><h2 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h2><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#!/bin/bash</span></span><br><span class="line"><span class="hljs-comment"># 判断进程是否存在，否则启动</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">#脚本名含有nginx会返回0</span></span><br><span class="line"><span class="hljs-comment"># echo $$ 运行脚本产生的进程id</span></span><br><span class="line">this_pid=$$</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">while</span> <span class="hljs-literal">true</span></span><br><span class="line"><span class="hljs-keyword">do</span></span><br><span class="line">ps -eff | grep nginx | grep -v grep | grep -v <span class="hljs-variable">$this_pid</span> &amp;&gt; /dev/null</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">if</span> [ $? -eq 0];<span class="hljs-keyword">then</span></span><br><span class="line">    <span class="hljs-built_in">echo</span> <span class="hljs-string">"Nignx is running well"</span></span><br><span class="line">    sleepp 3</span><br><span class="line"><span class="hljs-keyword">else</span> </span><br><span class="line">    systemctl start nginx</span><br><span class="line">    <span class="hljs-built_in">echo</span> <span class="hljs-string">"Nginx is down,start it.."</span></span><br><span class="line"><span class="hljs-keyword">fi</span></span><br><span class="line"><span class="hljs-keyword">done</span></span><br></pre></td></tr></table></figure><p>判断进程</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netstat -tnlp | grep :80</span><br><span class="line">curl localhost/index.html</span><br></pre></td></tr></table></figure><h1 id="向函数传递参数"><a href="#向函数传递参数" class="headerlink" title="向函数传递参数"></a>向函数传递参数</h1><h2 id="shell传参"><a href="#shell传参" class="headerlink" title="shell传参"></a>shell传参</h2><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">function</span> name</span><br><span class="line">&#123;</span><br><span class="line">  <span class="hljs-built_in">echo</span> <span class="hljs-string">"Hello <span class="hljs-variable">$1</span>"</span></span><br><span class="line">  <span class="hljs-built_in">echo</span> <span class="hljs-string">"Hello <span class="hljs-variable">$2</span>"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数返回值"><a href="#函数返回值" class="headerlink" title="函数返回值"></a>函数返回值</h2><ol><li>return</li><li>echo</li></ol><h3 id="reutrn-返回值"><a href="#reutrn-返回值" class="headerlink" title="reutrn 返回值"></a>reutrn 返回值</h3><ol><li>只能返回1-255的整数</li><li>通常智能用来供其他地方调用获取状态，因此仅返回0（成功)，1(失败)</li></ol><h3 id="echo-返回值"><a href="#echo-返回值" class="headerlink" title="echo 返回值"></a>echo 返回值</h3><ol><li>可以返回任何字符串结果</li><li>通常用于返回数据，如一个字符串值或列表值</li></ol><h1 id="局部变量全局变量"><a href="#局部变量全局变量" class="headerlink" title="局部变量全局变量"></a>局部变量全局变量</h1><h2 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h2><ol><li>不做特殊处理，shell 中变量为全局变量</li><li>大型脚本程序慎用</li></ol><h2 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h2><ol><li>定义时，使用local关键字</li><li>函数内外如果存在同名变量，册函数内部变量覆盖外部变量</li></ol><h2 id="函数库"><a href="#函数库" class="headerlink" title="函数库"></a>函数库</h2><ul><li>为什么要定义函数库</li></ul><ol><li>经常使用的重复代码封装成函数文件</li><li>一般不直接执行，而是由其他脚本调用</li></ol><p>实例</p><figure class="highlight bash hljs"><figcaption><span>库文件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">function</span> add</span><br><span class="line">&#123;</span><br><span class="line">    <span class="hljs-built_in">echo</span> <span class="hljs-string">"`expr <span class="hljs-variable">$1</span> + <span class="hljs-variable">$2</span>`"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">function</span> reduce</span><br><span class="line">&#123;</span><br><span class="line">    <span class="hljs-built_in">echo</span> <span class="hljs-string">"`expr <span class="hljs-variable">$1</span> - <span class="hljs-variable">$2</span>`"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">function</span> multiple</span><br><span class="line">&#123;</span><br><span class="line">    <span class="hljs-built_in">echo</span> <span class="hljs-string">"`expr <span class="hljs-variable">$1</span> \* <span class="hljs-variable">$2</span>`"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">function</span> diveid</span><br><span class="line">&#123;</span><br><span class="line">    <span class="hljs-built_in">echo</span> <span class="hljs-string">"`expr <span class="hljs-variable">$1</span> / <span class="hljs-variable">$2</span>`"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">function</span> sys_load</span><br><span class="line">&#123;</span><br><span class="line">    <span class="hljs-built_in">echo</span> <span class="hljs-string">"Memory Info"</span></span><br><span class="line">    free -m</span><br><span class="line">    <span class="hljs-built_in">echo</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-built_in">echo</span> <span class="hljs-string">"Disk Usage"</span></span><br><span class="line">    <span class="hljs-built_in">echo</span></span><br><span class="line">    df -h </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#!/bin/bash</span></span><br><span class="line">. /home/vitan/workplace/Shell/learn/<span class="hljs-keyword">function</span>/base_function</span><br><span class="line">add 122 3</span><br><span class="line">reduce 9 3</span><br><span class="line">multiple 22 11</span><br><span class="line">diveid 12 3</span><br><span class="line">sys_load</span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ol><li>库文件名的后缀是任意的，但一般用 <code>.lib</code></li><li>库文件通常没有可执行权限</li><li>库文件无需和脚本在同级目录，只需在脚本中引时指定</li><li>第一行一般使用 <code>#!/bin/bash/echo</code> ，输出警告信息，避免用户执行</li></ol><h1 id="文件查找之find命令"><a href="#文件查找之find命令" class="headerlink" title="文件查找之find命令"></a>文件查找之find命令</h1><p>find [路径][选项][操作]</p><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190720205155.png" alt></p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><ol><li><p>查找 /etc 目录下 conf 结尾的文件</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fing /etc -name <span class="hljs-string">'.conf'</span></span><br></pre></td></tr></table></figure></li><li><p>查找当前目录下文件名为 aa 的文件，不区分大小写</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -name aa</span><br></pre></td></tr></table></figure></li><li><p>查找文件属主为 hdfs 的所有文件</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -user hdfs</span><br></pre></td></tr></table></figure></li><li><p>查找文件属组为 yarn 的所有文件</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -group yarm</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><ol><li><p>-type</p><ul><li>f 文件 find . -type f</li><li>d 目录 dind . -type d</li><li>c 字符设备文件 dind . -type c</li><li>b 块设备文件 dind . -type b</li><li>l 链接文件 dind . -type l</li><li>p 管道文件 dind . -type p</li></ul></li><li><p>-size</p><ul><li>-n 大小小于n的文件</li><li>+n 大小大于n的文件</li><li>n 大小等于n的文件</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 小于10000字节的文件</span></span><br><span class="line">find /etc -size -10000c</span><br><span class="line"><span class="hljs-comment"># 大于1M的文件</span></span><br><span class="line">find /etc -size +1M</span><br></pre></td></tr></table></figure></li><li><p>-mtime</p><ul><li>-n n天以内修改的文件</li><li>+n n天以外修改的文件</li><li>n 正好n天修改的文件</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">#查找/etc下5天内修改的conf结尾的文件</span></span><br><span class="line">find /etc -mtime -5 -name <span class="hljs-string">'*.conf'</span>       </span><br><span class="line"><span class="hljs-comment"># 查找10天之前修改且属主为root的文件</span></span><br><span class="line">find /etc -mtime +10 -user root</span><br></pre></td></tr></table></figure></li><li><p>-mmin</p><ul><li>-n n分种内修改的文件</li><li>+n n分钟外修改的文件</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 30分钟前修改的文件</span></span><br><span class="line">find /etc -mmin +30</span><br><span class="line"><span class="hljs-comment"># 30分钟内修改的目录</span></span><br><span class="line">find /etc -mmin -3o -<span class="hljs-built_in">type</span> d</span><br></pre></td></tr></table></figure></li><li><p>-mindepth n</p><ul><li>表示从n级子目录开始搜索</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /etc -mindepth 3</span><br></pre></td></tr></table></figure></li><li><p>-maxdepth n</p><ul><li>表示最多搜索n-1级子目录</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find /etc -maxdepth 3 -name <span class="hljs-string">'*.conf'</span></span><br><span class="line">find ./etc -<span class="hljs-built_in">type</span> f -name <span class="hljs-string">'.*conf'</span> -size +10k -maxdepth 2</span><br><span class="line">find . -<span class="hljs-built_in">type</span> f -nogroup</span><br></pre></td></tr></table></figure></li><li><p>-perm</p><ul><li>find .perm 644</li></ul></li><li><p>-prune </p><ul><li>通常和-path一起用，用于将特定目录排除在搜索条件之外</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 查找当前目录下所有普通文件，排除test目录</span></span><br><span class="line">find . -path ./etc -prune -o -<span class="hljs-built_in">type</span> f</span><br><span class="line"><span class="hljs-comment"># 查找当前目录下所有普通文件，但排除etc和opt目录</span></span><br><span class="line">find . -path ./etc -prune -o -path ./opt -prune -o -<span class="hljs-built_in">type</span> f</span><br><span class="line"><span class="hljs-comment"># 当前目录所有普通文件，排除etc和opt目录，但属主为hdfs</span></span><br><span class="line">find . -path ./etc -prune -o -path ./opt -prune -o -<span class="hljs-built_in">type</span> -f -a -user hdfs</span><br><span class="line"><span class="hljs-comment"># 当前目录所有普通文件，排除etc和opt目录，但属主为hdfs,文件大小大于</span></span><br><span class="line">find . -path ./etc -prune -o -path ./opt -prune -o -<span class="hljs-built_in">type</span> -f -a -user hdfs -a -size +2M</span><br></pre></td></tr></table></figure></li><li><p>-newer file1</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /etc -newer a</span><br></pre></td></tr></table></figure></li></ol><ul><li><p>操作</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 搜索/etc下的文件非目录，以conf结尾，大于19k，然后删除</span></span><br><span class="line">find ./etc -<span class="hljs-built_in">type</span> -f -name <span class="hljs-string">'*.conf'</span> -size +10k -<span class="hljs-built_in">exec</span> rm -rf &#123;&#125; \;</span><br><span class="line"></span><br><span class="line">find /var/<span class="hljs-built_in">log</span>/ -name <span class="hljs-string">'*.log'</span> -mtime +7 -<span class="hljs-built_in">exec</span> rm -rf &#123;&#125; \;</span><br><span class="line">find /etc -size +10k -<span class="hljs-built_in">type</span> -f -name <span class="hljs-string">'*.conf'</span> -<span class="hljs-built_in">exec</span> cp &#123;&#125; /root/conf/ \;</span><br></pre></td></tr></table></figure><ul><li>-print 打印输出</li><li>-exec 对搜索的文件执行特定的操作</li><li>-ok 和exec功能一样，但每次操作都会给用户提示</li></ul></li><li><p>逻辑运算符</p><ul><li>-a 与</li><li>-o 或</li><li>-not|! 非</li></ul></li></ul><h1 id="find-locate-whereis和-which-总结及使用场景分析"><a href="#find-locate-whereis和-which-总结及使用场景分析" class="headerlink" title="find locate whereis和 which 总结及使用场景分析"></a>find locate whereis和 which 总结及使用场景分析</h1><h2 id="locate"><a href="#locate" class="headerlink" title="locate"></a>locate</h2><ol><li>文件查找命令，所属软件包mlocate</li><li>不同于find命令是在整块磁盘中搜索，locate在数据库文件中查找</li><li>find默认全部匹配，locate默认部分匹配</li></ol><ul><li>updatedb命令<ol><li>用于更新/var/lib/mlocate/mlocate.db</li><li>所使用配置文件/etc/update.conf</li><li>该命令在后台cron计划任务定期执行</li></ol></li></ul><h2 id="whereis选项和含义"><a href="#whereis选项和含义" class="headerlink" title="whereis选项和含义"></a>whereis选项和含义</h2><ul><li>-b 只返回二进制文件</li><li>-m 只返回帮助文档文件</li><li>-s 只返回源码文件</li></ul><h2 id="which"><a href="#which" class="headerlink" title="which"></a>which</h2><ul><li>仅查找二进制程序文件</li><li>选项<ul><li>-b 只返回二进制文件</li></ul></li></ul><h2 id="各命令使用场景推荐"><a href="#各命令使用场景推荐" class="headerlink" title="各命令使用场景推荐"></a>各命令使用场景推荐</h2><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190721094218.png" alt></p><h1 id="grep和egrep"><a href="#grep和egrep" class="headerlink" title="grep和egrep"></a>grep和egrep</h1><h2 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h2><p>语法</p><ol><li>grep [option] [pattern] [file1,file2…]</li><li>command | grep [option] [pattern]</li></ol><p>grep参数</p><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190721094721.png" alt><br><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190721094812.png" alt></p><ul><li>grep -E “python | PYTHON” file</li></ul><h2 id="egrep"><a href="#egrep" class="headerlink" title="egrep"></a>egrep</h2><p>egrep语法</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">egrep(选项)(查找模式)(文件名1，文件名2，……)</span><br></pre></td></tr></table></figure><h1 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h1><p>sed(Stream Editor)，流编辑器，对标准输出或文件逐行进行处理</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><ol><li>stdot | sed [option] “pattern command”</li><li>sed [option] “pattern command” file</li></ol><h2 id="选项-1"><a href="#选项-1" class="headerlink" title="选项"></a>选项</h2><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190721095810.png" alt></p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">sed ‘p’ sed.tet <span class="hljs-comment"># p打印出来</span></span><br><span class="line">sed -n‘p’ sed.tet</span><br><span class="line"><span class="hljs-comment"># 不加参数，原行也会再打印一次</span></span><br><span class="line">sed ‘/python/p’sed.txt  <span class="hljs-comment">#查找行</span></span><br><span class="line">sed -n‘/python/p’sed.txt  <span class="hljs-comment">#查找行</span></span><br><span class="line"><span class="hljs-comment"># 多个匹配条件</span></span><br><span class="line">sed -n -e ‘/python/p’ -e ‘/PYTHON/p’ sed.txt</span><br><span class="line"><span class="hljs-comment">#文件中的</span></span><br><span class="line">Vim edit.sed</span><br><span class="line">/python/p</span><br><span class="line">Sed -n -f edit.sed sed.txt</span><br><span class="line">Sed -n -r‘/python|PYTHON/p’ sed.txt <span class="hljs-comment">#使用扩展正则表达式</span></span><br><span class="line"><span class="hljs-comment"># 修改</span></span><br><span class="line">sed -n ‘s/love/like/g’ sed.txt <span class="hljs-comment"># love替换为like</span></span><br><span class="line">sed -i‘s/love/like/g’ sed.txt <span class="hljs-comment">#修改源文件</span></span><br></pre></td></tr></table></figure><h2 id="sed-的pattern详解"><a href="#sed-的pattern详解" class="headerlink" title="sed 的pattern详解"></a>sed 的pattern详解</h2><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190721100028.png" alt></p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 打印file的17行</span></span><br><span class="line">sed -n <span class="hljs-string">"17p"</span> file</span><br><span class="line"><span class="hljs-comment"># 打印10到20行</span></span><br><span class="line">sed -n <span class="hljs-string">"10,20p"</span> file</span><br><span class="line"><span class="hljs-comment"># 打印第10行开始，往后加5行的内容</span></span><br><span class="line">sed -n <span class="hljs-string">"10,+5p"</span> file</span><br><span class="line"><span class="hljs-comment"># 以root开头的行</span></span><br><span class="line">sed -n <span class="hljs-string">"/^root/p"</span> file</span><br><span class="line"><span class="hljs-comment"># 打印第一个匹配到ftp开头的行</span></span><br><span class="line">sed -n <span class="hljs-string">"/^root/,/^ftp/p"</span> file</span><br><span class="line"><span class="hljs-comment"># 打印第四行开始，到以hdgs开头的</span></span><br><span class="line">sed -n <span class="hljs-string">"4,/^hdfs/p"</span> file</span><br><span class="line"><span class="hljs-comment"># 匹配root的行，直到第10行结束</span></span><br><span class="line">sed -n <span class="hljs-string">"/root/,10p"</span> file</span><br></pre></td></tr></table></figure><h2 id="sed-中的编辑命令"><a href="#sed-中的编辑命令" class="headerlink" title="sed 中的编辑命令"></a>sed 中的编辑命令</h2><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190721100852.png" alt><br><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190721100931.png" alt></p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">sed -i‘1d/ sed.txt <span class="hljs-comment"># 删除第一行</span></span><br><span class="line">sed -i ‘1,3d’sed.txt <span class="hljs-comment"># 删除1-3行</span></span><br><span class="line">sed -i ‘/\/sbin\/nologin/d’passwd <span class="hljs-comment"># 把不可登录的账号删除</span></span><br><span class="line">sed -i ‘/^mail,/^ftp/d’pssswd <span class="hljs-comment">#mail到ftp</span></span><br><span class="line">文本追加</span><br><span class="line">sed -i ‘/\/bin\/bash/a This is user <span class="hljs-built_in">which</span> can login to system’pssswd <span class="hljs-comment"># 行后追加</span></span><br><span class="line">sed -i ‘/^hdfs/,/&amp;yarn/i AAAAAA’ pssswd <span class="hljs-comment"># 行间追加</span></span><br><span class="line">sed -i ‘/root/r list’ passwd <span class="hljs-comment">#把list内容追加root行后面</span></span><br><span class="line">sed -n‘/\/bin\/bash/w /tmp/user_login.txt’passwd <span class="hljs-comment">#保存</span></span><br><span class="line"></span><br><span class="line">sed -i ‘s/\/bin\/bash/\/BIN\/BASH/g’passwd <span class="hljs-comment"># 小写的替换为大写</span></span><br><span class="line">sed -i ‘a/root/ROOT/’passwd <span class="hljs-comment"># 替换第一个root为大写</span></span><br><span class="line">sed -i ‘a/root/ROOT/2’passwd <span class="hljs-comment"># 替换前两个个root为大写</span></span><br><span class="line">sed -i ‘s/hadoop/HADOOP/ig’str.txt <span class="hljs-comment">#不区分大小写</span></span><br><span class="line">sed -n ‘/\/sbin\/nologin/=’passwd <span class="hljs-comment"># 查看行号,不显示内容</span></span><br><span class="line"></span><br><span class="line">sed -i ‘s/had..p/hadoops/g’ sed.txt <span class="hljs-comment">#.任意一个字符</span></span><br><span class="line">sed -i ‘s/had..p/&amp;s/g’ sed.txt <span class="hljs-comment">#hadXXp后面加s，反向引用</span></span><br><span class="line">sed -i ‘s\/(had..ps\)\/1O/g’ sed.txt <span class="hljs-comment">#后加O</span></span><br><span class="line">sed -i ‘s/\(had\)...../\1doop/g’sed.txt <span class="hljs-comment"># had后面替换</span></span><br></pre></td></tr></table></figure><h2 id="反向引用"><a href="#反向引用" class="headerlink" title="反向引用"></a>反向引用</h2><ul><li>是什么</li></ul><ol><li>&amp;和\1 引用模式匹配到的整个串</li></ol><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># file中寻找1开头的后跟两任意字符以e结尾的字符</span></span><br><span class="line">sed <span class="hljs-string">"s/1..e/&amp;r/g"</span> file</span><br><span class="line">sed <span class="hljs-string">"s/\(1...e\)/\1r/g"</span> file <span class="hljs-comment"># 使用\1代表搜寻到的字符串</span></span><br></pre></td></tr></table></figure><ul><li>上面两种方法实现一样的功能，分别使用&amp;和\1代表搜寻到的整个字符串</li><li>区别在于&amp;只能表示匹配到的完整字符串，只能引用整个字符串，而\1可以使用()对匹配到的</li><li>要替换匹配的字符串的一部分，name必须使用\1，不能使用&amp;</li></ul><h2 id="sed-引用变量"><a href="#sed-引用变量" class="headerlink" title="sed 引用变量"></a>sed 引用变量</h2><ul><li>注意</li></ul><ol><li>匹配模式中存在变量，则建议使用双引号</li><li>sed中需要引入自定义变量时，如外面使用单引号，则自定义变量必须使用单引号</li></ol><h2 id="用-sed-查询特定内容"><a href="#用-sed-查询特定内容" class="headerlink" title="用 sed 查询特定内容"></a>用 sed 查询特定内容</h2><p>查询命令</p><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190721102519.png" alt></p><p>实例</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 打印/etc/passwd中的第20行内容</span></span><br><span class="line">sed -n <span class="hljs-string">"20p"</span> /etc/passwd</span><br><span class="line"></span><br><span class="line">sed -n <span class="hljs-string">"8,15p"</span> /etc/passwd</span><br><span class="line">sed -n <span class="hljs-string">"8,+5p"</span> /etc/passwd</span><br><span class="line">sed -n <span class="hljs-string">'/^hdfs/p'</span> /etc/passwd</span><br><span class="line">sed -n <span class="hljs-string">'^root/,/^hdfs/p'</span> /etc/passwd</span><br><span class="line">sed -n <span class="hljs-string">'8,/\sbin\/nologin/p'</span> /etc/passwd</span><br><span class="line">sed -n <span class="hljs-string">'\bin\/bash/,5p'</span> /etc/passwd</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190721103230.png" alt></p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#!/bin/bash</span></span><br><span class="line">FILE_NAME=/root/my.cnf</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">function</span> get_all_segments</span><br><span class="line">&#123;</span><br><span class="line">    <span class="hljs-built_in">echo</span> <span class="hljs-string">"`sed -n '/\[.*\]/p' <span class="hljs-variable">$FILE_NAME</span> | sed -e 's/\[//g' -e 's/\]//g'`"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">function</span> count_items_in_segment</span><br><span class="line">&#123;</span><br><span class="line">    items=`sed -n <span class="hljs-string">'/\['</span><span class="hljs-variable">$1</span><span class="hljs-string">'\]/,/\[.*\]/p'</span> <span class="hljs-variable">$FILE_NAME</span> | grep -v <span class="hljs-string">"^#"</span> | grep -v ^$ | grep -v <span class="hljs-string">"\[.*\]"</span>`</span><br><span class="line">    index=0</span><br><span class="line">    <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> <span class="hljs-variable">$items</span></span><br><span class="line">    <span class="hljs-keyword">do</span></span><br><span class="line">        index=`expr <span class="hljs-variable">$index</span> +1`</span><br><span class="line">    <span class="hljs-keyword">done</span></span><br><span class="line">    <span class="hljs-built_in">echo</span> <span class="hljs-variable">$index</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">number=0</span><br><span class="line"><span class="hljs-keyword">for</span> segment <span class="hljs-keyword">in</span> `get_all_segments`</span><br><span class="line"><span class="hljs-keyword">do</span></span><br><span class="line">    num=`expr <span class="hljs-variable">$number</span> + 1`</span><br><span class="line">    items_count=`coubt_items_in_segment <span class="hljs-variable">$segment</span>`</span><br><span class="line">    <span class="hljs-built_in">echo</span> <span class="hljs-string">"<span class="hljs-variable">$number</span>: <span class="hljs-variable">$segment</span> <span class="hljs-variable">$items_count</span>"</span></span><br><span class="line"><span class="hljs-keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="sed-删除特定内容"><a href="#sed-删除特定内容" class="headerlink" title="sed 删除特定内容"></a>sed 删除特定内容</h2><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190721103352.png" alt></p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="hljs-string">'15d'</span> passwd</span><br><span class="line">sed -i <span class="hljs-string">'8,14d'</span> passwd</span><br><span class="line">sed -i <span class="hljs-string">'/\sbin\/nologin/d'</span> passwd</span><br><span class="line">sed -i <span class="hljs-string">'/^mail/,/^yarn/d'</span> passwd</span><br><span class="line">sed -i <span class="hljs-string">'/\sbin\/nologin/,13d'</span> passwd</span><br><span class="line">sed -i <span class="hljs-string">'5,/^ftp/d'</span> passwd</span><br><span class="line"><span class="hljs-comment"># yarn开头到最后</span></span><br><span class="line">sed -i <span class="hljs-string">'/^yarn/,$'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li><ol><li>删除配置文件中所有的注释行和空行</li></ol></li><li><ol start="2"><li>在配置文件中所有不以#开头的行前面加×符合，主要以#开头的行不添加</li></ol></li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -i ‘/^<span class="hljs-comment">#/d;/^$/d’ nginx.conf #删除注释</span></span><br><span class="line">sed -i ‘/[:blank:]*<span class="hljs-comment">#/d’ nginx.conf #删除空行</span></span><br><span class="line">sed -i ‘/^[^<span class="hljs-comment">#]/\*&amp;/g’nginx.conf  #非井号开头</span></span><br></pre></td></tr></table></figure><h2 id="sed-修改文件内容"><a href="#sed-修改文件内容" class="headerlink" title="sed 修改文件内容"></a>sed 修改文件内容</h2><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190721104309.png" alt></p><p>实例</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">#修改第一行的root为ROOT</span></span><br><span class="line">sed -i <span class="hljs-string">'1s/root/ROOT/'</span> passwd</span><br><span class="line"><span class="hljs-comment">#修改5到10行中所有的/sbin/nologin为/bin/bash</span></span><br><span class="line">sed -i <span class="hljs-string">'5,10s/\/sbin\/nologin/\bin\/bash/g'</span> passed</span><br><span class="line"><span class="hljs-comment">#修改匹配到/sbin/nologin的行，将匹配到行中的login改为LOGIN</span></span><br><span class="line">sed -i <span class="hljs-string">'/\sbin\/nologin/s/login/LOGIN/g'</span> passwd</span><br><span class="line"><span class="hljs-comment">#修改以root开头的行，到15行中的所有行，修改行中的nologin为SPARK</span></span><br><span class="line">sed -i <span class="hljs-string">'/^root/,15s/nologin/SPARK/g'</span> passwd</span><br><span class="line"><span class="hljs-comment">#从15行开始到匹配以yarn开头的所有行，修改行中的bin为BIN</span></span><br><span class="line">sed -i <span class="hljs-string">'15,/^yarn/s/bin/BIN/g'</span> passwd</span><br><span class="line"></span><br><span class="line">sed -i <span class="hljs-string">'s/[0-9]*//g'</span> file.txt</span><br></pre></td></tr></table></figure><h2 id="sed-追加文本内容"><a href="#sed-追加文本内容" class="headerlink" title="sed 追加文本内容"></a>sed 追加文本内容</h2><ul><li>语法</li></ul><ol><li><p>a</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 第十行后追加"Add lind behind"</span></span><br><span class="line">sed -i <span class="hljs-string">'10a Add lind behind'</span> passwd</span><br><span class="line"><span class="hljs-comment"># 第10到20行，每一行后面都追加"Test line behind"</span></span><br><span class="line">sed -i <span class="hljs-string">'10,20a Test line behind'</span> passws</span><br><span class="line"><span class="hljs-comment"># 匹配到/bin/bash的行后面追加"insert line for /bin/bash behind"</span></span><br><span class="line">sed -i <span class="hljs-string">'/\bin\/bash/a insert line for /bin/bash behind'</span> passws</span><br></pre></td></tr></table></figure></li><li><p>i</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 匹配yarn开头的行，在匹配航后面追加"Add lind behind"</span></span><br><span class="line">sed -i <span class="hljs-string">'yarn/i Add lind behind'</span> passwd</span><br><span class="line"><span class="hljs-comment"># 每一行前面都追加“insert line before every line"</span></span><br><span class="line">sed -i <span class="hljs-string">'i insert line before every line'</span> passwd</span><br></pre></td></tr></table></figure></li><li><p>r</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">#将/etc/fstab文件的内容追加到passwd的第20行后面</span></span><br><span class="line">sed -i <span class="hljs-string">'20r /etc/fstab'</span> passwd</span><br><span class="line"><span class="hljs-comment">#将/etc/inittab文件内容追加到passwd文件匹配/bin/bash行后面</span></span><br><span class="line">sed -i <span class="hljs-string">'/\bin\/bash/r /etc/inittab'</span> passwd</span><br><span class="line"><span class="hljs-comment">#将/etc/vconsol.conf文件内容追加到passwd文件中特定行的后面，匹配以ftp开头的行后面</span></span><br><span class="line">sed -i /^ftp/,18r /etc.vconsole.conf’ pssswd</span><br></pre></td></tr></table></figure></li><li><p>w</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 将passwd文件匹配到/bin/bash的行追加到/tmp/sed.txt文件中</span></span><br><span class="line">sed -i <span class="hljs-string">'/\bin\/bash/w /tmp/sed.txt'</span> passwd</span><br><span class="line"><span class="hljs-comment"># 将passwd文件从10行还是到匹配到hsfs开头的所有行内容追加到/tmp/sed-1.txt</span></span><br><span class="line">sed -i <span class="hljs-string">'10,/^hsfs/w /tmp/sed-1.txt'</span> passwd</span><br></pre></td></tr></table></figure></li></ol><h1 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h1><h2 id="awk-的工作模式"><a href="#awk-的工作模式" class="headerlink" title="awk 的工作模式"></a>awk 的工作模式</h2><ol><li>awk 为一个文本处理工具，通常用于处理数据并产生结果报告。</li><li>命名是由三个创始人姓氏首字母组成</li></ol><h2 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h2><ol><li>awk ‘BEGIN{}pattern{commands}END{}’ file_name</li><li>standard outpu | awk ‘BEGIN{}pattern{commands}END{}’ file_name</li></ol><ul><li>语法格式说明</li></ul><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190721124926.png" alt></p><h2 id="awk-内置变量"><a href="#awk-内置变量" class="headerlink" title="awk 内置变量"></a>awk 内置变量</h2><p>内置变量对照表</p><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190721125045.png" alt><br><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190721130039.png" alt></p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="hljs-string">'&#123;print $0&#125;END&#123;&#125;'</span> /etc/passwd</span><br><span class="line"><span class="hljs-comment"># 指定分隔符，输出第一个(既所有用户名)</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125;&#123;print $1&#125;'</span> /etc/passwd</span><br><span class="line"><span class="hljs-comment"># 默认空格为分割符</span></span><br><span class="line">awk <span class="hljs-string">'&#123;print $1'</span> list.txt</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># NF每一个行字段个数（number Filed）</span></span><br><span class="line">awk <span class="hljs-string">'&#123;print NF&#125;'</span> list.txt <span class="hljs-comment"># 返回字段个数</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># NR(Number Row)</span></span><br><span class="line">awk <span class="hljs-string">'&#123;print NR&#125;'</span> list.txt /etc/passwd <span class="hljs-comment"># 返回行号</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># FNR(File Number Row)对每一个文件单独计数</span></span><br><span class="line">awk <span class="hljs-string">'&#123;print FNR&#125;'</span> list.txt /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># FS(File Separator)</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS="|"&#125;&#123;print $2&#125;'</span> list.txt <span class="hljs-comment">#指定分割符|</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># RS(Row Separator) 行分隔符</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS="|";RS="--"&#125;&#123;print $2&#125;'</span> list.txt</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># ORS(Output Row Separatot) 输出行分割符</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS="|";RS="--"；ORS="&amp;"&#125;&#123;print $2&#125;'</span> list.txt</span><br><span class="line"></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS="|";RS="--"；ORS="&amp;";OFS=":"&#125;&#123;print $2，$3&#125;'</span> list.txt</span><br><span class="line"></span><br><span class="line">awk <span class="hljs-string">'&#123;print FILENAME&#125;'</span> list.txt <span class="hljs-comment">#对每一行输出文件名</span></span><br><span class="line"></span><br><span class="line">awk <span class="hljs-string">'&#123;print ARGC&#125;'</span> list.txt <span class="hljs-comment"># 输出行参数个数</span></span><br><span class="line"></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125;&#123;print $NF&#125;'</span> /etc/passwd <span class="hljs-comment"># 输出行最大自的断</span></span><br></pre></td></tr></table></figure><h2 id="awk-格式化输出"><a href="#awk-格式化输出" class="headerlink" title="awk 格式化输出"></a>awk 格式化输出</h2><p>printf(默认不带分隔符) 语法</p><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190721134349.png" alt></p><p>修饰符</p><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190721134554.png" alt></p><p>实例</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 不加任何修饰输出 </span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125;&#123;printf $1&#125;'</span> /etc/passwd</span><br><span class="line"><span class="hljs-comment"># 换行输出</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125;&#123;printf "%s\n",$1&#125;'</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 输出两个变量</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125;&#123;printf "%s%s\n",$1,$7&#125;'</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 第一个第二个变量长度20(默认右对齐)</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125;&#123;printf "%20s %20s\n",$1,$7&#125;'</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 第一个第二个变量长度20(左对齐)</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125;&#123;printf "%-20s %-20s\n",$1,$7&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 以字符串格式打印/etc/passwd中的第七个字段，以":"为分隔符</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125;&#123;printf "%s\n",$7&#125;'</span> /etc/passwd</span><br><span class="line"><span class="hljs-comment"># 以10进制格式打印/etc/passwd中的第3个字段，以":"为分隔符</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125; &#123;printf "%d\n",$3&#125;'</span> /etc/passwd <span class="hljs-comment">#不指定位数默认左对齐（指定位数右对齐 %-d)</span></span><br><span class="line">  </span><br><span class="line"><span class="hljs-comment"># 浮点数</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125; &#123;printf "%o.3f\n",$3&#125;'</span> /etc/passwd </span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 16进制</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125; &#123;printf "%x\n",$3&#125;'</span> /etc/passwd </span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 8进制</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125; &#123;printf "%o\n",$3&#125;'</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 科学计数法</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125; &#123;printf "%e\n",$3&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><h2 id="awk模式匹配的两种用法"><a href="#awk模式匹配的两种用法" class="headerlink" title="awk模式匹配的两种用法"></a>awk模式匹配的两种用法</h2><ul><li>语法</li></ul><ol><li>RegExp 含义：按正则表达式匹配</li><li>关系运算 含义：按关系运算匹配</li></ol><p>实例</p><ul><li>RegExp</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 匹配/etc/passwd文件中含有root字符串的所有行</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125;/root/&#123;print $0&#125;'</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">#匹配/etc/passwd中yarn开头的所有行</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125;/^yarn/&#123;print $0&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li><p>(运算符)关系运算</p><ul><li>关系运算符：&lt;,&gt;&lt;=,&gt;=,==,!=,~(匹配正则表达式),!~</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 以：为分隔符，匹配第3个字段小于50的所有行信息</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125;$3&lt;50&#123;print $0&#125;'</span> /etc/pssswd</span><br><span class="line"></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125;$7=="/bin/bash"&#123;print $0&#125;'</span> /etc/pssswd</span><br><span class="line"></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125;$7!="/bin/bash"&#123;print $0&#125;'</span> /etc/pssswd</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 第三个字符包含3个以上数字的所有行信息</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125;$3~/[0-9]&#123;3,&#125;/&#123;print $0&#125;'</span> /etc/passwd <span class="hljs-comment"># &#123;3,&#125;重复3次</span></span><br><span class="line"></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125;$0~/\sbin\/nologin/&#123;print $0&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>布尔运算:||(或),&amp;&amp;(与),!(非)</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 以：为分隔符，匹配文件中包含hdfs或者yarn的所有行信息</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125;$1=="hdfs" || $1=="yarn" &#123;print $0&#125;'</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 第三字段小于50且第四字段大于50的所有行信息</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125;$3&lt;50 &amp;&amp; $4&gt;50 &#123;print $0&#125;'</span> /etc/passwd</span><br><span class="line"></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125;$3&lt;50 &amp;&amp; $7~/\bin\/bash/ &#123;print $0&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure></li></ul><h2 id="awk-动作中的表达式用法"><a href="#awk-动作中的表达式用法" class="headerlink" title="awk 动作中的表达式用法"></a>awk 动作中的表达式用法</h2><p>算术运算符</p><table><thead><tr><th align="left">运算符</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">+</td><td align="left">加</td></tr><tr><td align="left">-</td><td align="left">减</td></tr><tr><td align="left">*</td><td align="left">乘</td></tr><tr><td align="left">/</td><td align="left">除</td></tr><tr><td align="left">%</td><td align="left">模</td></tr><tr><td align="left">^或**</td><td align="left">乘方</td></tr><tr><td align="left">++X</td><td align="left">再返回X变量之前，X变量加1</td></tr><tr><td align="left">X++</td><td align="left">再返回X变量之后，X变量加1</td></tr></tbody></table><ul><li>实例</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="hljs-string">'BEGIN&#123;var=20;var1="hello";print var,var1&#125;'</span></span><br><span class="line">  </span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;num1=20;num2+=num1;print num2,num2&#125;'</span></span><br><span class="line"></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;num1=20;num2+=num1;print num2+num2&#125;'</span></span><br><span class="line"></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;num1=20;num2=30;printf "%0.2f\n",num1/num2&#125;'</span></span><br><span class="line"></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;x=2;y=x++;print x,y&#125;'</span></span><br><span class="line"></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;x=2;y=x--;print x,y&#125;'</span></span><br></pre></td></tr></table></figure><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 计算文件中空白行数量</span></span><br><span class="line">awk <span class="hljs-string">'/^$/&#123;sumx=0;sum++&#125;END&#123;print sum&#125;'</span> /etc/services</span><br><span class="line">  </span><br><span class="line"><span class="hljs-comment"># 计算课程的平均分</span></span><br><span class="line">awk <span class="hljs-string">'&#123;total=S2+$3+$5+$5;AVG=total/4;printf "%-8s,%-5d%-5d%-5d%-8d%0.2f\n",$1,$2,$3,$4.$5,AVG&#125;'</span> stu.txt</span><br><span class="line"></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;printf "%-8s%-8s%-8s%-8s%-8s%s\n","姓名","语文","数学","英语","物理","平均分"&#125;&#123;total=$2+$3+$4+$5;AVG=total/4;printf "%-8s%-8d%-8d%-8d%-8d%0.2f\n",$1,$2,$3,$4.$5,AVG&#125;'</span> stu.txt</span><br></pre></td></tr></table></figure><h2 id="awk-动作中的条件及循环语句"><a href="#awk-动作中的条件及循环语句" class="headerlink" title="awk 动作中的条件及循环语句"></a>awk 动作中的条件及循环语句</h2><ul><li>条件语句</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">if</span>(条件表达式)</span><br><span class="line">  动作1</span><br><span class="line"><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(条件表达式)</span><br><span class="line">  动作2</span><br><span class="line"><span class="hljs-keyword">else</span></span><br><span class="line">  动作3</span><br></pre></td></tr></table></figure><ul><li>实例</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 以：为分隔符只打印第3个字段的数值在50-100范围内的行信息</span></span><br><span class="line">awk <span class="hljs-string">'BEFIN&#123;FS=":"&#125;&#123;if($3&gt;50 &amp;&amp; $3&lt;100&gt;) print $0&#125;'</span> /etc/passwd</span><br><span class="line">awk <span class="hljs-string">'BEFIN&#123;FS=":"&#125;&#123;if($3&gt;50 || $3&lt;100&gt;) print $0&#125;'</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 小于50的UID</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125;&#123;if($3&lt;50) printf "%-10s%-5d\n","小于50的UID:",$3&#125;'</span> /etc/passwd</span><br><span class="line">  </span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125;&#123;if($3&lt;50) printf "%-10s%-10s%-5d\n","小于50的UID:",$1,$3&#125;'</span> /etc/passwd</span><br><span class="line"></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125;&#123;if($3&lt;50) printf "%-10s%-10s%-5d\n","小于50的UID:",$1,$3&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li><p>vim scripts.awk</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    FS=<span class="hljs-string">":"</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">    f(<span class="hljs-variable">$3</span>&lt;50)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="hljs-built_in">printf</span> <span class="hljs-string">"%-30s%-20s%-5d\n"</span>,<span class="hljs-string">"小于50的UID"</span>,<span class="hljs-variable">$1</span>,<span class="hljs-variable">$3</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-variable">$3</span>&gt;50 &amp;&amp; <span class="hljs-variable">$3</span>&lt;100)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="hljs-built_in">printf</span> <span class="hljs-string">"%-30s%-20s%-5d\n"</span>,<span class="hljs-string">"大于50且小于100的UID"</span>,<span class="hljs-variable">$1</span>,<span class="hljs-variable">$3</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="hljs-built_in">printf</span> <span class="hljs-string">"%-30s%-20s%-5d\n"</span>,<span class="hljs-string">"大于100的UID"</span>,<span class="hljs-variable">$1</span>,<span class="hljs-variable">$3</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用</p></li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -f scripts.awk /etc/passed</span><br></pre></td></tr></table></figure><ul><li>循环语句</li></ul><ol><li><p>do while 循环</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">do</span> <span class="hljs-keyword">while</span></span><br><span class="line">  <span class="hljs-keyword">do</span> </span><br><span class="line">      动作</span><br><span class="line">  <span class="hljs-keyword">while</span>(条件表达式)</span><br></pre></td></tr></table></figure></li><li><p>for 循环</p></li></ol><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">for</span> (初始化计数器;测试计数器;计数器变更)</span><br><span class="line">  动作</span><br></pre></td></tr></table></figure><p>实例</p><ul><li>1+2+…100的和</li></ul><ol><li><p>while</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    <span class="hljs-keyword">while</span>(i&lt;=100)</span><br><span class="line">    &#123;</span><br><span class="line">      sum+=1</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-built_in">print</span> sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>awk -f while.wak</li></ul></li></ol><ul><li><p>for</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">  <span class="hljs-keyword">for</span>(i0;i&lt;=100;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    sum+=1</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="hljs-built_in">print</span> sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>awk -f for.awk</li></ul></li></ul><ol start="3"><li><p>do while</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">  <span class="hljs-keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">    sum+=1</span><br><span class="line">    i++</span><br><span class="line">  &#125;<span class="hljs-keyword">while</span>(i&lt;=100)</span><br><span class="line">  <span class="hljs-built_in">print</span> sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>awk -f do_while.awk</li></ul></li></ol><ul><li>计算每个同学平均分，仅显示大于90</li></ul><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190721185930.png" alt></p><figure class="highlight bash hljs"><figcaption><span>student.awk</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">  <span class="hljs-built_in">printf</span> <span class="hljs-string">"%-10s%-10s%-10s%-10s%-10s%-10s\n"</span>,<span class="hljs-string">"Name"</span>,<span class="hljs-string">"Chinese"</span>,<span class="hljs-string">"English"</span>,<span class="hljs-string">"Math"</span>,<span class="hljs-string">"Physical"</span>,<span class="hljs-string">"Average"</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  total=<span class="hljs-variable">$2</span>+<span class="hljs-variable">$3</span>+<span class="hljs-variable">$4</span>+<span class="hljs-variable">$5</span></span><br><span class="line">  avg=total/4</span><br><span class="line">  <span class="hljs-keyword">if</span>(avg&gt;90)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="hljs-built_in">printf</span> <span class="hljs-string">"%-10s%-10d%-10d%-10d%-10d%-0.2f\n"</span>,<span class="hljs-variable">$1</span>,<span class="hljs-variable">$2</span>,<span class="hljs-variable">$3</span>,<span class="hljs-variable">$4</span>,<span class="hljs-variable">$5</span>,avg</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>计算平均分大于90的各科总分</li></ul><figure class="highlight bash hljs"><figcaption><span>student.awk</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    <span class="hljs-built_in">printf</span> <span class="hljs-string">"%-10s%-10s%-10s%-10s%-10s%-10s\n"</span>,<span class="hljs-string">"Name"</span>,<span class="hljs-string">"Chinese"</span>,<span class="hljs-string">"English"</span>,<span class="hljs-string">"Math"</span>,<span class="hljs-string">"Physical"</span>,<span class="hljs-string">"Average"</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  total=<span class="hljs-variable">$2</span>+<span class="hljs-variable">$3</span>+<span class="hljs-variable">$4</span>+<span class="hljs-variable">$5</span></span><br><span class="line">  avg=total/4</span><br><span class="line">  <span class="hljs-keyword">if</span>(avg&gt;90)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="hljs-built_in">printf</span> <span class="hljs-string">"%-10s%-10d%-10d%-10d%-10d%-0.2f\n"</span>,<span class="hljs-variable">$1</span>,<span class="hljs-variable">$2</span>,<span class="hljs-variable">$3</span>,<span class="hljs-variable">$4</span>,<span class="hljs-variable">$5</span>,avg</span><br><span class="line">    score_chinese+=<span class="hljs-variable">$2</span></span><br><span class="line">    score_english+=<span class="hljs-variable">$3</span></span><br><span class="line">    score_math+=<span class="hljs-variable">$4</span></span><br><span class="line">    score_physical+=<span class="hljs-variable">$5</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">END&#123;</span><br><span class="line">  <span class="hljs-built_in">printf</span> <span class="hljs-string">"%-10s%-10d%-10d%-10d%-10d\n"</span>,<span class="hljs-string">""</span>,score_chinese,score_english,score_math,score_physical</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="awk-中的字符串函数"><a href="#awk-中的字符串函数" class="headerlink" title="awk 中的字符串函数"></a>awk 中的字符串函数</h2><p>字符串函数对照表</p><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190721191406.png" alt><br><img src="https://raw.githubusercontent.com/ivitan/Picture/master/20190721191743.png" alt></p><p>例子</p><ol><li>以:为分隔符，返回文件中每行中的字段长度</li></ol><figure class="highlight bash hljs"><figcaption><span>1.awk</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># NF 字段个数</span></span><br><span class="line">BEGIN&#123;</span><br><span class="line">  FS=<span class="hljs-string">":"</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  i=1</span><br><span class="line">  <span class="hljs-keyword">while</span>(i&lt;=NF)</span><br><span class="line">  &#123; </span><br><span class="line">    <span class="hljs-keyword">if</span>(i==NF)</span><br><span class="line">      <span class="hljs-built_in">printf</span> <span class="hljs-string">"%d"</span>,length(<span class="hljs-variable">$i</span>)</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">      <span class="hljs-built_in">printf</span> <span class="hljs-string">"%d:"</span>,length(<span class="hljs-variable">$i</span>)</span><br><span class="line">    i++</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="hljs-built_in">print</span> <span class="hljs-string">""</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>搜索字符串”I have a dream”中出现”ea”子串的位置</li></ol><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 方法1</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;str="I have a dream";location=index(str,"ea");print location&#125;'</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">#方法2</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;str="I have a dream";location=match(str,"ea");print location&#125;'</span></span><br></pre></td></tr></table></figure><ol start="3"><li>将字符串”Hadoop is a bigdata Framework”全部转为小写</li></ol><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="hljs-string">'BEGIN&#123;str="Hadoop is a bigdata Framework";print tolower(str)&#125;'</span></span><br></pre></td></tr></table></figure><ol start="4"><li>上一题转为大写</li></ol><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="hljs-string">'BEGIN&#123;str="Hadoop is a bigdata Framework";print toupper(str)&#125;'</span></span><br></pre></td></tr></table></figure><ol start="5"><li>将字符串”Hadoop Kafka Spark Storm”按空格为分隔符，分割每一部分保存到数组arr中</li></ol><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="hljs-string">'BEGIN&#123;str="Hadoop Kafka Spark Storm";split(str,arr," ");print arr[0]&#125;'</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 遍历(awk 下标从1开始)</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;str="Hadoop Kafka Spark Storm";split(str,arr," ");for(a in arr) print arr[a]&#125;'</span></span><br></pre></td></tr></table></figure><ol start="6"><li>搜索字符串”Tranction 2345 start:select * from master”第一个数字出现的位置</li></ol><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="hljs-string">'BEGIN&#123;str="Tranction 2345 start:select * from master";location=match(str,/[0-9]/);print location&#125;'</span></span><br></pre></td></tr></table></figure><ul><li>正则表达式要用 <code>//</code> 引起来</li></ul><ol start="7"><li>截图字符串”transaction start”的子串，条件从第4个字符开始，截取5为</li></ol><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="hljs-string">'BEGIN&#123;str="transaction start";print substr(str,4,5)&#125;'</span></span><br></pre></td></tr></table></figure><ol start="8"><li>替换”Tranction 243 start，Event ID：9002”中第一个匹配到的数字为$符号</li></ol><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="hljs-string">'BEGIN&#123;str="Tranction 243 start，Event ID：9002";count=sub(/[0-9]+/,"$",str);print count,str&#125;'</span></span><br><span class="line">  </span><br><span class="line"><span class="hljs-comment"># gsu所有</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;str="Tranction 243 start，Event ID：9002";count=gsub(/[0-9]+/,"$",str);print count,str&#125;'</span></span><br></pre></td></tr></table></figure><h2 id="awk中的常用选项"><a href="#awk中的常用选项" class="headerlink" title="awk中的常用选项"></a>awk中的常用选项</h2><table><thead><tr><th align="left">选项</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">-v</td><td align="left">参数传递</td></tr><tr><td align="left">-f</td><td align="left">指定脚本文件</td></tr><tr><td align="left">-F</td><td align="left">指定分隔符</td></tr><tr><td align="left">-V</td><td align="left">查看awk的版本号</td></tr></tbody></table><p>实例</p><ul><li>-v 把外部变量引入</li></ul><figure class="highlight bash hljs"><figcaption><span>终端中</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">num1=20</span><br><span class="line">var=<span class="hljs-string">"Hello World"</span></span><br><span class="line">awk -v num2=<span class="hljs-string">"<span class="hljs-variable">$num1</span>"</span> -v var1=<span class="hljs-string">"<span class="hljs-variable">$var</span>"</span> <span class="hljs-string">'BEGIN&#123;print num2,var1&#125;'</span></span><br></pre></td></tr></table></figure><ul><li>-f 引入文件</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -f student.awk /etc/passws</span><br></pre></td></tr></table></figure><ul><li>-F</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">awk -F <span class="hljs-string">":"</span> <span class="hljs-string">'&#123;print $7&#125;'</span> /etc/passwd</span><br><span class="line">awk -F : <span class="hljs-string">'&#123;print $7&#125;'</span> /etc/passwd</span><br><span class="line"><span class="hljs-comment"># 等价于</span></span><br><span class="line">awk <span class="hljs-string">'BEGIN&#123;FS=":"&#125;&#123;print $7&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><h2 id="Shell-数组的用法"><a href="#Shell-数组的用法" class="headerlink" title="Shell 数组的用法"></a>Shell 数组的用法</h2><ul><li>array=(“Mike”,”Bell”,”Hellen”)<ul><li>下面的 <code>井</code> 为 <code>#</code></li></ul></li></ul><table><thead><tr><th align="left">解释</th><th align="left">代码</th></tr></thead><tbody><tr><td align="left">打印元素</td><td align="left">echo ${井array[2]}</td></tr><tr><td align="left">打印元素个数</td><td align="left">echo ${井array[@]} / echo ${井array[*]}</td></tr><tr><td align="left">打印元素长度</td><td align="left">echo ${井array[3]}</td></tr><tr><td align="left">给元素赋值</td><td align="left">array[3]=”LI”</td></tr><tr><td align="left">删除元素</td><td align="left">unset array[2];unset array</td></tr><tr><td align="left">分片访问</td><td align="left">echo ${井array[@]:1:3}</td></tr><tr><td align="left">元素内容替换</td><td align="left">${array[@]/e/E} #只替换第一个e;${array[@]//e/E}替换全部e</td></tr></tbody></table><ul><li>数组遍历 </li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> array</span><br><span class="line"><span class="hljs-keyword">do</span> </span><br><span class="line">   <span class="hljs-built_in">echo</span> <span class="hljs-variable">$a</span></span><br><span class="line"><span class="hljs-keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="awk-数组用法"><a href="#awk-数组用法" class="headerlink" title="awk 数组用法"></a>awk 数组用法</h2><ul><li>awk中使用数组时，不仅可以使用数字作为数组下标，也可以使用字符串作为数组下标</li></ul><ol><li>统计主机上所有TCP连接状态，按照每个TCP状态分类</li></ol><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -an | grep tcp | awk <span class="hljs-string">'&#123;arrary[$6]++&#125;END&#123;for(a in arrary) print a,arrary[a]&#125;'</span></span><br></pre></td></tr></table></figure><ol start="2"><li>计算横向数总和，计算纵向数据总和</li></ol><figure class="highlight bash hljs"><figcaption><span>数据</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Allen 80 90 96 98</span><br><span class="line">Mike  93 98 92 91</span><br><span class="line">Zhang 78 76 87 92</span><br><span class="line">Jerry 86 89 68 92</span><br><span class="line">Han   85 95 75 90</span><br><span class="line">Li    78 88 98 100</span><br></pre></td></tr></table></figure><figure class="highlight bash hljs"><figcaption><span>stu.awk</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">  <span class="hljs-built_in">printf</span> <span class="hljs-string">"%-10s%-10s%-10s%-10s%-10s%-10s\n"</span>,<span class="hljs-string">"Name"</span>,<span class="hljs-string">"Chinese"</span>,<span class="hljs-string">"Math"</span>,<span class="hljs-string">"English"</span>,<span class="hljs-string">"Physical"</span>,<span class="hljs-string">"Total"</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  total=<span class="hljs-variable">$2</span>+<span class="hljs-variable">$3</span>+<span class="hljs-variable">$4</span>+<span class="hljs-variable">$5</span></span><br><span class="line">  yuwen_sum+=<span class="hljs-variable">$2</span></span><br><span class="line">  math_sum+=<span class="hljs-variable">$3</span></span><br><span class="line">  english_sum+=<span class="hljs-variable">$4</span></span><br><span class="line">  physical_sum+=<span class="hljs-variable">$5</span></span><br><span class="line">  <span class="hljs-built_in">printf</span> <span class="hljs-string">"%-10s%-10d%-10d%-10d%-10d%-10d\n"</span>,<span class="hljs-variable">$1</span>,<span class="hljs-variable">$2</span>,<span class="hljs-variable">$3</span>,<span class="hljs-variable">$4</span>,<span class="hljs-variable">$5</span>,total</span><br><span class="line">&#125;</span><br><span class="line">END&#123;</span><br><span class="line">  <span class="hljs-built_in">printf</span> <span class="hljs-string">"%-10s%-10d%-10d%-10d%-10d\n"</span>,<span class="hljs-string">""</span>,yuwen_sum,math_sum,english_sum,physical_sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="awk-处理数据例子"><a href="#awk-处理数据例子" class="headerlink" title="awk 处理数据例子"></a>awk 处理数据例子</h2><p>生成随机数据</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#!/bin/bash</span></span><br><span class="line"><span class="hljs-keyword">function</span> create_random()</span><br><span class="line">&#123;</span><br><span class="line">  min=<span class="hljs-variable">$1</span></span><br><span class="line">  max=$((<span class="hljs-variable">$2</span>-<span class="hljs-variable">$min</span>+1))</span><br><span class="line">  num=$(date +%s%N)</span><br><span class="line">  <span class="hljs-built_in">echo</span> $((<span class="hljs-variable">$num</span>%<span class="hljs-variable">$max</span>+<span class="hljs-variable">$min</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">INDEX=1</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">while</span> <span class="hljs-literal">true</span></span><br><span class="line"><span class="hljs-keyword">do</span></span><br><span class="line">  <span class="hljs-keyword">for</span> user <span class="hljs-keyword">in</span> Allen Mike Jerry Tracy Hanmeimei Lilei</span><br><span class="line">  <span class="hljs-keyword">do</span></span><br><span class="line">    COUNT=<span class="hljs-variable">$RANDOM</span></span><br><span class="line">    NUM1=`create_random 1 <span class="hljs-variable">$COUNT</span>`</span><br><span class="line">    NUM2=`expr <span class="hljs-variable">$COUNT</span> - <span class="hljs-variable">$NUM1</span>`</span><br><span class="line">    <span class="hljs-built_in">echo</span> <span class="hljs-string">"`date '+%y-%m-%d %H:%M:%S'` <span class="hljs-variable">$INDEX</span> Batches: user <span class="hljs-variable">$user</span> insert <span class="hljs-variable">$COUNT</span> records into databases:product table:datail,insert <span class="hljs-variable">$NUM1</span> records successfully,failed <span class="hljs-variable">$NUM2</span> records"</span> &gt;&gt; ./db.log.`date +%Y%m%d`</span><br><span class="line">    INDEX=`expr <span class="hljs-variable">$INSEX</span> + 1`</span><br><span class="line">  <span class="hljs-keyword">done</span></span><br><span class="line"><span class="hljs-keyword">done</span></span><br></pre></td></tr></table></figure><ol><li>统计每个用户分别插入多少record </li></ol><figure class="highlight bash hljs"><figcaption><span>tesst.awk</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">  <span class="hljs-built_in">printf</span> <span class="hljs-string">"%-10s%-10s\n"</span>,<span class="hljs-string">"User"</span>,<span class="hljs-string">"Total Records"</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  USER[<span class="hljs-variable">$6</span>]+=<span class="hljs-variable">$8</span></span><br><span class="line">&#125;</span><br><span class="line">END&#123;</span><br><span class="line">  <span class="hljs-keyword">for</span>(u <span class="hljs-keyword">in</span> USER)</span><br><span class="line">    <span class="hljs-built_in">printf</span> <span class="hljs-string">"%-20s%-20d\n"</span>,u,USER[u]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>统计每个用户分别插入成功和失败各多少record</li></ol><figure class="highlight bash hljs"><figcaption><span>2.awk</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">  <span class="hljs-built_in">printf</span> <span class="hljs-string">"%-10s%-20s%-20s\n"</span>,<span class="hljs-string">"User,"</span>Success_Records<span class="hljs-string">","</span>Filed_records<span class="hljs-string">"</span></span><br><span class="line"><span class="hljs-string">&#125;</span></span><br><span class="line"><span class="hljs-string">&#123;</span></span><br><span class="line"><span class="hljs-string">  SUCCESS[<span class="hljs-variable">$6</span>]+=<span class="hljs-variable">$14</span></span></span><br><span class="line"><span class="hljs-string">  FAILED[<span class="hljs-variable">$6</span>]+=<span class="hljs-variable">$17</span></span></span><br><span class="line"><span class="hljs-string">&#125;</span></span><br><span class="line"><span class="hljs-string">END&#123;</span></span><br><span class="line"><span class="hljs-string">  for(u in SUCCESS)</span></span><br><span class="line"><span class="hljs-string">    printf "</span>%-10s%-20d%-20d\n<span class="hljs-string">",u,SUCCESS[u],FAILED[u]</span></span><br><span class="line"><span class="hljs-string">&#125;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>将例子1,2结合，一起输出每个用户分别插入多少条数据，成功失败各多少条</li></ol><figure class="highlight bash hljs"><figcaption><span>3.awk</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">  BEGIN&#123;</span><br><span class="line">    <span class="hljs-built_in">printf</span> <span class="hljs-string">"%-30s%-30s%-30s%-30s\n"</span>,<span class="hljs-string">"Name"</span>,<span class="hljs-string">"total records"</span>,<span class="hljs-string">"success records"</span>,<span class="hljs-string">"failed records"</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">    TOTAL_RECORDS[<span class="hljs-variable">$6</span>]+=<span class="hljs-variable">$8</span></span><br><span class="line">    SUCCESS[<span class="hljs-variable">$6</span>]+=<span class="hljs-variable">$14</span></span><br><span class="line">    FAILED[<span class="hljs-variable">$6</span>]+=<span class="hljs-variable">$17</span></span><br><span class="line">&#125;</span><br><span class="line">END&#123;</span><br><span class="line">    <span class="hljs-keyword">for</span>(u <span class="hljs-keyword">in</span> TOTAL_RECORDS)</span><br><span class="line">        <span class="hljs-built_in">printf</span> <span class="hljs-string">"%-30s%-30d%-30d%-30d\n"</span>,u,TOTAL_RECORDS[u],SUCCESS[u],FAILED[u]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>在例子3的基础上，加上结尾，统计全部插入记录数，成功记录数，失败记录数</li></ol><ul><li>方法一</li></ul><figure class="highlight bash hljs"><figcaption><span>3.awk</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    <span class="hljs-built_in">printf</span> <span class="hljs-string">"%-30s%-30s%-30s%-30s\n"</span>,<span class="hljs-string">"Name"</span>,<span class="hljs-string">"total records"</span>,<span class="hljs-string">"success records"</span>,<span class="hljs-string">"failed records"</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">    TOTAL_RECORDS[<span class="hljs-variable">$6</span>]+=<span class="hljs-variable">$8</span></span><br><span class="line">    SUCCESS[<span class="hljs-variable">$6</span>]+=<span class="hljs-variable">$14</span></span><br><span class="line">    FAILED[<span class="hljs-variable">$6</span>]+=<span class="hljs-variable">$17</span></span><br><span class="line">&#125;</span><br><span class="line">END&#123;</span><br><span class="line">    <span class="hljs-keyword">for</span>(u <span class="hljs-keyword">in</span> TOTAL_RECORDS)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="hljs-comment"># 在统计出的结果数组中进行累加</span></span><br><span class="line">        records_sum+=TOTAL_RECORDS[u]</span><br><span class="line">        success_sum+=SUCCESS[u]</span><br><span class="line">        failed_sum+=FAILED[u]</span><br><span class="line">        <span class="hljs-built_in">printf</span> <span class="hljs-string">"%-30s%-30d%-30d%-30d\n"</span>,u,TOTAL_RECORDS[u],SUCCESS[u],FAILED[u]</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="hljs-built_in">printf</span> <span class="hljs-string">"%-30s%-30d%-30d%-30d\n"</span>,<span class="hljs-string">""</span>,records_sum,success_sum,failed_sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>方法二</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    <span class="hljs-built_in">printf</span> <span class="hljs-string">"%-30s%-30s%-30s%-30s\n"</span>,<span class="hljs-string">"Name"</span>,<span class="hljs-string">"total records"</span>,<span class="hljs-string">"success records"</span>,<span class="hljs-string">"failed records"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    RECORDS[<span class="hljs-variable">$6</span>]+=<span class="hljs-variable">$8</span></span><br><span class="line">    SUCCESS[<span class="hljs-variable">$6</span>]+=<span class="hljs-variable">$14</span></span><br><span class="line">    FAILED[<span class="hljs-variable">$6</span>]+=<span class="hljs-variable">$17</span></span><br><span class="line">    </span><br><span class="line">    <span class="hljs-comment"># 在原始数据中进行汇总计算</span></span><br><span class="line">    records_sum+=<span class="hljs-variable">$8</span></span><br><span class="line">    success_sum+=<span class="hljs-variable">$14</span></span><br><span class="line">    failed_sum+=<span class="hljs-variable">$17</span>   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">END&#123;</span><br><span class="line">    <span class="hljs-keyword">for</span>(u <span class="hljs-keyword">in</span> RECORDS)</span><br><span class="line">        <span class="hljs-built_in">printf</span> <span class="hljs-string">"%-30s%-30d%-30d%-30d\n"</span>,u,RECORDS[u],SUCCESS[u],FAILED[u]</span><br><span class="line"></span><br><span class="line">    <span class="hljs-built_in">printf</span> <span class="hljs-string">"%-30s%-30d%-30d%-30d\n"</span>,<span class="hljs-string">"total"</span>,records_sum,success_sum,failed_sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>查找丢失数据的现象，也就是成功+失败的记录数不等于一共插入的记录数，找出这些数据并显示行号和对应行的日志信息</li></ol><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="hljs-string">'&#123;if($8!=$14+$17) print NR,$0&#125;'</span> db.log.20190722</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Shell 总结&lt;/p&gt;
    
    </summary>
    
      <category term="Coding" scheme="https://vitan.me/categories/Coding/"/>
    
    
      <category term="Linux" scheme="https://vitan.me/tags/Linux/"/>
    
      <category term="Shell" scheme="https://vitan.me/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>斐讯 N1 盒子降级刷机</title>
    <link href="https://vitan.me/posts/N1Box.html"/>
    <id>https://vitan.me/posts/N1Box.html</id>
    <published>2019-07-09T05:26:50.000Z</published>
    <updated>2019-12-10T01:38:54.156Z</updated>
    
    <content type="html"><![CDATA[<p>斐讯 N1 盒子降级刷机</p><a id="more"></a><h1 id="降级"><a href="#降级" class="headerlink" title="降级"></a>降级</h1><ul><li>打开 ADB,点击官方固件的 <code>版本号</code> 4 次</li></ul><h2 id="重启至-Bootloader"><a href="#重启至-Bootloader" class="headerlink" title="重启至 Bootloader"></a>重启至 Bootloader</h2><ul><li>先下载 <a href="https://dl.google.com/android/repository/platform-tools-latest-windows.zip" target="_blank" rel="noopener">ADB</a></li><li>连接设备并进入 fastboot<figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">cd</span> adb</span><br><span class="line">adb connect ip:5555</span><br><span class="line">adb shell reboot fastboot</span><br></pre></td></tr></table></figure></li></ul><h2 id="刷入降级"><a href="#刷入降级" class="headerlink" title="刷入降级"></a>刷入降级</h2><ul><li>双公头 USB 数据线与电脑连接，务必连接至靠近 HDMI 接口的那个 USB 接口<figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fastboot devices <span class="hljs-comment">#查看是否识别到设备</span></span><br><span class="line">fastboot flash boot boot.img</span><br><span class="line">fastboot flash bootloader bootloader.img</span><br><span class="line">fastboot flash recovery recovery.img</span><br><span class="line">fastboot reboot</span><br></pre></td></tr></table></figure></li></ul><h1 id="刷入-w大固件"><a href="#刷入-w大固件" class="headerlink" title="刷入 w大固件"></a>刷入 <a href="https://www.right.com.cn/forum/thread-338759-1-1.html" target="_blank" rel="noopener">w大固件</a></h1><ul><li>先安装 <a href="https://androidmtk.com/download-amlogic-usb-burning-tool" target="_blank" rel="noopener">Usb Burning Tool</a></li><li>打开设备管理器 ==&gt; <code>操作</code> ==&gt;<code>添加过时硬件</code> ==&gt; 下一步 ==&gt; 选择 <code>安装我手动从列表选择的硬件</code> ==&gt; 下一步 ==&gt; 选择 <code>libusb-win32 Usb Devices</code> ==&gt; 下一步 ==&gt; 选择 <code>WorldCup Device</code> ==&gt; 下一步 ==&gt; 下一步 </li><li>打开 Usb Burining Tool,去除勾选右边烧录配置的 <code>擦除flash</code> 和 <code>擦除bootloader</code></li><li><a href="https://www.right.com.cn/forum/thread-338759-1-1.html" target="_blank" rel="noopener">w大固件</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;斐讯 N1 盒子降级刷机&lt;/p&gt;
    
    </summary>
    
      <category term="Diary" scheme="https://vitan.me/categories/Diary/"/>
    
    
      <category term="Android" scheme="https://vitan.me/tags/Android/"/>
    
      <category term="Linux" scheme="https://vitan.me/tags/Linux/"/>
    
      <category term="TvBox" scheme="https://vitan.me/tags/TvBox/"/>
    
  </entry>
  
  <entry>
    <title>Grub 双系统选项、美化</title>
    <link href="https://vitan.me/posts/Grub.html"/>
    <id>https://vitan.me/posts/Grub.html</id>
    <published>2019-06-27T06:26:38.000Z</published>
    <updated>2019-12-10T01:38:54.148Z</updated>
    
    <content type="html"><![CDATA[<p>添加 Win10 菜单到 Grub</p><a id="more"></a><h1 id="安装-os-prober"><a href="#安装-os-prober" class="headerlink" title="安装 os-prober"></a>安装 os-prober</h1><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S os-prober</span><br></pre></td></tr></table></figure><h1 id="扫面并添加到菜单"><a href="#扫面并添加到菜单" class="headerlink" title="扫面并添加到菜单"></a>扫面并添加到菜单</h1><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><h1 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h1><p>下载主题 <a href="https://www.gnome-look.org/browse/cat/109/ord/latest/" target="_blank" rel="noopener">Gnome-Look</a></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>有的主题有安装脚本，运行即可</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo cp -r 主题包名 /boot/grub/themes/  </span><br><span class="line">sudo vim /etc/grub.d/00_header</span><br></pre></td></tr></table></figure><figure class="highlight bash hljs"><figcaption><span>上一步添加如下内容</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GRUB_THEME=<span class="hljs-string">"/boot/grub/themes/主题包名/theme.txt"</span></span><br><span class="line">GRUB_GFXMODE=<span class="hljs-string">"1920x1080x32"</span></span><br></pre></td></tr></table></figure><h2 id="更新配置"><a href="#更新配置" class="headerlink" title="更新配置"></a>更新配置</h2><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/Grub.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;添加 Win10 菜单到 Grub&lt;/p&gt;
    
    </summary>
    
      <category term="Diary" scheme="https://vitan.me/categories/Diary/"/>
    
    
      <category term="Linux" scheme="https://vitan.me/tags/Linux/"/>
    
      <category term="Win" scheme="https://vitan.me/tags/Win/"/>
    
  </entry>
  
  <entry>
    <title>Git 更换设备后怎么做</title>
    <link href="https://vitan.me/posts/Git-Change.html"/>
    <id>https://vitan.me/posts/Git-Change.html</id>
    <published>2019-06-07T02:19:01.000Z</published>
    <updated>2019-12-10T01:38:54.144Z</updated>
    
    <content type="html"><![CDATA[<p>Git 更换设备后怎么做</p><a id="more"></a><h1 id="旧仓库"><a href="#旧仓库" class="headerlink" title="旧仓库"></a>旧仓库</h1><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">git init 仓库名字</span><br><span class="line"><span class="hljs-comment"># 建立远程连接</span></span><br><span class="line">git remote add origin https://github.com/user/repo.git    </span><br><span class="line"><span class="hljs-comment">#获取远程更新</span></span><br><span class="line">git fetch origin  </span><br><span class="line"><span class="hljs-comment"># 把更新的内容合并到本地分支</span></span><br><span class="line">git merge origin/master </span><br><span class="line"><span class="hljs-comment"># 加入差异的文件,就是本地修改的文件</span></span><br><span class="line">git add . </span><br><span class="line">git commit -m <span class="hljs-string">"Commit message"</span> </span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h1 id="新仓库"><a href="#新仓库" class="headerlink" title="新仓库"></a>新仓库</h1><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git init()</span><br><span class="line">git remote add origin https://github.com/user/repo.git</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="hljs-string">"Commit message"</span></span><br><span class="line">push origin master</span><br></pre></td></tr></table></figure><h1 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h1><ul><li>拉取时推荐</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin master</span><br><span class="line">git merge origin/master</span><br></pre></td></tr></table></figure><ul><li>不推荐</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Git 更换设备后怎么做&lt;/p&gt;
    
    </summary>
    
      <category term="Diary" scheme="https://vitan.me/categories/Diary/"/>
    
    
      <category term="Linux" scheme="https://vitan.me/tags/Linux/"/>
    
      <category term="Git" scheme="https://vitan.me/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>ArchLinux Docker</title>
    <link href="https://vitan.me/posts/Docker.html"/>
    <id>https://vitan.me/posts/Docker.html</id>
    <published>2019-05-25T05:10:00.000Z</published>
    <updated>2019-12-10T01:38:54.143Z</updated>
    
    <content type="html"><![CDATA[<p>ArchLinux 安装 Docker</p><a id="more"></a><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S docker</span><br></pre></td></tr></table></figure><p>start server</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h1 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h1><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull ubuntu:18.04</span><br><span class="line">docker pull centos <span class="hljs-comment"># latest</span></span><br><span class="line">dicker pull centos:6</span><br></pre></td></tr></table></figure><h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -i -t centos /bin/bash</span><br></pre></td></tr></table></figure><ul><li>-it, -i：交互式操作， -t 终端</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ArchLinux 安装 Docker&lt;/p&gt;
    
    </summary>
    
      <category term="Coding" scheme="https://vitan.me/categories/Coding/"/>
    
    
      <category term="Linux" scheme="https://vitan.me/tags/Linux/"/>
    
      <category term="Docker" scheme="https://vitan.me/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Vim Summary</title>
    <link href="https://vitan.me/posts/Vim-Mooc.html"/>
    <id>https://vitan.me/posts/Vim-Mooc.html</id>
    <published>2019-05-19T01:30:42.000Z</published>
    <updated>2019-12-10T01:38:54.197Z</updated>
    
    <content type="html"><![CDATA[<p>Vim 重新学习笔记</p><a id="more"></a><h1 id="三个模式"><a href="#三个模式" class="headerlink" title="三个模式"></a>三个模式</h1><h2 id="Insert-编辑模式"><a href="#Insert-编辑模式" class="headerlink" title="Insert 编辑模式"></a>Insert 编辑模式</h2><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a i o <span class="hljs-comment"># 进入编辑模式</span></span><br><span class="line">ESc <span class="hljs-comment"># 进入 normal 模式</span></span><br></pre></td></tr></table></figure><ul><li>i (insert)</li><li>a (append)</li><li>o (oppen a line below)</li></ul><h2 id="Command-模式"><a href="#Command-模式" class="headerlink" title="Command 模式"></a>Command 模式</h2><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">:wq <span class="hljs-comment"># 保存退出</span></span><br><span class="line">:vs <span class="hljs-comment"># vertical split 横向分频</span></span><br><span class="line">:sp <span class="hljs-comment"># 纵向分频</span></span><br><span class="line">:% s/foo/bar/g <span class="hljs-comment"># 全局替换</span></span><br><span class="line">:h option-list <span class="hljs-comment"># 查找所有设置选项</span></span><br></pre></td></tr></table></figure><h2 id="Visual-可视-模式"><a href="#Visual-可视-模式" class="headerlink" title="Visual (可视)模式"></a>Visual (可视)模式</h2><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">v <span class="hljs-comment"># 进入 visual 模式</span></span><br><span class="line">V <span class="hljs-comment"># 选择行</span></span><br><span class="line">ctrl v <span class="hljs-comment"># 进行快选择</span></span><br></pre></td></tr></table></figure><h1 id="如何快速纠错"><a href="#如何快速纠错" class="headerlink" title="如何快速纠错"></a>如何快速纠错</h1><p>a/i/o 进入插入模式</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ctrl h <span class="hljs-comment"># 删除上一个字符</span></span><br><span class="line">ctrl w <span class="hljs-comment"># 删除上一个单词</span></span><br><span class="line">ctrl u <span class="hljs-comment"># 删除当前行</span></span><br></pre></td></tr></table></figure><p>快速切换 Insert 和 Normal</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ctrl c / ctrl [ <span class="hljs-comment"># 代替 Esc</span></span><br><span class="line">gi <span class="hljs-comment"># 快速跳转到你最后一次编辑的地方并进入插入模式</span></span><br></pre></td></tr></table></figure><p>使用 hjkl 移动</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">h <span class="hljs-comment"># 左</span></span><br><span class="line">j <span class="hljs-comment"># 下</span></span><br><span class="line">k <span class="hljs-comment"># 上</span></span><br><span class="line">l <span class="hljs-comment"># 右</span></span><br></pre></td></tr></table></figure><h1 id="在单词之间飞舞"><a href="#在单词之间飞舞" class="headerlink" title="在单词之间飞舞"></a>在单词之间飞舞</h1><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">w/W <span class="hljs-comment"># 移到下一 word/WORD 开头</span></span><br><span class="line">e/E <span class="hljs-comment"># 下一个 word/WORD 尾</span></span><br><span class="line">b/B <span class="hljs-comment"># 回到上一个word/WORD 开头</span></span><br></pre></td></tr></table></figure><ul><li>word 指以非空白符分割的单词</li><li>WORD 以空白符分割的单词</li></ul><p>行间搜索移动</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f&#123;char&#125; <span class="hljs-comment"># 移到 char 字符上</span></span><br><span class="line">t <span class="hljs-comment"># 移到 char 前一个字符</span></span><br><span class="line">F <span class="hljs-comment"># 反过来搜索前面的字符</span></span><br></pre></td></tr></table></figure><ul><li>; 该行下一个</li><li>, 该行上一个</li></ul><p>水平移动</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0 <span class="hljs-comment"># 移到行首第一个字符</span></span><br><span class="line">^ <span class="hljs-comment"># 第一个非空白字符</span></span><br><span class="line">$ <span class="hljs-comment"># 移到行尾</span></span><br><span class="line">g_ <span class="hljs-comment"># 移到行尾非空白字符</span></span><br></pre></td></tr></table></figure><p>垂直移到</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">() <span class="hljs-comment"># 在句子间移动</span></span><br><span class="line">&#123;&#125; <span class="hljs-comment"># 在段落间移到</span></span><br></pre></td></tr></table></figure><ul><li>插件 easy-motion</li></ul><p>页面移动</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">gg、G <span class="hljs-comment"># 文件开头/结尾</span></span><br><span class="line">ctrl o <span class="hljs-comment"># 快速返回</span></span><br><span class="line"></span><br><span class="line">H/M/L <span class="hljs-comment"># 跳到屏幕开头(Head)中间(Middle)结尾(Lower)</span></span><br><span class="line">ctrl u <span class="hljs-comment"># 上翻页</span></span><br><span class="line">ctrl f <span class="hljs-comment"># 下翻页</span></span><br><span class="line">zz <span class="hljs-comment"># 把屏幕置为中间</span></span><br></pre></td></tr></table></figure><h1 id="增删查改"><a href="#增删查改" class="headerlink" title="增删查改"></a>增删查改</h1><p>增</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a/i/o</span><br><span class="line">A/I/O</span><br></pre></td></tr></table></figure><p>快速删除</p><figure class="highlight bash hljs"><figcaption><span>normal 模式下</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x <span class="hljs-comment"># 快速删一个字符</span></span><br><span class="line">d <span class="hljs-comment"># 删除</span></span><br><span class="line">daw <span class="hljs-comment"># 删除一个单词</span></span><br></pre></td></tr></table></figure><ul><li>d x 可以搭配数字执行多次</li></ul><p>快速修改</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r(replace) c(change) s(substitute) <span class="hljs-comment"># 常用</span></span><br></pre></td></tr></table></figure><ul><li>normal 下 r 可以替换一个字符，s 替换并进入插入模式</li><li>使用 c 配合文本对象可以快速进行修改</li></ul><p>查询</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/ <span class="hljs-comment"># 前向搜索</span></span><br><span class="line">? <span class="hljs-comment"># 反向搜索</span></span><br></pre></td></tr></table></figure><ul><li>n/N 跳转上一个或者上一个匹配</li><li><ul><li>或者 # 进行当前单词的前向和后向匹配</li></ul></li></ul><h1 id="替换命令"><a href="#替换命令" class="headerlink" title="替换命令"></a>替换命令</h1><p>substitute</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:[range]s[ubsitite]/&#123;pattern&#125;/&#123;string&#125;/[flags]</span><br></pre></td></tr></table></figure><ul><li>range 范围(:10,20),10-20行,% 全部</li><li>pattern 要替换的模式</li><li>string 是替换后的文本</li></ul><h2 id="替换标志位"><a href="#替换标志位" class="headerlink" title="替换标志位"></a>替换标志位</h2><p>Flags 常用标志</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">g(global) <span class="hljs-comment"># 全局</span></span><br><span class="line">c(confirm) <span class="hljs-comment"># 表示确认，可以确认或拒绝修改</span></span><br><span class="line">n(number) <span class="hljs-comment"># 报告匹配到的次数而不替换，可以用来匹配次数</span></span><br></pre></td></tr></table></figure><ul><li>:1,6 s/self// 查询1-6行有几个 self</li><li>:% s/&lt;quack&gt;/jiao/g 替换所有 quack 为 jiao</li></ul><h1 id="Buffer-Windows-Tab"><a href="#Buffer-Windows-Tab" class="headerlink" title="Buffer Windows Tab"></a>Buffer Windows Tab</h1><p>文件操作相关</p><ol><li>Buffer 是打开的一个文件的内存缓冲区</li><li>窗口是 Buffer 可视化的分割区域</li><li>Tab 可以组织窗口为一个工作区</li></ol><h2 id="在-Buffer-之间切换"><a href="#在-Buffer-之间切换" class="headerlink" title="在 Buffer 之间切换"></a>在 Buffer 之间切换</h2><ol><li>使用 :ls 列举当前缓冲区，后 :b n跳转到第 n 个</li><li>:bpre :bnext :bfirst :blast</li><li>或者 :b buffer_name 加上 tab 补全来跳转</li></ol><h2 id="Windows-窗口"><a href="#Windows-窗口" class="headerlink" title="Windows 窗口"></a>Windows 窗口</h2><ol><li><ctrl w>s 水平分割</ctrl></li><li><ctrl w>v 垂直分割</ctrl></li><li>或者 :sp :vs</li></ol><p><img src="https://raw.githubusercontent.com/ivitan/Picture/master/window.png" alt><br><img src="https://raw.githubusercontent.com/ivitan/Picture/master/tab.png" alt></p><h1 id="宏-macro"><a href="#宏-macro" class="headerlink" title="宏(macro)"></a>宏(macro)</h1><p>可以看做一系列命令合集</p><h2 id="How"><a href="#How" class="headerlink" title="How"></a>How</h2><ol><li>q 录制、技术录制</li><li>q{register} 选择要保存的寄存器，把录制的命令保存其中</li><li>@{register} 回放寄存器中的一系列命令<figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">q I<span class="hljs-string">" A"</span></span><br><span class="line"></span><br><span class="line">VG <span class="hljs-comment"># 全选</span></span><br><span class="line">: I<span class="hljs-string">"</span></span><br><span class="line"><span class="hljs-string">:t # 重复上一命令</span></span><br><span class="line"><span class="hljs-string">:A"</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="常见的补全"><a href="#常见的补全" class="headerlink" title="常见的补全"></a>常见的补全</h1><table><thead><tr><th align="left">命令</th><th align="left">补全类型</th></tr></thead><tbody><tr><td align="left">ctrl n</td><td align="left">普通关键字</td></tr><tr><td align="left">ctrl x/n</td><td align="left">当前缓冲区关键字</td></tr><tr><td align="left">ctrl x/i</td><td align="left">包含文件关键字</td></tr><tr><td align="left">ctrl x/J</td><td align="left">标签文件关键字</td></tr><tr><td align="left">ctrl x/k</td><td align="left">字典查找</td></tr><tr><td align="left">ctrl x/l</td><td align="left">整行补全</td></tr><tr><td align="left">ctrl x/f</td><td align="left">文件名补全</td></tr><tr><td align="left">ctrl x/o</td><td align="left">全能(Omni)补全</td></tr></tbody></table><hr><h2 id="最常用"><a href="#最常用" class="headerlink" title="最常用"></a>最常用</h2><ol><li>ctrl n 和 ctrl p 补全单词</li><li>ctrl x 和 ctrl f 补全文件名</li><li>ctrl x 和 ctrl o 补全代码 </li></ol><h1 id="更换配色"><a href="#更换配色" class="headerlink" title="更换配色"></a>更换配色</h1><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">:colorscheme <span class="hljs-comment"># 显示当前主题配色</span></span><br><span class="line">:colorscheme &lt;ctrl+d&gt; <span class="hljs-comment"># 显示所有配色</span></span><br><span class="line">:colorscheme 配色名 <span class="hljs-comment"># 修改配色</span></span><br></pre></td></tr></table></figure><h1 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h1><h2 id="基本映射"><a href="#基本映射" class="headerlink" title="基本映射"></a>基本映射</h2><ul><li>normal 模式下(leadser键即 <code>,</code> )</li></ul><ol><li>map 可以实现映射，<code>:map -x</code> 然后按下 - 就会删除一个字符</li><li><code>:map &lt;space&gt; viw</code> 按下空格键时选中整个单词</li><li>`:map <c-d> dd 删除<ul><li>消除映射 <code>unmap -</code></li><li><code>imap &lt;c-d&gt; &lt;Esc&gt;ddi</code> insert 模式映射 ctrl+d 删除一行</li></ul></c-d></li></ol><ul><li>模式映射映射</li></ul><ol><li>用 namap/vmap/imap 定义映射只在normal/visual/insert分别有效<ul><li><code>:vmap \U</code> 把 visusal 模式下选中的文本大小(u/U转换大小写)</li></ul></li></ol><h2 id="递归与非递归映射"><a href="#递归与非递归映射" class="headerlink" title="递归与非递归映射"></a>递归与非递归映射</h2><p>*map 系列有递归风险,如果安装了一个插件，插件映射了同一个按键的不同行为，有冲突就会有一个失效。</p><p>非递归映射</p><ol><li>*map 对应的 nnoremap/vnoremao/inoremap</li><li>任何时候都建议使用非递归映射</li></ol><p>示例</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">let</span> mapleader = <span class="hljs-string">","</span></span><br><span class="line">inoremap &lt;leader&gt;w &lt;Esc&gt;:w&lt;cr&gt; <span class="hljs-comment"># 插入模式保存</span></span><br><span class="line">inoremap jj &lt;Esc&gt; <span class="hljs-comment"># 使用jj直接进入 normal</span></span><br><span class="line"><span class="hljs-comment"># 使用 leader+w 直接保存</span></span><br><span class="line">inoremap &lt;leader&gt;w &lt;Esc&gt;:w&lt;cr&gt;</span><br><span class="line">noremap &lt;leader&gt;w :w&lt;cr&gt;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 切换 Buffer</span></span><br><span class="line">nnoremap &lt;slient&gt; [b :bprevious&lt;CR&gt;</span><br><span class="line">nnoremap &lt;slient&gt; [n :bnext&lt;CR&gt;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 分屏</span></span><br><span class="line">noremap &lt;C-h&gt; &lt;C-w&gt;h</span><br><span class="line">noremap &lt;C-j&gt; &lt;C-w&gt;j</span><br><span class="line">noremap &lt;C-k&gt; &lt;C-w&gt;k</span><br><span class="line">noremap &lt;C<span class="hljs-_">-l</span>&gt; &lt;C-w&gt;l</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># json 格式化</span></span><br><span class="line">comr FormatJSON %!python3 -m json.tool</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># sudo to write</span></span><br><span class="line">cnoremap w!! w !sudo tee % &gt;/dev/null</span><br></pre></td></tr></table></figure><h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><h2 id="常见的插件管理器"><a href="#常见的插件管理器" class="headerlink" title="常见的插件管理器"></a>常见的插件管理器</h2><p>vim-plug,Vundle,Pathogen,Deim </p><h2 id="vim-plug"><a href="#vim-plug" class="headerlink" title="vim-plug"></a><a href="https://github.com/junegunn/vim-plug" target="_blank" rel="noopener">vim-plug</a></h2><ul><li>安装 vim-plug</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fLo ~/.vim/<span class="hljs-built_in">autoload</span>/plug.vim --create-dirs \</span><br><span class="line">https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span><br></pre></td></tr></table></figure><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight bash hljs"><figcaption><span>.vimrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">call plug<span class="hljs-comment">#begin('~/.vim/plugged')</span></span><br><span class="line">Plug <span class="hljs-string">'mhinz/vim-startify'</span> <span class="hljs-comment"># 插件</span></span><br><span class="line"><span class="hljs-string">" Initialize plugin system</span></span><br><span class="line"><span class="hljs-string">call plug#end()</span></span><br></pre></td></tr></table></figure><ul><li><code>source ~/.vimrc</code> 并 <code>:PlugInstall</code></li></ul><h2 id="vim-美观插件"><a href="#vim-美观插件" class="headerlink" title="vim 美观插件"></a>vim 美观插件</h2><ul><li>外观</li></ul><ol><li>修改启动界面: <a href="https://github.com/mhinz/vim-startify" target="_blank" rel="noopener">vim-startify</a></li><li>状态栏美化：<a href="https://github.com/vim-airline" target="_blank" rel="noopener">vim-airline</a></li><li>增加但代码缩进线条：<a href="https://github.com/yggdroot/indentline" target="_blank" rel="noopener">indentline</a></li></ol><ul><li>配色方案</li></ul><ol><li><a href="https://github.com/w0ng/vim-hybird" target="_blank" rel="noopener">vim-hybird</a></li><li><a href="https://github.com/altercation/vim-colors-solarized" target="_blank" rel="noopener">solarized</a></li><li><a href="https://github.com/morhetz/gruvbox" target="_blank" rel="noopener">grubbox</a></li></ol><h2 id="插件推荐网站"><a href="#插件推荐网站" class="headerlink" title="插件推荐网站"></a>插件推荐网站</h2><p><a href="https://vimawesome.com" target="_blank" rel="noopener">vimawesome</a></p><h2 id="文件目录和搜索插件"><a href="#文件目录和搜索插件" class="headerlink" title="文件目录和搜索插件"></a>文件目录和搜索插件</h2><ul><li>文件目录 <a href="https://github.com/scrooloose/nerdtree" target="_blank" rel="noopener">nerdtree</a></li></ul><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot; 查找文件所在位置</span><br><span class="line">nnoremap &lt;leader&gt;v :NERDTreeFind&lt;cr&gt;</span><br><span class="line">&quot; 切换设置</span><br><span class="line">nnoremap &lt;leader&gt;g :NERDTreeToggle&lt;cr&gt;</span><br></pre></td></tr></table></figure><ul><li><p>模糊搜索器 <a href="https://github.com/ctrlpvim/ctrlp.vim" target="_blank" rel="noopener">ctrip.vim</a></p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let g:ctrlp_map = &apos;&lt;c-p&gt;&apos;</span><br><span class="line">let g:ctrlp_cmd = &apos;CtrlP&apos;</span><br></pre></td></tr></table></figure><ul><li>Crtl + P 后输入要搜索的内容</li></ul></li><li><p>模糊搜索<a href="https://github.com/junegunn/fzf.vim" target="_blank" rel="noopener">fzf.vim</a></p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Files . <span class="hljs-comment"># 搜索当前目录</span></span><br><span class="line">:Ag content <span class="hljs-comment"># 搜索字符串</span></span><br></pre></td></tr></table></figure></li><li><p>快速跳转位置插件 <a href="https://github.com/easymotion/vim-easymotion" target="_blank" rel="noopener">vim-easymotion</a></p></li></ul><p>映射</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unmap ss &lt;Plus&gt;(easymotion-s2)</span><br></pre></td></tr></table></figure><ul><li>修改成对内容 <a href="https://github.com/tpope/vim-surround" target="_blank" rel="noopener">vim-surround</a></li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ds <span class="hljs-comment"># delete a surrounding</span></span><br><span class="line">cs <span class="hljs-comment"># change a surrounding</span></span><br><span class="line">ys <span class="hljs-comment"># you add a surrounding</span></span><br></pre></td></tr></table></figure><ul><li>替换　<a href="https://github.com/brooth/far.vim" target="_blank" rel="noopener">far.vim</a><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim duck.go gua.py</span><br><span class="line">:Far [替换] [替换成的] **/*.py</span><br></pre></td></tr></table></figure></li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="浏览代码"><a href="#浏览代码" class="headerlink" title="浏览代码"></a>浏览代码</h3><p><a href="https://github.com/majutsushi/tagbar" target="_blank" rel="noopener">targbar</a></p><figure class="highlight bash hljs"><figcaption><span>vimrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nonormal &lt;leader&gt;t :TagbarToggle&lt;CR&gt;</span><br></pre></td></tr></table></figure><p><a href="https://github.com/lfv89/vim-interestingwords" target="_blank" rel="noopener">vim-interestingwords</a> 可以高亮单词</p><h3 id="补全"><a href="#补全" class="headerlink" title="补全"></a>补全</h3><p>补全插件</p><ol><li><a href="https//github.com/shougo/deoplete.nvim">deoplete.nvim</a> 多语言，模糊搜索</li><li><a href="https://github.com/neoclide/coc.nvim" target="_blank" rel="noopener">coc.vim</a> 多语言插件支持</li></ol><p>快速注释<br><a href="https://github.com/tpope/vim-commentary" target="_blank" rel="noopener">vim-commentary</a> <code>gc</code> 注释或取消注释</p><h2 id="格式化与静态检查"><a href="#格式化与静态检查" class="headerlink" title="格式化与静态检查"></a>格式化与静态检查</h2><p>格式化</p><p><a href="https://github.com/sbdchd/neoformat" target="_blank" rel="noopener">Neoformat</a> 需要安装对应语言的格式化库，python的autopep8,js的prettier等</p><p>静态检查Lint</p><p>neomake、<a href="https://github.com/w0rp/ale" target="_blank" rel="noopener">ale</a> 需要安装对应语言的 lint 库如 eslint/pylint/golint</p><h2 id="Python-相关"><a href="#Python-相关" class="headerlink" title="Python 相关"></a>Python 相关</h2><p><a href="https://github.com/python-mode/python-mode" target="_blank" rel="noopener">Python-mode</a> 具有基本的补全，跳转，重构，格式化功能</p><figure class="highlight bash hljs"><figcaption><span>.vimer</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-string">" Python-mode</span></span><br><span class="line"><span class="hljs-string">let g:pymode_python =  'python3'</span></span><br><span class="line"><span class="hljs-string">let g:pymode_trim_whitespaces = 1</span></span><br><span class="line"><span class="hljs-string">let g:pymode_doc = 1</span></span><br><span class="line"><span class="hljs-string">let g:pymode_doc_bind = 'k'</span></span><br><span class="line"><span class="hljs-string">let g:pymode_rope_goto_definition_bind = "</span>&lt;C-J&gt;<span class="hljs-string">"</span></span><br><span class="line"><span class="hljs-string">let g:pymode_lint = `</span></span><br><span class="line"><span class="hljs-string">let g:pymode_lint_checkers = ['pyflakers','pep8','mccabe','plylint']</span></span><br><span class="line"><span class="hljs-string">let g:pymode_options_max_line_length = 120</span></span><br></pre></td></tr></table></figure><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><p><a href="https://github.com/tppope/vim-fugitive" target="_blank" rel="noopener">Fugitive</a></p><ul><li>命令 <code>:Gedit</code>,<code>:Gdiff</code>,<code>:Gblame</code>,<code>:Gcommit</code> 等</li></ul><p><a href="https://github.com/airblade/vim-gitgutter" target="_blank" rel="noopener">vim-gitgutter</a> 显示文件变动</p><p><a href="https://github.com/junegunn/gv.vim" target="_blank" rel="noopener">gv.vim</a> <code>:GV</code> 查看提交记录</p><hr><p><strong>学习视频</strong></p><ul><li><a href="https://www.imooc.com/learn/1129" target="_blank" rel="noopener">玩转Vim 从放弃到爱不释手</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Vim 重新学习笔记&lt;/p&gt;
    
    </summary>
    
      <category term="Coding" scheme="https://vitan.me/categories/Coding/"/>
    
    
      <category term="Linux" scheme="https://vitan.me/tags/Linux/"/>
    
      <category term="Vim" scheme="https://vitan.me/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>Cat 追加与覆盖</title>
    <link href="https://vitan.me/posts/CatEOF.html"/>
    <id>https://vitan.me/posts/CatEOF.html</id>
    <published>2019-05-16T02:16:23.000Z</published>
    <updated>2019-12-10T01:38:54.142Z</updated>
    
    <content type="html"><![CDATA[<p>Cat  追加与覆盖</p><a id="more"></a><h1 id="追加"><a href="#追加" class="headerlink" title="追加"></a>追加</h1><ul><li>cat &lt;<eof>&gt;</eof></li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#!/bin/bash</span></span><br><span class="line">cat &lt;&lt; EOF &gt;&gt; cat.txt</span><br><span class="line">vitan.me</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>cat &gt;&gt;</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#!/bin/bash</span></span><br><span class="line">cat &gt;&gt; cat.txt &lt;&lt; EOF</span><br><span class="line">vitan.me</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h1 id="覆盖"><a href="#覆盖" class="headerlink" title="覆盖"></a>覆盖</h1><ul><li>cat &lt;<eof>&gt;</eof></li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#!/bin/bash</span></span><br><span class="line">cat &lt;&lt; EOF &gt; cat.txt</span><br><span class="line">vitan.me</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>cat &gt;&gt;</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#!/bin/bash</span></span><br><span class="line">cat &gt; cat.txt &lt;&lt; EOF</span><br><span class="line">vitan.me</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h1 id="使用变量"><a href="#使用变量" class="headerlink" title="使用变量"></a>使用变量</h1><ul><li>Warnning<br>追加和覆盖若要使用变量必须加 <code>\</code> 如 <strong><code>\$var</code></strong></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Cat  追加与覆盖&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://vitan.me/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://vitan.me/tags/Linux/"/>
    
      <category term="Shell" scheme="https://vitan.me/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>Terminal Socks5 Proxy</title>
    <link href="https://vitan.me/posts/CurlSocks5.html"/>
    <id>https://vitan.me/posts/CurlSocks5.html</id>
    <published>2019-05-14T14:17:52.000Z</published>
    <updated>2019-12-10T01:38:54.142Z</updated>
    
    <content type="html"><![CDATA[<p>Some Socks5 Proxy setting</p><a id="more"></a><h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy socks5://127.0.0.1:1080</span><br><span class="line">git config --global https.proxy socks5://127.0.0.1:1080</span><br><span class="line">git config --global --<span class="hljs-built_in">unset</span> http.proxy</span><br><span class="line">git config --global --<span class="hljs-built_in">unset</span> https.proxy</span><br></pre></td></tr></table></figure><h1 id="Curl"><a href="#Curl" class="headerlink" title="Curl"></a>Curl</h1><figure class="highlight bash hljs"><figcaption><span>.curlrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">echo</span> <span class="hljs-string">'socks5 = "127.0.0.1:1080"'</span> &gt;&gt; ~/.curlrc</span><br></pre></td></tr></table></figure><ul><li>ALL_PROXY</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">export</span> ALL_PROXY=socks5://127.0.0.1:1080</span><br></pre></td></tr></table></figure><h1 id="Wget"><a href="#Wget" class="headerlink" title="Wget"></a>Wget</h1><figure class="highlight bash hljs"><figcaption><span>EVN Config</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xport http_proxy=http://127.0.0.1:1080</span><br><span class="line">xport http_proxy=httpS://127.0.0.1:1080</span><br></pre></td></tr></table></figure><h2 id="wgetrc"><a href="#wgetrc" class="headerlink" title=".wgetrc"></a>.wgetrc</h2><figure class="highlight bash hljs"><figcaption><span>~/.wgetrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">https_proxy = http://127.0.0.1:8087/</span><br><span class="line">http_proxy = http://127.0.0.1:8087/</span><br><span class="line">ftp_proxy = http://127.0.0.1:8087/</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># If you do not want to use proxy at all, set this to off.</span></span><br><span class="line">use_proxy = on</span><br></pre></td></tr></table></figure><p>-e</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c -r -np -k -L -p -e <span class="hljs-string">"http_proxy=http://127.0.0.1:1080"</span> url</span><br></pre></td></tr></table></figure><h1 id="Pip"><a href="#Pip" class="headerlink" title="Pip"></a>Pip</h1><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S proxychains</span><br></pre></td></tr></table></figure><ul><li>vim /etc/proxychains.conf</li></ul><figure class="highlight bash hljs"><figcaption><span>/etc/proxychains.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[ProxyList]</span><br><span class="line">socks5  127.0.0.1 1080</span><br></pre></td></tr></table></figure><ul><li>usage</li></ul><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains pip install &lt;package_name&gt;</span><br></pre></td></tr></table></figure><hr><p><strong>参考</strong></p><ul><li><a href="https://my.oschina.net/u/2306127/blog/791258" target="_blank" rel="noopener">为wget使用代理</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Some Socks5 Proxy setting&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://vitan.me/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://vitan.me/tags/Linux/"/>
    
  </entry>
  
</feed>
